name: 'PR Validation - UI & Theme Compliance'

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

jobs:
  # Stage 1: Basic Code Quality
  code-quality:
    name: 'Code Quality & TypeScript'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: TypeScript type checking
        run: npm run type-check
        
      - name: ESLint validation
        run: npm run lint
        
      - name: Prettier formatting check
        run: npm run format:check
        
      - name: Unit tests
        run: npm run test:run
        
      - name: Test coverage check
        run: npm run test:coverage
        env:
          COVERAGE_THRESHOLD: 80

  # Stage 2: Theme & UI Compliance
  theme-compliance:
    name: 'Theme & UI Compliance'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: code-quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for baseline comparison
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Theme system validation
        run: npm run validate:theme
        
      - name: Build application
        run: npm run build
        
      - name: Bundle size analysis
        run: npm run validate:bundle
        env:
          BUNDLE_BASELINE_BRANCH: ${{ github.base_ref || 'main' }}
        
      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bundle-analysis
          path: |
            bundle-size-report.json
            bundle-baseline.json
          retention-days: 30

  # Stage 3: Storybook Validation
  storybook-validation:
    name: 'Storybook Documentation'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: code-quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Validate Storybook stories
        run: npm run validate:storybook
        
      - name: Build Storybook
        run: npm run build-storybook
        
      - name: Run Storybook tests
        run: npm run storybook:test:ci
        
      - name: Upload Storybook validation report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: storybook-validation
          path: |
            storybook-validation-report.json
            storybook-static/
          retention-days: 30

  # Stage 4: Accessibility Compliance
  accessibility-validation:
    name: 'Accessibility (WCAG 2.1 AA)'
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: storybook-validation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Build Storybook
        run: npm run build-storybook
        
      - name: Run accessibility validation
        run: npm run validate:a11y
        env:
          STORYBOOK_PORT: 6006
          
      - name: Upload accessibility report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report
          path: |
            accessibility-report.json
          retention-days: 30

  # Stage 5: Visual Regression Testing
  visual-regression:
    name: 'Visual Regression Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: storybook-validation
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run Chromatic
        uses: chromaui/action@v11
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          configFile: chromatic.config.json
          exitOnceUploaded: true
          onlyChanged: true
          externals: |
            - 'public/**'
            - '.storybook/**'
            - 'src/**/*.stories.tsx'

  # Stage 6: Performance & Integration
  performance-validation:
    name: 'Performance & Integration Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [theme-compliance, accessibility-validation]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install
        
      - name: Build application
        run: npm run build
        
      - name: Run E2E tests
        run: cd migration-tests && npm ci && npm run test:e2e
        env:
          BASE_URL: http://localhost:4173
          
      - name: Performance benchmarks
        run: |
          # Start production server
          npm run preview &
          sleep 10
          
          # Run Lighthouse CI
          npx lighthouse-ci autorun
          
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            .lighthouseci/
            migration-tests/reports/
          retention-days: 30

  # Final Stage: Validation Summary
  validation-summary:
    name: 'Validation Summary'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [theme-compliance, storybook-validation, accessibility-validation, performance-validation]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Generate validation summary
        run: |
          echo "# 🎯 Pokemon Collection Frontend - PR Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check job statuses
          THEME_STATUS="${{ needs.theme-compliance.result }}"
          STORYBOOK_STATUS="${{ needs.storybook-validation.result }}"
          A11Y_STATUS="${{ needs.accessibility-validation.result }}"
          PERF_STATUS="${{ needs.performance-validation.result }}"
          
          echo "## 📊 Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Theme compliance
          if [ "$THEME_STATUS" == "success" ]; then
            echo "✅ **Theme & UI Compliance**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Theme & UI Compliance**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Storybook validation
          if [ "$STORYBOOK_STATUS" == "success" ]; then
            echo "✅ **Storybook Documentation**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Storybook Documentation**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Accessibility validation
          if [ "$A11Y_STATUS" == "success" ]; then
            echo "✅ **Accessibility (WCAG 2.1 AA)**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Accessibility (WCAG 2.1 AA)**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Performance validation
          if [ "$PERF_STATUS" == "success" ]; then
            echo "✅ **Performance & Integration**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Performance & Integration**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Add bundle size info if available
          if [ -f "bundle-analysis/bundle-size-report.json" ]; then
            echo "## 📦 Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat bundle-analysis/bundle-size-report.json | jq '.summary' >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Add accessibility summary if available
          if [ -f "accessibility-report/accessibility-report.json" ]; then
            echo "## ♿ Accessibility Summary" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat accessibility-report/accessibility-report.json | jq '.summary' >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "## 📚 Resources" >> $GITHUB_STEP_SUMMARY
          echo "- [Contributing Guidelines](./CONTRIBUTING.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [Theme System Documentation](./docs/THEMING.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [Component Library Storybook](https://main--pokemon-collection-storybook.netlify.app/)" >> $GITHUB_STEP_SUMMARY
          
      - name: Check overall validation status
        run: |
          THEME_STATUS="${{ needs.theme-compliance.result }}"
          STORYBOOK_STATUS="${{ needs.storybook-validation.result }}"
          A11Y_STATUS="${{ needs.accessibility-validation.result }}"
          PERF_STATUS="${{ needs.performance-validation.result }}"
          
          if [ "$THEME_STATUS" != "success" ] || [ "$STORYBOOK_STATUS" != "success" ] || [ "$A11Y_STATUS" != "success" ] || [ "$PERF_STATUS" != "success" ]; then
            echo "❌ One or more validation checks failed"
            exit 1
          else
            echo "✅ All validation checks passed!"
          fi

  # Auto-comment on PR (only on failure)
  pr-comment:
    name: 'PR Comment'
    runs-on: ubuntu-latest
    needs: validation-summary
    if: failure() && github.event_name == 'pull_request'
    
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const pull_number = context.issue.number;
            
            const comment = `
            ## 🚨 PR Validation Failed
            
            Your pull request did not pass all required validation checks. Please review the failed checks and address the issues:
            
            ### Required Actions:
            1. **Fix Theme Compliance**: Ensure no hardcoded styles, all colors use CSS variables
            2. **Update Storybook**: Add stories for new/modified shared UI components  
            3. **Fix Accessibility**: Address WCAG 2.1 AA compliance violations
            4. **Optimize Performance**: Reduce bundle size impact and fix performance regressions
            
            ### Resources:
            - [Contributing Guidelines](https://github.com/${owner}/${repo}/blob/main/CONTRIBUTING.md)
            - [Theme System Documentation](https://github.com/${owner}/${repo}/blob/main/docs/THEMING.md)
            
            Once all issues are resolved, the checks will automatically re-run when you push new commits.
            `;
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pull_number,
              body: comment
            });