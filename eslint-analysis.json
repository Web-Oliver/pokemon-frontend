[{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/App.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ThemeDebugger' is defined but never used. Allowed unused vars must match /^_/u.","line":18,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":18,"endColumn":23}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Main App Component\n *\n * Root application component implementing basic routing and layout structure.\n * Following CLAUDE.md guidelines for layered architecture and beautiful design.\n *\n * Phase 4.2: Basic routing implementation with MainLayout integration\n */\n\nimport { lazy, Suspense, useEffect, useState, useTransition } from 'react';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { log } from './utils/logger';\nimport { Toaster } from 'react-hot-toast';\nimport LoadingSpinner from './components/common/LoadingSpinner';\nimport { queryClient } from './lib/queryClient';\nimport { ComposedThemeProvider as ThemeProvider } from './contexts/theme/ComposedThemeProvider';\nimport { ThemeDebugger } from './components/theme';\n// Cache debugging removed - overengineered development utility not needed\n\n// Layout\nimport MainLayout from './components/layouts/MainLayout';\n\n// Context7 Lazy Loading Strategy - Performance Optimized Code Splitting\n// Following React.dev patterns for optimal bundle performance\n// Critical path components (loaded immediately with Suspense boundaries)\nconst Dashboard = lazy(() => import('./pages/Dashboard'));\nconst Collection = lazy(() => import('./pages/Collection'));\n\n// Secondary features (lazy loaded with prefetch hints)\nconst CollectionItemDetail = lazy(\n  () =>\n    import(/* webpackChunkName: \"item-detail\" */ './pages/CollectionItemDetail')\n);\nconst AddEditItem = lazy(\n  () => import(/* webpackChunkName: \"forms\" */ './pages/AddEditItem')\n);\n\n// Search features (bundled together for caching)\nconst SetSearch = lazy(\n  () => import(/* webpackChunkName: \"search-features\" */ './pages/SetSearch')\n);\nconst SealedProductSearch = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"search-features\" */ './pages/SealedProductSearch'\n    )\n);\n\n// Auction features (bundled together for better caching)\nconst Auctions = lazy(\n  () => import(/* webpackChunkName: \"auction-features\" */ './pages/Auctions')\n);\nconst AuctionDetail = lazy(\n  () =>\n    import(/* webpackChunkName: \"auction-features\" */ './pages/AuctionDetail')\n);\nconst CreateAuction = lazy(\n  () =>\n    import(/* webpackChunkName: \"auction-features\" */ './pages/CreateAuction')\n);\nconst AuctionEdit = lazy(\n  () => import(/* webpackChunkName: \"auction-features\" */ './pages/AuctionEdit')\n);\n\n// Analytics and heavy features (separate chunks)\nconst SalesAnalytics = lazy(\n  () => import(/* webpackChunkName: \"analytics\" */ './pages/SalesAnalytics')\n);\nconst Activity = lazy(\n  () => import(/* webpackChunkName: \"activity\" */ './pages/Activity')\n);\nconst DbaExport = lazy(\n  () => import(/* webpackChunkName: \"export\" */ './pages/DbaExport')\n);\n\n// Context7 Pattern: Main App component with useTransition for smooth navigation\nfunction App() {\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\n  const [isPending, startTransition] = useTransition();\n\n  // Test logger functionality\n  log('App loaded!');\n\n  // Test API client error handling removed for cleaner console\n\n  // Context7 Pattern: Navigation with transition for better UX\n  useEffect(() => {\n    const handlePopState = () => {\n      startTransition(() => {\n        setCurrentPath(window.location.pathname);\n      });\n    };\n\n    window.addEventListener('popstate', handlePopState);\n\n    return () => {\n      window.removeEventListener('popstate', handlePopState);\n    };\n  }, []);\n\n  // Route configuration - simple routing without external router library\n  const renderPage = () => {\n    // Handle dynamic auction routes\n    if (currentPath.startsWith('/auctions/') && currentPath !== '/auctions') {\n      const routePart = currentPath.split('/auctions/')[1];\n      if (routePart === 'create') {\n        return <CreateAuction />;\n      }\n      // Handle edit routes: /auctions/{id}/edit\n      if (routePart && routePart.includes('/edit')) {\n        const auctionId = routePart.split('/edit')[0];\n        return <AuctionEdit auctionId={auctionId} />;\n      }\n      if (routePart && !routePart.includes('/')) {\n        return <AuctionDetail auctionId={routePart} />;\n      }\n    }\n\n    // Handle edit routes: /collection/edit/{type}/{id}\n    if (currentPath.startsWith('/collection/edit/')) {\n      const pathParts = currentPath.split('/');\n      if (pathParts.length === 5) {\n        // /collection/edit/{type}/{id}\n        const [, , , type, id] = pathParts;\n        if ((type === 'psa' || type === 'raw' || type === 'sealed') && id) {\n          return <AddEditItem />;\n        }\n      }\n    }\n\n    // Handle dynamic collection item detail routes\n    if (\n      currentPath.startsWith('/collection/') &&\n      currentPath !== '/collection' &&\n      currentPath !== '/collection/add'\n    ) {\n      const pathParts = currentPath.split('/');\n      if (pathParts.length === 4) {\n        // /collection/{type}/{id}\n        const [, , type, id] = pathParts;\n        if ((type === 'psa' || type === 'raw' || type === 'sealed') && id) {\n          return <CollectionItemDetail />;\n        }\n      }\n    }\n\n    switch (currentPath) {\n      case '/':\n      case '/dashboard':\n        return <Dashboard />;\n      case '/collection':\n        return <Collection />;\n      case '/collection/add':\n        return <AddEditItem />;\n      case '/add-item':\n        return <AddEditItem />;\n      case '/sets':\n      case '/set-search':\n        return <SetSearch />;\n      case '/sealed-products-search':\n        return <SealedProductSearch />;\n      case '/auctions':\n        return <Auctions />;\n      case '/sales-analytics':\n      case '/analytics':\n        return <SalesAnalytics />;\n      case '/activity':\n        return <Activity />;\n      case '/dba-export':\n        return <DbaExport />;\n      default:\n        // Default to dashboard for root and unknown routes\n        return <Dashboard />;\n    }\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <MainLayout>\n          {/* Context7 Pattern: Suspense boundary with transition state */}\n          <Suspense\n            fallback={\n              <div\n                className={`flex items-center justify-center min-h-[60vh] transition-opacity duration-200 ${\n                  isPending ? 'opacity-50' : 'opacity-100'\n                }`}\n              >\n                <LoadingSpinner size=\"lg\" />\n              </div>\n            }\n          >\n            {renderPage()}\n          </Suspense>\n        </MainLayout>\n        {process.env.NODE_ENV === 'development' && (\n          <>\n            <ReactQueryDevtools\n              initialIsOpen={false}\n              buttonPosition=\"bottom-left\"\n              position=\"bottom\"\n            />\n            {/* ThemeDebugger temporarily disabled during refactoring */}\n          </>\n        )}\n        <Toaster\n          position=\"top-right\"\n          reverseOrder={false}\n          gutter={8}\n          containerClassName=\"\"\n          containerStyle={{}}\n          toastOptions={{\n            // Global default options for all toasts\n            duration: 4000,\n            style: {\n              fontFamily:\n                'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif',\n              fontSize: '14px',\n              fontWeight: '500',\n              borderRadius: '8px',\n              boxShadow:\n                '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n            },\n            success: {\n              duration: 4000,\n              iconTheme: {\n                primary: '#16A34A',\n                secondary: '#FFFFFF',\n              },\n            },\n            error: {\n              duration: 5000,\n              iconTheme: {\n                primary: '#DC2626',\n                secondary: '#FFFFFF',\n              },\n            },\n          }}\n        />\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/activityApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/auctionsApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/cardMarket/cardMarketApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/cardsApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/collectionApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/dbaSelectionApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/exportApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/genericApiOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/productsApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/salesApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/searchApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/setProductsApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/setsApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/statusApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/unifiedApiClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/api/uploadApi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/ImageUploader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/PriceHistoryDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/Button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/ConfirmModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/DateRangeFilter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormActionButtons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormElements/ErrorMessage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormElements/FormWrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormElements/Glow.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormElements/HelperText.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormElements/Label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormElements/Shimmer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormElements/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/FormHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/ImageProductView.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/ImageSlideshow.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/Input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/LoadingSpinner.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'visualTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":34,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":34,"endColumn":22}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Context7 Award-Winning Loading Spinner Component with Theme Integration\n * Ultra-premium loading spinner with stunning visual hierarchy and micro-animations\n * Features glass-morphism, premium gradients, and award-winning design patterns\n *\n * Following CLAUDE.md + Context7 principles:\n * - Award-winning visual design with micro-animations\n * - Premium gradient effects and glass-morphism\n * - Context7 design system compliance\n * - Stunning pulsing and rotation effects\n * - Theme Integration: Uses unified theme system for consistent styling\n */\n\nimport React from 'react';\nimport { useVisualTheme } from '../../contexts/theme';\nimport { getElementTheme, ThemeColor } from '../../theme/formThemes';\n\nexport interface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  color?: 'blue' | 'gray' | 'green' | 'red' | 'yellow' | 'purple';\n  text?: string;\n  fullScreen?: boolean;\n  className?: string;\n  themeColor?: ThemeColor;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'md',\n  color = 'blue',\n  text,\n  fullScreen = false,\n  themeColor = 'dark',\n}) => {\n  const { visualTheme } = useVisualTheme();\n  const elementTheme = getElementTheme(themeColor);\n  const sizeClasses = {\n    sm: 'w-5 h-5',\n    md: 'w-10 h-10',\n    lg: 'w-16 h-16',\n    xl: 'w-20 h-20',\n  };\n\n  const colorClasses = {\n    blue: 'text-cyan-400',\n    gray: 'text-zinc-400',\n    green: 'text-emerald-400',\n    red: 'text-red-400',\n    yellow: 'text-amber-400',\n    purple: 'text-purple-400',\n  };\n\n  // Spinner classes are handled inline in the component\n\n  const containerClasses = fullScreen\n    ? 'fixed inset-0 flex items-center justify-center bg-zinc-950/80 backdrop-blur-sm z-50'\n    : 'flex items-center justify-center';\n\n  const textSizeClasses = {\n    sm: 'text-sm',\n    md: 'text-base',\n    lg: 'text-lg',\n    xl: 'text-xl',\n  };\n\n  const SpinnerElement = (\n    <div className={containerClasses}>\n      <div className=\"flex flex-col items-center\">\n        {/* Context7 Premium Loading Container */}\n        <div className=\"relative\">\n          {/* Multi-layer rotating rings with theme colors */}\n          <div\n            className={`absolute inset-0 rounded-full border-2 border-transparent bg-gradient-to-r ${elementTheme.gradient} animate-spin ${sizeClasses[size]} [clip-path:polygon(0%_0%,25%_0%,25%_25%,0%_25%)]`}\n          ></div>\n          <div\n            className={`absolute inset-1 rounded-full border border-transparent bg-gradient-to-l ${elementTheme.glow} animate-spin ${sizeClasses[size]} opacity-60 [clip-path:polygon(75%_75%,100%_75%,100%_100%,75%_100%)] [animation-duration:1.5s] [animation-direction:reverse]`}\n          ></div>\n\n          {/* Inner pulsing circle with enhanced glow */}\n          <div\n            className={`relative bg-zinc-900/95 backdrop-blur-sm rounded-full ${elementTheme.border} shadow-2xl flex items-center justify-center ${sizeClasses[size]} shadow-[0_0_20px_0_rgb(6,182,212,0.3)]`}\n          >\n            <div\n              className={`w-1/2 h-1/2 bg-gradient-to-br ${colorClasses[color]} rounded-full animate-pulse opacity-90 shadow-lg`}\n            ></div>\n          </div>\n\n          {/* Premium shimmer effect with enhanced animation */}\n          <div\n            className={`absolute inset-0 rounded-full bg-gradient-to-r ${elementTheme.glow} animate-ping opacity-30 ${sizeClasses[size]} [animation-delay:0.5s]`}\n          ></div>\n          <div\n            className={`absolute inset-0 rounded-full bg-gradient-to-r ${elementTheme.glow} animate-ping opacity-20 ${sizeClasses[size]} [animation-delay:1s]`}\n          ></div>\n        </div>\n\n        {text && (\n          <p\n            className={`mt-4 text-zinc-300 font-semibold tracking-wide ${textSizeClasses[size]} animate-pulse bg-gradient-to-r ${elementTheme.gradient} bg-clip-text text-transparent`}\n          >\n            {text}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n\n  return SpinnerElement;\n};\n\nexport default LoadingSpinner;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/LoadingStates.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/Modal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/OptimizedAutocomplete.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'visualTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":154,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":154,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'density' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":155,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":155,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'animationIntensity' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":156,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":156,"endColumn":31}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Optimized Autocomplete Component - Context7 Performance Patterns with Theme Integration\n *\n * Following Context7 React.dev documentation for optimal autocomplete performance:\n * - React.memo for preventing unnecessary re-renders\n * - useMemo for expensive computations\n * - useCallback for stable event handlers\n * - Suspense boundaries for async operations\n * - React Compiler optimization ready\n * - Unified theme system integration with performance patterns maintained\n */\n\nimport React, {\n  memo,\n  useMemo,\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n  Suspense,\n  startTransition,\n} from 'react';\nimport { Search, Loader2 } from 'lucide-react';\nimport { SearchResult } from '../../hooks/useSearch';\nimport {\n  useOptimizedSearch,\n  useSearchResultSelector,\n} from '../../hooks/useOptimizedSearch';\nimport { useVisualTheme, useLayoutTheme, useAnimationTheme } from '../../contexts/theme';\nimport { getElementTheme, ThemeColor } from '../../theme/formThemes';\n\ninterface OptimizedAutocompleteProps {\n  placeholder?: string;\n  searchType: 'sets' | 'products' | 'cards';\n  setFilter?: string;\n  onSelect: (result: SearchResult) => void;\n  onInputChange?: (value: string) => void;\n  className?: string;\n  disabled?: boolean;\n  autoFocus?: boolean;\n  minLength?: number;\n  maxResults?: number;\n  themeColor?: ThemeColor;\n}\n\n// Context7 Pattern: Memoized suggestion item for optimal rendering\nconst SuggestionItem = memo(\n  ({\n    result,\n    isSelected,\n    onSelect,\n    searchQuery,\n  }: {\n    result: SearchResult;\n    isSelected: boolean;\n    onSelect: (result: SearchResult) => void;\n    searchQuery: string;\n  }) => {\n    // Context7 Pattern: Memoized highlighted text with theme integration\n    const highlightedText = useMemo(() => {\n      const text = result.displayName;\n      if (!searchQuery) {\n        return text;\n      }\n\n      const regex = new RegExp(\n        `(${searchQuery.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\n        'gi'\n      );\n      const parts = text.split(regex);\n\n      return parts.map((part, index) =>\n        regex.test(part) ? (\n          <mark\n            key={index}\n            className=\"bg-gradient-to-r from-cyan-500/20 to-blue-500/20 text-cyan-300 rounded px-1 font-medium\"\n          >\n            {part}\n          </mark>\n        ) : (\n          <span key={index}>{part}</span>\n        )\n      );\n    }, [result.displayName, searchQuery]);\n\n    // Context7 Pattern: Memoized click handler\n    const handleClick = useCallback(() => {\n      onSelect(result);\n    }, [onSelect, result]);\n\n    return (\n      <div\n        onClick={handleClick}\n        className={`\n        px-4 py-3 cursor-pointer transition-all duration-300 border-l-4 relative overflow-hidden\n        ${\n          isSelected\n            ? 'bg-gradient-to-r from-cyan-500/10 to-blue-500/10 border-cyan-400 text-cyan-100 shadow-lg backdrop-blur-sm'\n            : 'hover:bg-zinc-800/60 border-transparent text-zinc-300 hover:text-zinc-100'\n        }\n      `}\n      >\n        <div className=\"font-medium text-sm relative z-10\">\n          {highlightedText}\n        </div>\n        {result.data?.setName && result.type !== 'set' && (\n          <div className=\"text-xs text-zinc-400 mt-1 relative z-10\">\n            Set: {result.data.setName}\n          </div>\n        )}\n        {result.data?.category && (\n          <div className=\"text-xs text-zinc-400 mt-1 relative z-10\">\n            Category: {result.data.category}\n          </div>\n        )}\n        {/* Subtle glow effect for selected items */}\n        {isSelected && (\n          <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-400/5 to-blue-400/5 pointer-events-none\"></div>\n        )}\n      </div>\n    );\n  }\n);\n\nSuggestionItem.displayName = 'SuggestionItem';\n\n// Context7 Pattern: Memoized loading fallback component with theme integration\nconst SearchFallback = memo(() => {\n  return (\n    <div className=\"flex items-center justify-center py-8\">\n      <Loader2 className=\"w-6 h-6 animate-spin text-cyan-400\" />\n      <span className=\"ml-2 text-sm text-zinc-300\">Searching...</span>\n    </div>\n  );\n});\n\nSearchFallback.displayName = 'SearchFallback';\n\n// Context7 Pattern: Main autocomplete component with comprehensive optimization and theme integration\nexport const OptimizedAutocomplete = memo(\n  ({\n    placeholder = 'Search...',\n    searchType,\n    setFilter,\n    onSelect,\n    onInputChange,\n    className = '',\n    disabled = false,\n    autoFocus = false,\n    minLength = 1,\n    maxResults = 10,\n    themeColor = 'dark',\n  }: OptimizedAutocompleteProps) => {\n    const { visualTheme } = useVisualTheme();\n    const { density } = useLayoutTheme();\n    const { animationIntensity } = useAnimationTheme();\n    const elementTheme = getElementTheme(themeColor);\n    const [inputValue, setInputValue] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const [isFocused, setIsFocused] = useState(false);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    // Context7 Pattern: Optimized search hook with transitions\n    const searchHook = useOptimizedSearch({\n      minLength,\n      debounceMs: 300,\n      enableTransitions: true,\n    });\n\n    // Context7 Pattern: Memoized filtered results\n    const filteredResults = useSearchResultSelector(\n      searchHook.results,\n      useCallback((result: SearchResult) => result, []),\n      [maxResults]\n    ).slice(0, maxResults);\n\n    // Context7 Pattern: Memoized search trigger\n    const triggerSearch = useCallback(\n      (query: string) => {\n        if (!query || query.length < minLength) {\n          setIsOpen(false);\n          return;\n        }\n\n        switch (searchType) {\n          case 'sets':\n            searchHook.searchSets(query);\n            break;\n          case 'products':\n            searchHook.searchProducts(query, setFilter);\n            break;\n          case 'cards':\n            searchHook.searchCards(query, setFilter);\n            break;\n        }\n        setIsOpen(true);\n      },\n      [searchType, setFilter, searchHook, minLength]\n    );\n\n    // Context7 Pattern: Optimized input change handler\n    const handleInputChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        setInputValue(value);\n        setSelectedIndex(0);\n\n        // Use startTransition for non-urgent updates\n        startTransition(() => {\n          onInputChange?.(value);\n          triggerSearch(value);\n        });\n      },\n      [onInputChange, triggerSearch]\n    );\n\n    // Context7 Pattern: Memoized selection handler\n    const handleSelect = useCallback(\n      (result: SearchResult) => {\n        setInputValue(result.displayName);\n        setIsOpen(false);\n        onSelect(result);\n      },\n      [onSelect]\n    );\n\n    // Context7 Pattern: Memoized keyboard handler\n    const handleKeyDown = useCallback(\n      (e: React.KeyboardEvent) => {\n        if (!isOpen || filteredResults.length === 0) {\n          return;\n        }\n\n        switch (e.key) {\n          case 'ArrowDown':\n            e.preventDefault();\n            setSelectedIndex((prev) => (prev + 1) % filteredResults.length);\n            break;\n          case 'ArrowUp':\n            e.preventDefault();\n            setSelectedIndex(\n              (prev) =>\n                (prev - 1 + filteredResults.length) % filteredResults.length\n            );\n            break;\n          case 'Enter':\n            e.preventDefault();\n            if (filteredResults[selectedIndex]) {\n              handleSelect(filteredResults[selectedIndex]);\n            }\n            break;\n          case 'Escape':\n            e.preventDefault();\n            setIsOpen(false);\n            inputRef.current?.blur();\n            break;\n        }\n      },\n      [isOpen, filteredResults, selectedIndex, handleSelect]\n    );\n\n    // Context7 Pattern: Effect with cleanup\n    useEffect(() => {\n      if (autoFocus && inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, [autoFocus]);\n\n    // Context7 Pattern: Memoized suggestions list\n    const suggestionsList = useMemo(() => {\n      if (\n        !isOpen ||\n        (!searchHook.isSearching && filteredResults.length === 0)\n      ) {\n        return null;\n      }\n\n      return (\n        <div className=\"absolute top-full left-0 right-0 z-50 mt-1 bg-zinc-900/95 backdrop-blur-xl border border-zinc-700/50 rounded-2xl shadow-2xl max-h-96 overflow-auto\">\n          <Suspense fallback={<SearchFallback />}>\n            {searchHook.isSearching ? (\n              <SearchFallback />\n            ) : filteredResults.length > 0 ? (\n              <div className=\"divide-y divide-zinc-700/30\">\n                {filteredResults.map((result, index) => (\n                  <SuggestionItem\n                    key={result._id || `${result.type}-${index}`}\n                    result={result}\n                    isSelected={selectedIndex === index}\n                    onSelect={handleSelect}\n                    searchQuery={inputValue}\n                  />\n                ))}\n              </div>\n            ) : (\n              <div className=\"px-4 py-6 text-center text-zinc-400 text-sm\">\n                <Search className=\"w-6 h-6 mx-auto mb-2 text-zinc-500\" />\n                <div>No results found</div>\n                <div className=\"text-xs mt-1 text-zinc-500\">\n                  Try different keywords\n                </div>\n              </div>\n            )}\n          </Suspense>\n        </div>\n      );\n    }, [\n      isOpen,\n      searchHook.isSearching,\n      filteredResults,\n      selectedIndex,\n      handleSelect,\n      inputValue,\n    ]);\n\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"relative\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            onFocus={() => {\n              setIsFocused(true);\n              if (inputValue.length >= minLength) {\n                setIsOpen(true);\n              }\n            }}\n            onBlur={() => {\n              setIsFocused(false);\n              // Delay closing to allow selection\n              setTimeout(() => setIsOpen(false), 150);\n            }}\n            placeholder={placeholder}\n            disabled={disabled}\n            className={`\n            w-full px-4 py-3 pr-10 bg-zinc-800/90 backdrop-blur-sm border ${elementTheme.border} rounded-2xl\n            text-zinc-100 placeholder-zinc-400\n            ${elementTheme.focus} shadow-lg hover:shadow-xl\n            disabled:bg-zinc-800/50 disabled:cursor-not-allowed\n            transition-all duration-300\n            ${isFocused ? 'ring-2 ring-cyan-500/50 border-cyan-300' : ''}\n          `}\n          />\n          <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n            {searchHook.isSearching ? (\n              <Loader2 className=\"w-4 h-4 animate-spin text-cyan-400\" />\n            ) : (\n              <Search className=\"w-4 h-4 text-zinc-400\" />\n            )}\n          </div>\n        </div>\n\n        {suggestionsList}\n      </div>\n    );\n  }\n);\n\n// Context7 Performance: Display name for debugging\nOptimizedAutocomplete.displayName = 'OptimizedAutocomplete';\n\nexport default OptimizedAutocomplete;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/OptimizedImageView.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/common/Select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaCompactCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaCompactCardCosmic.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaCosmicBackground.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaCustomDescriptionInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaEmptyState.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaEmptyStateCosmic.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaExportActions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaExportActionsCosmic.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaExportConfiguration.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaExportSuccess.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaHeaderActions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaHeaderGalaxy.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaHeaderGalaxyCosmic.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaItemCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaItemCardCosmic.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaItemCustomizer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaItemsWithTimers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/dba/DbaItemsWithoutTimers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/debug/PerformanceMonitor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/debug/ReactProfiler.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/debug/profilerUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonBadge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonPageContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/PokemonSelect.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/design-system/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/effects/CosmicBackground.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/effects/FloatingGeometry.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/effects/GlassmorphismContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/effects/HolographicBorder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/effects/NeuralNetworkBackground.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/effects/ParticleSystem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/effects/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/error/ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/error/errorBoundaryUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/AddEditPsaCardForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/AddEditRawCardForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/AddEditSealedProductForm.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'FormValidationService' is defined but never used. Allowed unused vars must match /^_/u.","line":31,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":31},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'VALIDATION_CONFIGS' is defined but never used. Allowed unused vars must match /^_/u.","line":31,"column":33,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":51}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Add/Edit Sealed Product Form Component\n * Refactored to follow SOLID principles\n *\n * Following CLAUDE.md principles:\n * - Single Responsibility: Form orchestration only\n * - Dependency Inversion: Uses abstract hooks instead of concrete APIs\n * - Interface Segregation: Uses specialized hooks for specific concerns\n * - Open/Closed: Extensible through hook composition\n * - DRY: Reuses common form patterns\n */\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Archive, Camera, Package, TrendingUp } from 'lucide-react';\nimport { ISealedProduct } from '../../domain/models/sealedProduct';\nimport { useCollectionOperations } from '../../hooks/useCollectionOperations';\nimport { useBaseForm } from '../../hooks/useBaseForm';\nimport { commonValidationRules } from '../../hooks/useFormValidation';\nimport {\n  useFormSubmission,\n  FormSubmissionPatterns,\n} from './wrappers/FormSubmissionWrapper';\nimport Input from '../common/Input';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport FormHeader from '../common/FormHeader';\nimport FormActionButtons from '../common/FormActionButtons';\nimport { ProductSearchSection } from './ProductSearchSection';\nimport ImageUploader from '../ImageUploader';\nimport { PriceHistoryDisplay } from '../PriceHistoryDisplay';\nimport ValidationField from './fields/ValidationField';\nimport { FormValidationService, VALIDATION_CONFIGS } from '../../services/forms/FormValidationService';\nimport {\n  convertObjectIdToString,\n  transformRequestData,\n} from '../../utils/responseTransformer';\n\ninterface AddEditSealedProductFormProps {\n  onCancel: () => void;\n  onSuccess: () => void;\n  initialData?: Partial<ISealedProduct>;\n  isEditing?: boolean;\n}\n\ninterface FormData {\n  setName: string;\n  productName: string;\n  category: string;\n  availability: number;\n  cardMarketPrice: string;\n  myPrice: string;\n  dateAdded: string;\n}\n\n// Helper function to convert ISO date to YYYY-MM-DD format\nconst formatDateForInput = (isoDate: string | undefined): string => {\n  if (!isoDate) {\n    return new Date().toISOString().split('T')[0];\n  }\n  // Handle both ISO string and already formatted date strings\n  if (isoDate.includes('T')) {\n    return isoDate.split('T')[0];\n  }\n  return isoDate;\n};\n\nconst AddEditSealedProductForm: React.FC<AddEditSealedProductFormProps> = ({\n  onCancel,\n  onSuccess,\n  initialData,\n  isEditing = false,\n}) => {\n  const { addSealedProduct, updateSealedProduct, loading } =\n    useCollectionOperations();\n\n  // Check if item is sold - prevent editing of sold items\n  const isSold = isEditing && initialData?.sold;\n\n  // Validation rules for Sealed Product form\n  const validationRules = {\n    setName: { required: true },\n    productName: { required: true },\n    category: { required: true },\n    availability: {\n      required: true,\n      min: 0,\n      custom: (value: string) => {\n        const num = parseInt(value);\n        if (isNaN(num)) {\n          return 'Must be a valid number';\n        }\n        return undefined;\n      },\n    },\n    cardMarketPrice: commonValidationRules.price,\n    myPrice: { ...commonValidationRules.price, required: true },\n  };\n\n  // Memoize initialData to prevent infinite re-renders\n  const memoizedInitialData = useMemo(() => {\n    return initialData\n      ? {\n          setName: initialData.setName,\n          productName: initialData.name, // Field mapping: name -> productName\n          category: initialData.category,\n          availability: initialData.availability,\n          cardMarketPrice: initialData.cardMarketPrice?.toString(),\n          myPrice: initialData.myPrice?.toString(),\n          dateAdded: initialData.dateAdded,\n        }\n      : undefined;\n  }, [initialData]);\n\n  // Initialize base form with specialized hooks and standardized initialData handling\n  const baseForm = useBaseForm<FormData>({\n    defaultValues: {\n      setName: initialData?.setName || '',\n      productName: initialData?.name || '',\n      category: initialData?.category || '',\n      availability: initialData?.availability || 0,\n      cardMarketPrice: initialData?.cardMarketPrice?.toString() || '',\n      myPrice: initialData?.myPrice?.toString() || '',\n      dateAdded: formatDateForInput(initialData?.dateAdded),\n    },\n    validationRules,\n    initialImages: initialData?.images || [],\n    initialPriceHistory: initialData?.priceHistory || [],\n    initialPrice: initialData?.myPrice || 0,\n    // Standardized initialData handling with memoization\n    initialData: memoizedInitialData,\n    isEditing,\n    fieldMapping: {\n      name: 'productName', // Map 'name' field to 'productName' form field\n    },\n  });\n\n  const { form, isSubmitting, imageUpload, priceHistory, setSubmitting } =\n    baseForm;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n    clearErrors,\n  } = form;\n\n  // State for product categories and selection\n  const [productCategories, setProductCategories] = useState<\n    Array<{ value: string; label: string }>\n  >([]);\n  const [loadingOptions, setLoadingOptions] = useState(true);\n  const [selectedProductData, setSelectedProductData] = useState<Record<\n    string,\n    unknown\n  > | null>(null);\n\n  // Form-specific useEffect for unique internal state only (following CLAUDE.md SRP)\n  useEffect(() => {\n    if (isEditing && initialData) {\n      // Form fields are now handled by useBaseForm centrally\n\n      // Set selectedProductData for existing products to maintain reference link\n      // This is form-specific logic that cannot be centralized\n      if (initialData.productId) {\n        // Use centralized ObjectId conversion\n        const transformedInitialData = transformRequestData(initialData);\n\n        setSelectedProductData({\n          _id: transformedInitialData.productId,\n          setName: initialData.setName,\n          name: initialData.name,\n          category: initialData.category,\n          available: initialData.availability,\n          price: initialData.cardMarketPrice,\n        });\n      }\n    }\n  }, [isEditing, initialData]);\n\n  // Watch form fields for validation\n  const watchedPrice = watch('myPrice');\n  const watchedCardMarketPrice = watch('cardMarketPrice');\n\n  // Load dynamic options from backend\n  useEffect(() => {\n    const loadOptions = async () => {\n      setLoadingOptions(true);\n      try {\n        // Categories matching ACTUAL DATABASE VALUES\n        const categories = [\n          { value: 'Booster-Boxes', label: 'Booster Boxes' },\n          { value: 'Elite-Trainer-Boxes', label: 'Elite Trainer Boxes' },\n          { value: 'Box-Sets', label: 'Box Sets' },\n          { value: 'Boosters', label: 'Boosters' },\n        ];\n        console.log(\n          '[CATEGORIES DEBUG] Setting productCategories to:',\n          categories\n        );\n        setProductCategories(categories);\n      } catch (error) {\n        console.error('Failed to load form options:', error);\n      } finally {\n        setLoadingOptions(false);\n      }\n    };\n\n    loadOptions();\n  }, []);\n\n  // Update current price when form price changes\n  useEffect(() => {\n    if (watchedPrice) {\n      const price = parseFloat(watchedPrice);\n      if (!isNaN(price)) {\n        priceHistory.updateCurrentPrice(price);\n      }\n    }\n  }, [watchedPrice, priceHistory]);\n\n  const handlePriceUpdate = (newPrice: number, _date: string) => {\n    // Add new price to history using specialized hook\n    priceHistory.addPriceEntry(newPrice, 'manual_update');\n\n    // Update form field\n    setValue('myPrice', newPrice.toString());\n  };\n\n  // Standardized submission handling using FormSubmissionWrapper\n  const { handleSubmission } = useFormSubmission<\n    FormData,\n    Partial<ISealedProduct>\n  >({\n    setSubmitting,\n    onSuccess,\n    imageUpload,\n    priceHistory,\n    logContext: 'SEALED PRODUCT',\n    validateBeforeSubmission: (_data) => {\n      if (!selectedProductData?._id) {\n        throw new Error(\n          'Please select a product from the suggestions to ensure reference data link'\n        );\n      }\n    },\n    prepareSubmissionData: async ({ formData, imageUrls }) => {\n      const allImageUrls = FormSubmissionPatterns.combineImages(\n        imageUpload.remainingExistingImages,\n        imageUrls\n      );\n\n      return {\n        productId: selectedProductData?._id,\n        setName: formData.setName.trim(),\n        name: formData.productName.trim(),\n        category: formData.category,\n        availability: Number(formData.availability),\n        cardMarketPrice: formData.cardMarketPrice\n          ? parseFloat(formData.cardMarketPrice)\n          : undefined,\n        myPrice: parseFloat(formData.myPrice),\n        dateAdded: formData.dateAdded,\n        images: allImageUrls,\n        priceHistory: FormSubmissionPatterns.transformPriceHistory(\n          priceHistory.priceHistory,\n          parseFloat(formData.myPrice)\n        ),\n      };\n    },\n    submitToApi: async (productData, isEditing) => {\n      if (isEditing && initialData?.id) {\n        const productId = convertObjectIdToString(initialData.id);\n        await updateSealedProduct(productId, productData);\n      } else {\n        await addSealedProduct(productData);\n      }\n    },\n  });\n\n  // If trying to edit a sold item, show message and prevent editing\n  if (isSold) {\n    return (\n      <div className=\"bg-red-500/10 backdrop-blur-xl border border-red-500/20 rounded-3xl p-8 text-center\">\n        <div className=\"w-16 h-16 bg-red-500/20 rounded-full flex items-center justify-center mx-auto mb-6\">\n          <Archive className=\"w-8 h-8 text-red-400\" />\n        </div>\n        <h3 className=\"text-2xl font-bold text-red-400 mb-4\">\n          Item Already Sold\n        </h3>\n        <p className=\"text-red-300/80 mb-6 text-lg\">\n          This sealed product has been sold and cannot be edited. Sold items are\n          locked to preserve transaction history.\n        </p>\n        <div className=\"bg-red-500/20 backdrop-blur-xl border border-red-500/30 rounded-2xl p-4 mb-6\">\n          <p className=\"text-red-300 font-semibold\">\n            Sale Price: {initialData?.saleDetails?.actualSoldPrice || 'N/A'} kr\n          </p>\n          <p className=\"text-red-300/80 text-sm mt-1\">\n            Sold on:{' '}\n            {initialData?.saleDetails?.dateSold\n              ? new Date(initialData.saleDetails.dateSold).toLocaleDateString()\n              : 'N/A'}\n          </p>\n        </div>\n        <button\n          onClick={onCancel}\n          className=\"bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white px-8 py-3 rounded-2xl font-semibold transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105 backdrop-blur-xl border border-red-500/20\"\n        >\n          Back to Collection\n        </button>\n      </div>\n    );\n  }\n\n  const onSubmit = (data: FormData) =>\n    handleSubmission(data, { isEditing, itemId: initialData?.id });\n\n  if (loading && !isSubmitting) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  // Calculate potential profit margin\n  const calculateProfitMargin = () => {\n    const myPrice = parseFloat(watchedPrice || '0');\n    const marketPrice = parseFloat(watchedCardMarketPrice || '0');\n    if (myPrice > 0 && marketPrice > 0) {\n      const margin = ((marketPrice - myPrice) / myPrice) * 100;\n      return margin.toFixed(1);\n    }\n    return null;\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-8\">\n      {/* Reusable Form Header */}\n      <FormHeader\n        icon={Archive}\n        title={isEditing ? 'Edit Sealed Product' : 'Add Sealed Product'}\n        description={\n          isEditing\n            ? 'Update your sealed product information'\n            : 'Add a new sealed product to your premium collection'\n        }\n        isEditing={isEditing}\n        primaryColorClass=\"purple\"\n      />\n\n      {/* Item Status Indicator for editing mode */}\n      {isEditing && initialData && (\n        <div className=\"bg-zinc-900/80 backdrop-blur-xl border border-zinc-700/20 rounded-3xl p-6 shadow-2xl\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"p-2 rounded-xl bg-gradient-to-br from-blue-500/20 to-indigo-600/20 backdrop-blur-xl border border-white/10 shadow-lg\">\n                <Archive className=\"w-5 h-5 text-blue-400\" />\n              </div>\n              <div>\n                <h4 className=\"text-lg font-bold text-zinc-100\">Item Status</h4>\n                <p className=\"text-zinc-400 text-sm\">\n                  Current availability status\n                </p>\n              </div>\n            </div>\n            <div\n              className={`px-4 py-2 rounded-xl backdrop-blur-xl border font-semibold ${\n                initialData.sold\n                  ? 'bg-red-500/20 border-red-500/30 text-red-300'\n                  : 'bg-emerald-500/20 border-emerald-500/30 text-emerald-300'\n              }`}\n            >\n              {initialData.sold ? 'SOLD' : 'AVAILABLE'}\n            </div>\n          </div>\n\n          {initialData.sold && initialData.saleDetails && (\n            <div className=\"mt-4 pt-4 border-t border-zinc-700/50\">\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <span className=\"text-zinc-400\">Sale Price:</span>\n                  <span className=\"ml-2 font-semibold text-green-400\">\n                    {initialData.saleDetails.actualSoldPrice || 'N/A'} kr\n                  </span>\n                </div>\n                <div>\n                  <span className=\"text-zinc-400\">Date Sold:</span>\n                  <span className=\"ml-2 font-semibold text-zinc-300\">\n                    {initialData.saleDetails.dateSold\n                      ? new Date(\n                          initialData.saleDetails.dateSold\n                        ).toLocaleDateString()\n                      : 'N/A'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Product Search Section - Hidden in edit mode like other forms */}\n      {!isEditing && (\n        <div className=\"mb-6 relative z-10\">\n          <ProductSearchSection\n            register={register}\n            errors={errors}\n            setValue={setValue}\n            watch={watch}\n            clearErrors={clearErrors}\n            onSelectionChange={(selectedData) => {\n              console.log('[SEALED PRODUCT] Product selection:', selectedData);\n\n              // Store selected product data for form submission (CRITICAL - maintains existing behavior)\n              setSelectedProductData(selectedData);\n            }}\n            onError={(error) => {\n              console.error('[SEALED PRODUCT] Search error:', error);\n            }}\n            sectionTitle=\"Product Information\"\n            sectionIcon={Package}\n            formType=\"product\"\n            readOnlyFields={{\n              category: true,\n              availability: true,\n            }}\n            productCategories={productCategories}\n            loadingOptions={loadingOptions}\n          />\n        </div>\n      )}\n\n      {/* Context7 Premium Pricing & Investment Section */}\n      <div className=\"bg-zinc-900/80 backdrop-blur-xl border border-zinc-700/20 rounded-3xl p-8 shadow-2xl relative\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-zinc-800/50 to-purple-900/50 pointer-events-none\"></div>\n\n        <h4 className=\"text-xl font-bold text-zinc-100 mb-6 flex items-center relative\">\n          <TrendingUp className=\"w-6 h-6 mr-3 text-zinc-300\" />\n          Pricing & Investment Metrics\n        </h4>\n\n        {/* Auto-filled fields: CardMarket Price (from product selection) */}\n        {/* User-editable fields: My Price, Date Added */}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 relative\">\n          <div>\n            <Input\n              label=\"CardMarket Price (kr.)\"\n              type=\"number\"\n              step=\"1\"\n              min=\"0\"\n              {...register('cardMarketPrice', {\n                min: { value: 0, message: 'Price must be non-negative' },\n                pattern: {\n                  value: /^\\d+$/,\n                  message: 'Price must be a whole number',\n                },\n              })}\n              error={errors.cardMarketPrice?.message}\n              placeholder=\"0\"\n              disabled={true} // Always disabled - autofilled from product selection\n            />\n            {watchedCardMarketPrice && (\n              <div className=\"mt-2 text-sm text-purple-600 font-semibold\">\n                Market: {parseFloat(watchedCardMarketPrice || '0')} kr.\n              </div>\n            )}\n            {selectedProductData && selectedProductData.price && (\n              <div className=\"mt-2 text-sm text-green-600 font-semibold\">\n                CardMarket Price:{' '}\n                {Math.round(parseFloat(selectedProductData.price))} kr.\n              </div>\n            )}\n          </div>\n\n          <div>\n            <ValidationField\n              name=\"myPrice\"\n              label=\"My Price (kr.)\"\n              type=\"price\"\n              placeholder=\"0\"\n              required={true}\n              register={register}\n              error={errors.myPrice}\n            />\n            {watchedPrice && (\n              <div className=\"mt-2 text-sm text-slate-600 dark:text-zinc-400 dark:text-zinc-300 font-semibold\">\n                Paid: {parseFloat(watchedPrice || '0')} kr.\n              </div>\n            )}\n          </div>\n\n          <div>\n            <ValidationField\n              name=\"dateAdded\"\n              label=\"Date Added\"\n              type=\"date\"\n              required={true}\n              disabled={isEditing}\n              register={register}\n              error={errors.dateAdded}\n            />\n\n            {/* Investment Analysis */}\n            {calculateProfitMargin() && (\n              <div className=\"mt-3 p-3 bg-gradient-to-r from-green-50/80 to-emerald-50/80 border border-green-200/50 rounded-xl backdrop-blur-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm font-bold text-green-800\">\n                    Potential Margin:\n                  </span>\n                  <span\n                    className={`text-sm font-bold ${parseFloat(calculateProfitMargin()!) > 0 ? 'text-green-600' : 'text-red-600'}`}\n                  >\n                    {calculateProfitMargin()}%\n                  </span>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Price History Section (for editing existing products) */}\n        {isEditing && priceHistory.priceHistory.length > 0 && (\n          <div className=\"mt-8 pt-8 border-t border-slate-200/50 dark:border-zinc-700/50 dark:border-zinc-700/50\">\n            <PriceHistoryDisplay\n              priceHistory={priceHistory.priceHistory}\n              currentPrice={priceHistory.currentPrice}\n              onPriceUpdate={handlePriceUpdate}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Context7 Premium Image Upload Section */}\n      <div className=\"bg-zinc-900/80 backdrop-blur-xl border border-zinc-700/20 rounded-3xl p-8 shadow-2xl relative\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-zinc-800/50 to-zinc-900/50 pointer-events-none\"></div>\n\n        <h4 className=\"text-xl font-bold text-zinc-100 mb-6 flex items-center relative\">\n          <Camera className=\"w-6 h-6 mr-3 text-zinc-300\" />\n          Product Images\n        </h4>\n\n        <div className=\"relative\">\n          <ImageUploader\n            onImagesChange={imageUpload.handleImagesChange}\n            existingImageUrls={imageUpload.remainingExistingImages}\n            multiple={true}\n            maxFiles={8}\n            maxFileSize={5}\n          />\n\n          <div className=\"mt-4 p-4 bg-gradient-to-r from-slate-50/80 to-purple-50/80 rounded-xl border border-slate-200/50 dark:border-zinc-700/50 dark:border-zinc-700/50 backdrop-blur-sm\">\n            <div className=\"text-sm text-slate-600 dark:text-zinc-400 dark:text-zinc-300 space-y-1\">\n              <p className=\"font-semibold\">\n                • Upload up to 8 images (max 5MB each)\n              </p>\n              <p>• Supported formats: JPG, PNG, WebP</p>\n              <p>\n                • Include package front, back, and seal shots for authenticity\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Reusable Action Buttons */}\n      <FormActionButtons\n        onCancel={onCancel}\n        isSubmitting={isSubmitting}\n        isEditing={isEditing}\n        submitButtonText={isEditing ? 'Update Product' : 'Add Product'}\n        loadingSubmitText={isEditing ? 'Updating...' : 'Adding...'}\n        primaryButtonColorClass=\"purple\"\n      />\n    </form>\n  );\n};\n\nexport default AddEditSealedProductForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/CardSearchSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/MarkSoldForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/ProductSearchSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/SearchSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/containers/AuctionFormContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/containers/CardFormContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/containers/SearchSectionContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/fields/CardInformationFields.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/fields/InformationFieldRenderer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/fields/ProductInformationFields.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/fields/SearchField.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'name' is defined but never used. Allowed unused args must match /^_/u.","line":52,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":7}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * SearchField Component\n * Layer 3: Components (UI Building Blocks)\n * \n * Following CLAUDE.md SOLID principles:\n * - Single Responsibility: Handles autocomplete search with hierarchical filtering\n * - DRY: Eliminates duplication between CardSearchSection + ProductSearchSection\n * - Interface Segregation: Focused interface for search functionality\n * - Open/Closed: Extensible search types without modification\n * - NOT over-engineered: Simple, focused search field component\n */\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { LucideIcon, Search } from 'lucide-react';\nimport { FieldError } from 'react-hook-form';\nimport { SearchResult, useSearch } from '../../../hooks/useSearch';\nimport { useDebouncedValue } from '../../../hooks/useDebounce';\n\nexport type SearchFieldType = 'card' | 'product';\n\ninterface SearchFieldProps {\n  /** Field configuration */\n  name: string;\n  label: string;\n  searchType: SearchFieldType;\n  placeholder?: string;\n  required?: boolean;\n  disabled?: boolean;\n  \n  /** Form integration */\n  value: string;\n  onChange: (value: string) => void;\n  error?: FieldError;\n  \n  /** Hierarchical search */\n  parentFieldValue?: string; // For filtering (e.g., setName for card search)\n  \n  /** Selection callback */\n  onSelection: (result: SearchResult | null) => void;\n  \n  /** Styling */\n  icon?: LucideIcon;\n  className?: string;\n}\n\n/**\n * SearchField Component\n * Handles both 'card' and 'product' search types with hierarchical filtering\n * Maintains current search functionality while eliminating duplication\n */\nexport const SearchField: React.FC<SearchFieldProps> = ({\n  name,\n  label,\n  searchType,\n  placeholder,\n  required = false,\n  disabled = false,\n  value,\n  onChange,\n  error,\n  parentFieldValue,\n  onSelection,\n  icon: Icon = Search,\n  className,\n}) => {\n  // State management\n  const [isActive, setIsActive] = useState(false);\n  const [suggestions, setSuggestions] = useState<SearchResult[]>([]);\n  \n  // Use centralized search hook\n  const search = useSearch();\n  \n  // Debounce search query\n  const debouncedValue = useDebouncedValue(value, 300);\n  \n  // Sync search results to local suggestions state\n  useEffect(() => {\n    setSuggestions(search.results || []);\n  }, [search.results]);\n  \n  // Centralized search effect\n  useEffect(() => {\n    if (!isActive) {\n      setSuggestions([]);\n      return;\n    }\n    \n    if (!debouncedValue || typeof debouncedValue !== 'string') {\n      setSuggestions([]);\n      return;\n    }\n    \n    // Execute search based on type\n    switch (searchType) {\n      case 'card':\n        // Smart search: If no query but set selected, show all from set\n        let cardSearchQuery = debouncedValue;\n        if (!debouncedValue.trim()) {\n          if (parentFieldValue?.trim()) {\n            cardSearchQuery = '*';\n          } else {\n            setSuggestions([]);\n            return;\n          }\n        }\n        search.searchCards(cardSearchQuery, parentFieldValue?.trim() || undefined);\n        break;\n        \n      case 'product':\n        // Smart search: If no query but set selected, show all from set\n        let productSearchQuery = debouncedValue;\n        if (!debouncedValue.trim()) {\n          if (parentFieldValue?.trim()) {\n            productSearchQuery = '*';\n          } else {\n            setSuggestions([]);\n            return;\n          }\n        }\n        search.searchProducts(productSearchQuery, parentFieldValue?.trim() || undefined);\n        break;\n    }\n  }, [isActive, debouncedValue, parentFieldValue, searchType, search]);\n  \n  // Handle selection\n  const handleSelection = useCallback(\n    (result: SearchResult) => {\n      if (!result.id || !result.displayName) {\n        onChange('');\n        onSelection(null);\n        setSuggestions([]);\n        setIsActive(false);\n        return;\n      }\n      \n      // Update field value\n      onChange(result.displayName);\n      \n      // Call selection callback\n      onSelection({\n        ...result,\n        data: {\n          _id: result.id,\n          ...result.data,\n        },\n      });\n      \n      // Clear suggestions\n      setTimeout(() => {\n        setSuggestions([]);\n        setIsActive(false);\n      }, 10);\n    },\n    [onChange, onSelection]\n  );\n  \n  // Handle focus with auto-trigger for hierarchical search\n  const handleFocus = useCallback(() => {\n    setIsActive(true);\n    \n    // Auto-trigger search if parent field is selected but current field is empty\n    if (\n      parentFieldValue &&\n      parentFieldValue.trim() &&\n      (!value || value.trim() === '')\n    ) {\n      // Trigger search with wildcard to show all items from parent\n      switch (searchType) {\n        case 'card':\n          search.searchCards('*', parentFieldValue.trim());\n          break;\n        case 'product':\n          search.searchProducts('*', parentFieldValue.trim());\n          break;\n      }\n    }\n  }, [parentFieldValue, value, searchType, search]);\n  \n  // Handle blur\n  const handleBlur = useCallback(() => {\n    setTimeout(() => {\n      setIsActive(false);\n    }, 150);\n  }, []);\n  \n  return (\n    <div className=\"relative z-50\">\n      <label className=\"block text-sm font-bold text-white mb-3 flex items-center space-x-2\">\n        <div className=\"p-1 rounded-lg bg-gradient-to-br from-blue-500/20 to-purple-600/20 backdrop-blur-xl border border-white/10\">\n          <Icon className=\"w-3 h-3 text-blue-400\" />\n        </div>\n        <span>{label}</span>\n        {required && <span className=\"text-red-400 ml-1 font-bold\">*</span>}\n      </label>\n\n      <div className=\"relative\">\n        {/* Background Glass Effects */}\n        <div className=\"absolute -inset-1 bg-gradient-to-r from-blue-500/10 via-purple-500/10 to-indigo-500/10 rounded-[1.2rem] blur-md opacity-60\"></div>\n\n        <div className=\"relative bg-black/40 backdrop-blur-3xl rounded-xl shadow-xl border border-white/10 ring-1 ring-white/5 overflow-hidden group\">\n          {/* Floating Orbs */}\n          <div className=\"absolute -top-1 -right-1 w-12 h-12 bg-gradient-to-br from-blue-500/10 to-purple-500/10 rounded-full blur-lg animate-pulse opacity-0 group-focus-within:opacity-100 transition-opacity duration-500\"></div>\n\n          <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            placeholder={placeholder || `Search for ${label.toLowerCase()}...`}\n            disabled={disabled}\n            className={`relative z-10 block w-full px-4 py-3 bg-transparent border-none text-white placeholder-white/50 font-medium focus:ring-0 focus:outline-none ${className || ''}`}\n          />\n\n          {/* Shimmer Effect */}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/5 to-transparent -translate-x-full group-focus-within:translate-x-full transition-transform duration-1000 ease-out pointer-events-none\"></div>\n\n          {/* Breathing Animation */}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-blue-500/5 via-purple-500/5 to-indigo-500/5 rounded-xl animate-pulse opacity-40 pointer-events-none group-focus-within:opacity-60 transition-opacity duration-300\"></div>\n        </div>\n\n        {/* Suggestions Dropdown */}\n        {isActive && suggestions.length > 0 && (\n          <div className=\"absolute top-full left-0 right-0 z-[9999] mt-2\">\n            <div className=\"relative bg-zinc-900 rounded-2xl shadow-2xl border border-white/10 ring-1 ring-white/5 overflow-hidden max-h-80\">\n              <div className=\"p-2 space-y-1 max-h-80 overflow-y-auto scrollbar-thin scrollbar-thumb-blue-500/30 scrollbar-track-transparent relative z-10\">\n                {suggestions.map((suggestion, index) => (\n                  <div\n                    key={suggestion.id || `${searchType}-suggestion-${index}`}\n                    onClick={() => handleSelection(suggestion)}\n                    className=\"group cursor-pointer select-none relative p-4 rounded-xl transition-all duration-300 transform hover:scale-102 overflow-hidden hover:bg-white/5 border border-transparent hover:border-white/10\"\n                    role=\"option\"\n                  >\n                    <div className=\"relative z-10 flex items-center justify-between\">\n                      <div className=\"flex-1 min-w-0 space-y-1\">\n                        <div className=\"text-white font-bold text-lg leading-tight truncate group-hover:text-blue-400 transition-colors duration-300\">\n                          {suggestion.displayName}\n                        </div>\n\n                        {/* Metadata */}\n                        <div className=\"flex flex-wrap items-center gap-2\">\n                          {parentFieldValue && parentFieldValue.trim() && (\n                            <div className=\"inline-flex items-center px-2 py-1 bg-gradient-to-r from-emerald-500/20 to-teal-600/20 backdrop-blur-xl border border-emerald-500/30 rounded-lg text-xs text-emerald-300 font-semibold\">\n                              Set: {parentFieldValue}\n                            </div>\n                          )}\n                          {suggestion.data?.cardNumber && (\n                            <div className=\"inline-flex items-center px-2 py-1 bg-gradient-to-r from-purple-500/20 to-violet-600/20 backdrop-blur-xl border border-purple-500/30 rounded-lg text-xs text-purple-300 font-semibold\">\n                              #{suggestion.data.cardNumber}\n                            </div>\n                          )}\n                          {suggestion.data?.category && (\n                            <div className=\"inline-flex items-center px-2 py-1 bg-gradient-to-r from-purple-500/20 to-violet-600/20 backdrop-blur-xl border border-purple-500/30 rounded-lg text-xs text-purple-300 font-semibold\">\n                              {suggestion.data.category}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* No Results */}\n        {isActive &&\n          value.trim().length >= 2 &&\n          suggestions.length === 0 &&\n          !search.isLoading && (\n            <div className=\"absolute top-full left-0 right-0 z-[9999] mt-2\">\n              <div className=\"relative bg-zinc-900 rounded-2xl shadow-2xl border border-white/10 ring-1 ring-white/5 overflow-hidden\">\n                <div className=\"p-8 text-center relative z-10\">\n                  <div className=\"relative mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-slate-800/60 to-slate-900/80 rounded-2xl flex items-center justify-center mx-auto border border-white/10 shadow-lg\">\n                      <Search className=\"w-8 h-8 text-white/60\" />\n                    </div>\n                  </div>\n                  <h3 className=\"text-lg font-bold text-white mb-2\">\n                    No results found\n                  </h3>\n                  <p className=\"text-white/60 text-sm font-medium\">\n                    Try adjusting your search terms\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"mt-3 p-3 bg-gradient-to-r from-red-500/20 to-pink-600/20 backdrop-blur-xl border border-red-500/30 rounded-xl shadow-lg flex items-center space-x-2\">\n          <div className=\"p-1 rounded-lg bg-gradient-to-br from-red-500/20 to-pink-600/20 backdrop-blur-xl border border-white/10\">\n            <Icon className=\"w-3 h-3 text-red-400\" />\n          </div>\n          <p className=\"text-sm text-red-300 font-medium\">\n            {error.message}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchField;","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/fields/ValidationField.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/fields/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/sections/AuctionItemSelectionSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/sections/CardInformationDisplaySection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/sections/GradingPricingSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/sections/ImageUploadSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/sections/SaleDetailsSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/forms/wrappers/FormSubmissionWrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/layouts/MainLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/layouts/PageLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/CategoryOrderingList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/CollectionExportModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/CollectionItemCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/CollectionStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/CollectionTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/ItemOrderingSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/OrderableItemCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/SortableCategoryOrderingList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/lists/SortableItemCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/modals/AddItemToAuctionModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/modals/ItemSelectorModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/s/AutocompleteField.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/s/LazySearchDropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/s/SearchDropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/theme/AccessibilityTheme.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/theme/ThemeDebugger.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'visualTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":75,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":75,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'layoutTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":76,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":76,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'animationTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":77,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":77,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'accessibilityTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":78,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":78,"endColumn":27}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Theme Debugger Component\n * Phase 3.3.1: Developer Debugging Tools\n *\n * Following CLAUDE.md principles:\n * - Single Responsibility: Theme debugging and visualization only\n * - Open/Closed: Extensible for new debugging features\n * - DRY: Centralized theme debugging logic\n * - Dependency Inversion: Uses theme abstractions rather than direct implementation\n *\n * Integrates with:\n * - ThemeContext.tsx for current theme state\n * - themeUtils.ts for style configurations\n * - formThemes.ts for color scheme information\n * - themeDebug.ts for validation utilities\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport {\n  Eye,\n  EyeOff,\n  Code,\n  Palette,\n  CheckCircle,\n  AlertTriangle,\n  Copy,\n  Download,\n  RefreshCw,\n  Zap,\n  Layers,\n  Clock,\n} from 'lucide-react';\nimport { useVisualTheme, useLayoutTheme, useAnimationTheme, useAccessibilityTheme } from '../../contexts/theme';\nimport { useCentralizedTheme } from '../../utils/themeConfig';\nimport {\n  buttonStyleConfig,\n  inputStyleConfig,\n  cardStyleConfig,\n  badgeStyleConfig,\n  cn,\n} from '../../utils/themeUtils';\nimport {\n  validateThemeConfiguration,\n  getThemePerformanceMetrics,\n  extractCSSCustomProperties,\n} from '../../utils/themeDebug';\n\nexport interface ThemeDebuggerProps {\n  /** Show debugger by default in development */\n  enabled?: boolean;\n  /** Position of the debugger panel */\n  position?: 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left';\n  /** Initial panel to show */\n  defaultPanel?:\n    | 'overview'\n    | 'tokens'\n    | 'components'\n    | 'performance'\n    | 'validation';\n}\n\ntype DebugPanel =\n  | 'overview'\n  | 'tokens'\n  | 'components'\n  | 'performance'\n  | 'validation';\n\nexport const ThemeDebugger: React.FC<ThemeDebuggerProps> = ({\n  enabled = process.env.NODE_ENV === 'development',\n  position = 'bottom-right',\n  defaultPanel = 'overview',\n}) => {\n  const themeConfig = useCentralizedTheme();\n  const visualTheme = useVisualTheme();\n  const layoutTheme = useLayoutTheme();\n  const animationTheme = useAnimationTheme();\n  const accessibilityTheme = useAccessibilityTheme();\n  const [isOpen, setIsOpen] = useState(false);\n  const [activePanel, setActivePanel] = useState<DebugPanel>(defaultPanel as DebugPanel);\n  const [performanceData, setPerformanceData] = useState(() =>\n    getThemePerformanceMetrics()\n  );\n  const intervalRef = useRef<NodeJS.Timeout>();\n\n  // Update performance data every 2 seconds when performance panel is active\n  useEffect(() => {\n    if (activePanel === 'performance' && isOpen) {\n      intervalRef.current = setInterval(() => {\n        setPerformanceData(getThemePerformanceMetrics());\n      }, 2000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [activePanel, isOpen]);\n\n  if (!enabled) {\n    return null;\n  }\n\n  const positionClasses = {\n    'bottom-right': 'bottom-4 right-4',\n    'bottom-left': 'bottom-4 left-4',\n    'top-right': 'top-4 right-4',\n    'top-left': 'top-4 left-4',\n  }[position];\n\n  // Construct theme configuration for validation from centralized theme\n  const themeConfigForValidation = {\n    visualTheme: themeConfig.visualTheme,\n    colorScheme: 'dark' as const, // Assume dark for now\n    density: themeConfig.density,\n    animationIntensity: themeConfig.animationIntensity,\n    primaryColor: 'blue' as const, // Default primary color\n    highContrast: themeConfig.highContrast,\n    reducedMotion: themeConfig.reducedMotion,\n    glassmorphismIntensity: themeConfig.glassmorphismIntensity,\n    particleEffectsEnabled: themeConfig.particleEffectsEnabled,\n  };\n\n  const validationResults = validateThemeConfiguration(themeConfigForValidation);\n  const cssProperties = extractCSSCustomProperties();\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  const downloadThemeConfig = () => {\n    const config = {\n      ...themeConfigForValidation,\n      cssProperties,\n      performance: performanceData,\n      validation: validationResults,\n    };\n\n    const dataStr = JSON.stringify(config, null, 2);\n    const dataUri = `data:application/json;charset=utf-8,${encodeURIComponent(dataStr)}`;\n\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', `theme-debug-${Date.now()}.json`);\n    linkElement.click();\n  };\n\n  const panels = {\n    overview: {\n      icon: Eye,\n      title: 'Theme Overview',\n      content: (\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-3 text-xs\">\n            <div className=\"space-y-2\">\n              <div className=\"font-semibold text-cyan-400\">Current Theme</div>\n              <div className=\"bg-zinc-800/50 p-2 rounded\">\n                <div>Visual: {themeConfig.visualTheme}</div>\n                <div>Color: {themeConfigForValidation.colorScheme}</div>\n                <div>Primary: {themeConfigForValidation.primaryColor}</div>\n                <div>Density: {themeConfig.density}</div>\n                <div>Animation: {themeConfig.animationIntensity}</div>\n              </div>\n            </div>\n            <div className=\"space-y-2\">\n              <div className=\"font-semibold text-purple-400\">Settings</div>\n              <div className=\"bg-zinc-800/50 p-2 rounded\">\n                <div>\n                  High Contrast: {themeConfig.highContrast ? 'ON' : 'OFF'}\n                </div>\n                <div>\n                  Reduced Motion: {themeConfig.reducedMotion ? 'ON' : 'OFF'}\n                </div>\n                <div>Glassmorphism: {themeConfig.glassmorphismIntensity}%</div>\n                <div>\n                  Particles:{' '}\n                  {themeConfig.particleEffectsEnabled ? 'ON' : 'OFF'}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-emerald-400\">\n              Applied CSS Classes\n            </div>\n            <div className=\"bg-zinc-800/50 p-2 rounded text-xs font-mono break-all\">\n              theme-{themeConfig.visualTheme} density-{themeConfig.density} animation-{themeConfig.animationIntensity}\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-2\">\n            <button\n              onClick={downloadThemeConfig}\n              className=\"flex items-center gap-1 px-2 py-1 text-xs bg-blue-600/50 hover:bg-blue-600/70 rounded transition-colors\"\n            >\n              <Download className=\"w-3 h-3\" />\n              Export Config\n            </button>\n            <button\n              onClick={() =>\n                copyToClipboard(JSON.stringify(themeConfigForValidation, null, 2))\n              }\n              className=\"flex items-center gap-1 px-2 py-1 text-xs bg-green-600/50 hover:bg-green-600/70 rounded transition-colors\"\n            >\n              <Copy className=\"w-3 h-3\" />\n              Copy Config\n            </button>\n          </div>\n        </div>\n      ),\n    },\n    tokens: {\n      icon: Code,\n      title: 'CSS Tokens',\n      content: (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-cyan-400\">\n              CSS Custom Properties\n            </div>\n            <div className=\"max-h-48 overflow-y-auto bg-zinc-800/50 p-2 rounded\">\n              {Object.entries(cssProperties).map(([property, value]) => (\n                <div\n                  key={property}\n                  className=\"flex justify-between text-xs font-mono py-1 border-b border-zinc-700/30 last:border-b-0\"\n                >\n                  <span className=\"text-emerald-400\">{property}</span>\n                  <span className=\"text-zinc-300 truncate ml-2\">{value}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-purple-400\">\n              Computed Theme Properties\n            </div>\n            <div className=\"max-h-48 overflow-y-auto bg-zinc-800/50 p-2 rounded\">\n              {Object.entries({\n                '--theme-visual': themeConfig.visualTheme,\n                '--theme-density': themeConfig.density,\n                '--theme-animation': themeConfig.animationIntensity,\n                '--theme-glassmorphism': `${themeConfig.glassmorphismIntensity}%`,\n                '--theme-particles': themeConfig.particleEffectsEnabled ? 'enabled' : 'disabled',\n                '--theme-contrast': themeConfig.highContrast ? 'high' : 'normal',\n                '--theme-motion': themeConfig.reducedMotion ? 'reduced' : 'normal',\n              }).map(\n                ([property, value]) => (\n                  <div\n                    key={property}\n                    className=\"flex justify-between text-xs font-mono py-1 border-b border-zinc-700/30 last:border-b-0\"\n                  >\n                    <span className=\"text-purple-400\">{property}</span>\n                    <span className=\"text-zinc-300 truncate ml-2\">{value}</span>\n                  </div>\n                )\n              )}\n            </div>\n          </div>\n\n          <button\n            onClick={() =>\n              copyToClipboard(\n                Object.entries(cssProperties)\n                  .map(([k, v]) => `${k}: ${v}`)\n                  .join('\\n')\n              )\n            }\n            className=\"flex items-center gap-1 px-2 py-1 text-xs bg-cyan-600/50 hover:bg-cyan-600/70 rounded transition-colors w-full justify-center\"\n          >\n            <Copy className=\"w-3 h-3\" />\n            Copy All Tokens\n          </button>\n        </div>\n      ),\n    },\n    components: {\n      icon: Layers,\n      title: 'Components',\n      content: (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-3\">\n            {[\n              { name: 'Button', config: buttonStyleConfig },\n              { name: 'Input', config: inputStyleConfig },\n              { name: 'Card', config: cardStyleConfig },\n              { name: 'Badge', config: badgeStyleConfig },\n            ].map(({ name, config }) => {\n              return (\n                <div key={name} className=\"bg-zinc-800/50 p-3 rounded\">\n                  <div className=\"font-semibold text-cyan-400 mb-2\">\n                    {name} Component\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                    <div>\n                      <div className=\"text-zinc-400 mb-1\">Variants</div>\n                      <div className=\"space-y-1\">\n                        {Object.keys(config.variants || {}).map((variant) => (\n                          <div key={variant} className=\"text-emerald-400\">\n                            {variant}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-zinc-400 mb-1\">Sizes</div>\n                      <div className=\"space-y-1\">\n                        {Object.keys(config.sizes || {}).map((size) => (\n                          <div key={size} className=\"text-purple-400\">\n                            {size}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mt-2 text-xs\">\n                    <div className=\"text-zinc-400 mb-1\">Base Classes</div>\n                    <div className=\"bg-zinc-900/50 p-1 rounded font-mono text-[10px] break-all\">\n                      {config.base}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ),\n    },\n    performance: {\n      icon: Zap,\n      title: 'Performance',\n      content: (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-cyan-400\">Theme Performance</div>\n            <div className=\"grid grid-cols-2 gap-3 text-xs\">\n              <div className=\"bg-zinc-800/50 p-2 rounded\">\n                <div className=\"text-zinc-400\">CSS Properties</div>\n                <div className=\"text-xl font-bold text-green-400\">\n                  {performanceData.cssPropertiesCount}\n                </div>\n              </div>\n              <div className=\"bg-zinc-800/50 p-2 rounded\">\n                <div className=\"text-zinc-400\">Theme Classes</div>\n                <div className=\"text-xl font-bold text-blue-400\">\n                  {performanceData.themeClassesCount}\n                </div>\n              </div>\n              <div className=\"bg-zinc-800/50 p-2 rounded\">\n                <div className=\"text-zinc-400\">Load Time</div>\n                <div className=\"text-xl font-bold text-purple-400\">\n                  {performanceData.loadTimeMs}ms\n                </div>\n              </div>\n              <div className=\"bg-zinc-800/50 p-2 rounded\">\n                <div className=\"text-zinc-400\">Memory Usage</div>\n                <div className=\"text-xl font-bold text-orange-400\">\n                  {performanceData.memoryUsageMB}MB\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-purple-400\">\n              Theme Transitions\n            </div>\n            <div className=\"bg-zinc-800/50 p-2 rounded text-xs\">\n              <div className=\"flex justify-between\">\n                <span>Last Switch Duration:</span>\n                <span className=\"text-green-400\">\n                  {performanceData.lastSwitchDuration}ms\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Total Switches:</span>\n                <span className=\"text-blue-400\">\n                  {performanceData.totalSwitches}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Average Switch Time:</span>\n                <span className=\"text-purple-400\">\n                  {performanceData.averageSwitchTime}ms\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-emerald-400\">\n              Resource Impact\n            </div>\n            <div className=\"bg-zinc-800/50 p-2 rounded text-xs space-y-1\">\n              <div className=\"flex justify-between\">\n                <span>Bundle Size Impact:</span>\n                <span\n                  className={\n                    performanceData.bundleSizeImpact < 50\n                      ? 'text-green-400'\n                      : 'text-orange-400'\n                  }\n                >\n                  {performanceData.bundleSizeImpact}KB\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Render Impact:</span>\n                <span\n                  className={\n                    performanceData.renderImpactScore < 3\n                      ? 'text-green-400'\n                      : 'text-orange-400'\n                  }\n                >\n                  {performanceData.renderImpactScore}/5\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={() => setPerformanceData(getThemePerformanceMetrics())}\n            className=\"flex items-center gap-1 px-2 py-1 text-xs bg-emerald-600/50 hover:bg-emerald-600/70 rounded transition-colors w-full justify-center\"\n          >\n            <RefreshCw className=\"w-3 h-3\" />\n            Refresh Metrics\n          </button>\n        </div>\n      ),\n    },\n    validation: {\n      icon: CheckCircle,\n      title: 'Validation',\n      content: (\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-cyan-400\">Theme Validation</div>\n            <div className=\"space-y-2\">\n              {validationResults.map((result, index) => (\n                <div\n                  key={index}\n                  className={cn(\n                    'flex items-start gap-2 p-2 rounded text-xs',\n                    result.type === 'error'\n                      ? 'bg-red-900/30 text-red-300'\n                      : result.type === 'warning'\n                        ? 'bg-amber-900/30 text-amber-300'\n                        : 'bg-green-900/30 text-green-300'\n                  )}\n                >\n                  {result.type === 'error' ? (\n                    <AlertTriangle className=\"w-4 h-4 text-red-400 flex-shrink-0 mt-0.5\" />\n                  ) : result.type === 'warning' ? (\n                    <AlertTriangle className=\"w-4 h-4 text-amber-400 flex-shrink-0 mt-0.5\" />\n                  ) : (\n                    <CheckCircle className=\"w-4 h-4 text-green-400 flex-shrink-0 mt-0.5\" />\n                  )}\n                  <div>\n                    <div className=\"font-semibold\">{result.category}</div>\n                    <div>{result.message}</div>\n                    {result.suggestion && (\n                      <div className=\"text-zinc-400 mt-1\">\n                        💡 {result.suggestion}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <div className=\"font-semibold text-purple-400\">\n              Theme Health Score\n            </div>\n            <div className=\"bg-zinc-800/50 p-2 rounded\">\n              <div className=\"text-xs space-y-1\">\n                <div className=\"flex justify-between\">\n                  <span>Configuration:</span>\n                  <span\n                    className={\n                      validationResults.filter(\n                        (r) =>\n                          r.category === 'Configuration' && r.type === 'success'\n                      ).length > 0\n                        ? 'text-green-400'\n                        : 'text-red-400'\n                    }\n                  >\n                    {\n                      validationResults.filter(\n                        (r) =>\n                          r.category === 'Configuration' && r.type === 'success'\n                      ).length\n                    }{' '}\n                    /{' '}\n                    {\n                      validationResults.filter(\n                        (r) => r.category === 'Configuration'\n                      ).length\n                    }\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Performance:</span>\n                  <span\n                    className={\n                      validationResults.filter(\n                        (r) =>\n                          r.category === 'Performance' && r.type === 'success'\n                      ).length > 0\n                        ? 'text-green-400'\n                        : 'text-red-400'\n                    }\n                  >\n                    {\n                      validationResults.filter(\n                        (r) =>\n                          r.category === 'Performance' && r.type === 'success'\n                      ).length\n                    }{' '}\n                    /{' '}\n                    {\n                      validationResults.filter(\n                        (r) => r.category === 'Performance'\n                      ).length\n                    }\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Accessibility:</span>\n                  <span\n                    className={\n                      validationResults.filter(\n                        (r) =>\n                          r.category === 'Accessibility' && r.type === 'success'\n                      ).length > 0\n                        ? 'text-green-400'\n                        : 'text-red-400'\n                    }\n                  >\n                    {\n                      validationResults.filter(\n                        (r) =>\n                          r.category === 'Accessibility' && r.type === 'success'\n                      ).length\n                    }{' '}\n                    /{' '}\n                    {\n                      validationResults.filter(\n                        (r) => r.category === 'Accessibility'\n                      ).length\n                    }\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ),\n    },\n  };\n\n  return (\n    <div className={cn('fixed z-[9999]', positionClasses)}>\n      {/* Toggle Button */}\n      {!isOpen && (\n        <button\n          onClick={() => setIsOpen(true)}\n          className=\"bg-black/80 backdrop-blur-sm hover:bg-black/90 text-white p-3 rounded-full shadow-lg transition-all hover:scale-110\"\n          title=\"Open Theme Debugger\"\n        >\n          <Palette className=\"w-5 h-5\" />\n        </button>\n      )}\n\n      {/* Main Panel */}\n      {isOpen && (\n        <div className=\"bg-black/90 backdrop-blur-sm text-white rounded-lg shadow-2xl border border-zinc-700/50 w-96 max-h-[80vh] overflow-hidden\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-3 border-b border-zinc-700/50\">\n            <div className=\"flex items-center gap-2\">\n              <Palette className=\"w-5 h-5 text-cyan-400\" />\n              <span className=\"font-bold\">Theme Debugger</span>\n            </div>\n            <button\n              onClick={() => setIsOpen(false)}\n              className=\"text-zinc-400 hover:text-white transition-colors\"\n            >\n              <EyeOff className=\"w-4 h-4\" />\n            </button>\n          </div>\n\n          {/* Panel Navigation */}\n          <div className=\"flex border-b border-zinc-700/50\">\n            {Object.entries(panels).map(([panelId, panel]) => {\n              const Icon = panel.icon;\n              return (\n                <button\n                  key={panelId}\n                  onClick={() => setActivePanel(panelId as DebugPanel)}\n                  className={cn(\n                    'flex-1 flex items-center justify-center gap-1 p-2 text-xs transition-colors',\n                    activePanel === panelId\n                      ? 'bg-cyan-600/30 text-cyan-400 border-b-2 border-cyan-400'\n                      : 'text-zinc-400 hover:text-white hover:bg-zinc-800/50'\n                  )}\n                  title={panel.title}\n                >\n                  <Icon className=\"w-3 h-3\" />\n                  <span className=\"hidden sm:inline\">{panelId}</span>\n                </button>\n              );\n            })}\n          </div>\n\n          {/* Panel Content */}\n          <div className=\"p-4 max-h-96 overflow-y-auto\">\n            <div className=\"font-semibold text-sm mb-3 text-cyan-400\">\n              {panels[activePanel].title}\n            </div>\n            {panels[activePanel].content}\n          </div>\n\n          {/* Footer */}\n          <div className=\"border-t border-zinc-700/50 p-2 text-xs text-zinc-400 flex items-center justify-between\">\n            <span>Theme Debug v1.0</span>\n            <div className=\"flex items-center gap-1\">\n              <Clock className=\"w-3 h-3\" />\n              <span>{new Date().toLocaleTimeString()}</span>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ThemeDebugger;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/theme/ThemeExporter.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'visualTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":61,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":61,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'layoutTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":62,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":62,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'animationTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":63,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":63,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'accessibilityTheme' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":64,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":64,"endColumn":27},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has an unnecessary dependency: 'theme'. Either exclude it or remove the dependency array. Outer scope values like 'theme' aren't valid dependencies because mutating them doesn't re-render the component.","line":294,"column":5,"nodeType":"ArrayExpression","endLine":294,"endColumn":29,"suggestions":[{"desc":"Update the dependencies array to be: [onThemeImported]","fix":{"range":[8879,8903],"text":"[onThemeImported]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has an unnecessary dependency: 'theme.config'. Either exclude it or remove the dependency array. Outer scope values like 'theme.config' aren't valid dependencies because mutating them doesn't re-render the component.","line":350,"column":6,"nodeType":"ArrayExpression","endLine":350,"endColumn":20,"suggestions":[{"desc":"Update the dependencies array to be: []","fix":{"range":[10320,10334],"text":"[]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has an unnecessary dependency: 'theme'. Either exclude it or remove the dependency array. Outer scope values like 'theme' aren't valid dependencies because mutating them doesn't re-render the component.","line":384,"column":5,"nodeType":"ArrayExpression","endLine":384,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: []","fix":{"range":[11343,11350],"text":"[]"}}]}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has unnecessary dependencies: 'theme.config' and 'theme.getCSSProperties'. Either exclude them or remove the dependency array. Outer scope values like 'theme.config' aren't valid dependencies because mutating them doesn't re-render the component.","line":114,"column":6,"nodeType":"ArrayExpression","endLine":119,"endColumn":4,"suggestions":[{"desc":"Update the dependencies array to be: [customPresetName, exportDescription]","fix":{"range":[3583,3679],"text":"[customPresetName, exportDescription]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Theme Exporter Component\n * Phase 3.1.2: Theme Export/Import System\n *\n * Following CLAUDE.md principles:\n * - Single Responsibility: Handles theme export/import UI only\n * - Open/Closed: Extensible for new export/import features\n * - DRY: Reuses existing component patterns and utilities\n * - Interface Segregation: Focused interface for theme management\n *\n * Integrates with:\n * - ThemeContext.tsx for theme configuration access\n * - themeExport.ts for export/import utilities\n * - Existing UI components for consistent styling\n */\n\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useVisualTheme, useLayoutTheme, useAnimationTheme, useAccessibilityTheme } from '../../contexts/theme';\nimport {\n  exportTheme,\n  exportThemeCollection,\n  exportAllCustomPresets,\n  importThemeFromFile,\n  importAndSavePreset,\n  importAndSavePresetCollection,\n  getCustomPresetNames,\n  deleteCustomPreset,\n  validateThemeFile,\n  getThemeConfigSummary,\n  createThemeBackup,\n  getThemeBackups,\n  restoreThemeFromBackup,\n} from '../../utils/themeExport';\nimport { cn } from '../../utils/themeUtils';\n\n// ================================\n// COMPONENT INTERFACES\n// ================================\n\nexport interface ThemeExporterProps {\n  /** Component size variant */\n  size?: 'sm' | 'md' | 'lg';\n  /** Show advanced features */\n  showAdvanced?: boolean;\n  /** Callback when theme is imported */\n  onThemeImported?: (themeName: string) => void;\n  /** Custom CSS classes */\n  className?: string;\n}\n\n// ================================\n// MAIN COMPONENT\n// ================================\n\nexport const ThemeExporter: React.FC<ThemeExporterProps> = ({\n  size = 'md',\n  showAdvanced = true,\n  onThemeImported,\n  className,\n}) => {\n  const visualTheme = useVisualTheme();\n  const layoutTheme = useLayoutTheme();\n  const animationTheme = useAnimationTheme();\n  const accessibilityTheme = useAccessibilityTheme();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Component state\n  const [isExporting, setIsExporting] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [importMessage, setImportMessage] = useState<{\n    type: 'success' | 'error';\n    text: string;\n  } | null>(null);\n  const [showExportOptions, setShowExportOptions] = useState(false);\n  const [showImportOptions, setShowImportOptions] = useState(false);\n  const [showBackups, setShowBackups] = useState(false);\n  const [customPresetName, setCustomPresetName] = useState('');\n  const [exportDescription, setExportDescription] = useState('');\n\n  // Get custom presets and backups\n  const customPresets = getCustomPresetNames();\n  const themeBackups = getThemeBackups();\n\n  // ================================\n  // EXPORT HANDLERS\n  // ================================\n\n  const handleExportCurrent = useCallback(async () => {\n    setIsExporting(true);\n    try {\n      createThemeBackup(theme.config);\n      exportTheme(\n        theme.config,\n        customPresetName || 'Current Theme',\n        exportDescription || 'Current theme configuration',\n        theme.getCSSProperties()\n      );\n      setImportMessage({\n        type: 'success',\n        text: 'Theme exported successfully!',\n      });\n      setShowExportOptions(false);\n      setCustomPresetName('');\n      setExportDescription('');\n    } catch (error) {\n      setImportMessage({\n        type: 'error',\n        text: error instanceof Error ? error.message : 'Failed to export theme',\n      });\n    } finally {\n      setIsExporting(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    theme.config,\n    theme.getCSSProperties,\n    customPresetName,\n    exportDescription,\n  ]);\n\n  const handleExportAllPresets = useCallback(async () => {\n    setIsExporting(true);\n    try {\n      exportAllCustomPresets('My Custom Themes');\n      setImportMessage({\n        type: 'success',\n        text: 'All custom presets exported successfully!',\n      });\n    } catch (error) {\n      setImportMessage({\n        type: 'error',\n        text:\n          error instanceof Error ? error.message : 'Failed to export presets',\n      });\n    } finally {\n      setIsExporting(false);\n    }\n  }, []);\n\n  const handleExportPresetCollection = useCallback(async () => {\n    setIsExporting(true);\n    try {\n      const themes = customPresets.map((name) => {\n        const preset = JSON.parse(\n          localStorage.getItem('pokemon-custom-presets') || '{}'\n        )[name];\n        return {\n          config: preset,\n          name,\n          description: `Custom theme preset: ${name}`,\n        };\n      });\n\n      exportThemeCollection(\n        themes,\n        customPresetName || 'Custom Theme Collection',\n        exportDescription || 'Collection of custom themes'\n      );\n\n      setImportMessage({\n        type: 'success',\n        text: 'Theme collection exported successfully!',\n      });\n      setShowExportOptions(false);\n      setCustomPresetName('');\n      setExportDescription('');\n    } catch (error) {\n      setImportMessage({\n        type: 'error',\n        text:\n          error instanceof Error\n            ? error.message\n            : 'Failed to export theme collection',\n      });\n    } finally {\n      setIsExporting(false);\n    }\n  }, [customPresets, customPresetName, exportDescription]);\n\n  // ================================\n  // IMPORT HANDLERS\n  // ================================\n\n  const handleFileSelect = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.[0];\n      if (!file) {\n        return;\n      }\n\n      handleImportTheme(file);\n    },\n\n    [handleImportTheme]\n  );\n\n  const handleImportTheme = useCallback(\n    async (file: File) => {\n      setIsImporting(true);\n      setImportMessage(null);\n\n      try {\n        // Validate file\n        const validation = validateThemeFile(file);\n        if (!validation.valid) {\n          setImportMessage({\n            type: 'error',\n            text: validation.error || 'Invalid file',\n          });\n          return;\n        }\n\n        // Import theme\n        const result = await importThemeFromFile(file);\n\n        if (!result.success) {\n          setImportMessage({\n            type: 'error',\n            text: result.error || 'Failed to import theme',\n          });\n          return;\n        }\n\n        // Handle single theme\n        if (result.importedTheme) {\n          // Apply the imported theme configuration\n          const importedConfig = result.importedTheme;\n          theme.setVisualTheme(importedConfig.visualTheme);\n          theme.setColorScheme(importedConfig.colorScheme);\n          theme.setDensity(importedConfig.density);\n          theme.setAnimationIntensity(importedConfig.animationIntensity);\n          theme.setPrimaryColor(importedConfig.primaryColor);\n          theme.setGlassmorphismIntensity(\n            importedConfig.glassmorphismIntensity\n          );\n\n          if (importedConfig.highContrast !== theme.config.highContrast) {\n            theme.toggleHighContrast();\n          }\n          if (importedConfig.reducedMotion !== theme.config.reducedMotion) {\n            theme.toggleReducedMotion();\n          }\n          if (\n            importedConfig.particleEffectsEnabled !==\n            theme.config.particleEffectsEnabled\n          ) {\n            theme.toggleParticleEffects();\n          }\n          if (importedConfig.customCSSProperties) {\n            theme.setCustomProperties(importedConfig.customCSSProperties);\n          }\n\n          setImportMessage({\n            type: 'success',\n            text: `Theme \"${result.metadata?.name}\" imported and applied successfully!`,\n          });\n          onThemeImported?.(result.metadata?.name || 'Imported Theme');\n          setShowImportOptions(false);\n          return;\n        }\n\n        // Handle theme collection\n        if (result.importedThemes && result.importedThemes.length > 0) {\n          const collectionResult = await importAndSavePresetCollection(file);\n          if (collectionResult.success) {\n            setImportMessage({\n              type: 'success',\n              text: `Imported ${collectionResult.importedCount} themes successfully!${collectionResult.skippedCount ? ` (${collectionResult.skippedCount} skipped)` : ''}`,\n            });\n          } else {\n            setImportMessage({\n              type: 'error',\n              text: collectionResult.error || 'Failed to import themes',\n            });\n          }\n          setShowImportOptions(false);\n          return;\n        }\n\n        setImportMessage({\n          type: 'error',\n          text: 'No valid theme data found in file',\n        });\n      } catch (error) {\n        setImportMessage({\n          type: 'error',\n          text:\n            error instanceof Error ? error.message : 'Failed to import theme',\n        });\n      } finally {\n        setIsImporting(false);\n      }\n    },\n    [theme, onThemeImported]\n  );\n\n  const _handleImportAsPreset = useCallback(\n    async (file: File, presetName: string) => {\n      setIsImporting(true);\n      setImportMessage(null);\n\n      try {\n        const result = await importAndSavePreset(file, presetName);\n\n        if (result.success) {\n          setImportMessage({\n            type: 'success',\n            text: `Theme saved as preset \"${result.presetName}\" successfully!`,\n          });\n          setShowImportOptions(false);\n        } else {\n          setImportMessage({\n            type: 'error',\n            text: result.error || 'Failed to import theme as preset',\n          });\n        }\n      } catch (error) {\n        setImportMessage({\n          type: 'error',\n          text:\n            error instanceof Error\n              ? error.message\n              : 'Failed to import theme as preset',\n        });\n      } finally {\n        setIsImporting(false);\n      }\n    },\n    []\n  );\n\n  // ================================\n  // BACKUP HANDLERS\n  // ================================\n\n  const handleCreateBackup = useCallback(() => {\n    try {\n      createThemeBackup(theme.config);\n      setImportMessage({\n        type: 'success',\n        text: 'Theme backup created successfully!',\n      });\n    } catch (error) {\n      setImportMessage({\n        type: 'error',\n        text:\n          error instanceof Error ? error.message : 'Failed to create backup',\n      });\n    }\n  }, [theme.config]);\n\n  const handleRestoreBackup = useCallback(\n    (backupIndex: number) => {\n      try {\n        const restoredConfig = restoreThemeFromBackup(backupIndex);\n        if (restoredConfig) {\n          // Apply restored configuration\n          Object.entries(restoredConfig).forEach(([key, value]) => {\n            if (key in theme) {\n              const setter =\n                theme[\n                  `set${key.charAt(0).toUpperCase() + key.slice(1)}` as keyof typeof theme\n                ];\n              if (typeof setter === 'function') {\n                (setter as any)(value);\n              }\n            }\n          });\n\n          setImportMessage({\n            type: 'success',\n            text: 'Theme restored from backup successfully!',\n          });\n          setShowBackups(false);\n        }\n      } catch (error) {\n        setImportMessage({\n          type: 'error',\n          text:\n            error instanceof Error ? error.message : 'Failed to restore backup',\n        });\n      }\n    },\n    [theme]\n  );\n\n  // ================================\n  // PRESET MANAGEMENT\n  // ================================\n\n  const handleDeletePreset = useCallback((presetName: string) => {\n    try {\n      deleteCustomPreset(presetName);\n      setImportMessage({\n        type: 'success',\n        text: `Preset \"${presetName}\" deleted successfully!`,\n      });\n    } catch (error) {\n      setImportMessage({\n        type: 'error',\n        text:\n          error instanceof Error ? error.message : 'Failed to delete preset',\n      });\n    }\n  }, []);\n\n  // ================================\n  // STYLING\n  // ================================\n\n  const getSizeClasses = () => {\n    switch (size) {\n      case 'sm':\n        return 'p-4 space-y-3';\n      case 'lg':\n        return 'p-8 space-y-6';\n      default:\n        return 'p-6 space-y-4';\n    }\n  };\n\n  const buttonBaseClasses = cn(\n    'inline-flex items-center justify-center font-medium rounded-lg',\n    'focus:outline-none focus:ring-2 focus:ring-offset-2',\n    'transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed',\n    'border backdrop-blur-sm',\n    size === 'sm'\n      ? 'px-3 py-1.5 text-sm'\n      : size === 'lg'\n        ? 'px-6 py-3 text-base'\n        : 'px-4 py-2 text-sm'\n  );\n\n  const primaryButtonClasses = cn(\n    buttonBaseClasses,\n    'bg-gradient-to-r text-white shadow-md hover:shadow-lg',\n    theme.config.primaryColor === 'purple' &&\n      'from-purple-600 to-violet-600 hover:from-purple-700 hover:to-violet-700 focus:ring-purple-500/50',\n    theme.config.primaryColor === 'blue' &&\n      'from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 focus:ring-blue-500/50',\n    theme.config.primaryColor === 'emerald' &&\n      'from-emerald-600 to-teal-600 hover:from-emerald-700 hover:to-teal-700 focus:ring-emerald-500/50',\n    theme.config.primaryColor === 'amber' &&\n      'from-amber-600 to-orange-600 hover:from-amber-700 hover:to-orange-700 focus:ring-amber-500/50',\n    theme.config.primaryColor === 'rose' &&\n      'from-rose-600 to-pink-600 hover:from-rose-700 hover:to-pink-700 focus:ring-rose-500/50',\n    theme.config.primaryColor === 'dark' &&\n      'from-cyan-600 to-blue-600 hover:from-cyan-700 hover:to-blue-700 focus:ring-cyan-500/50'\n  );\n\n  const secondaryButtonClasses = cn(\n    buttonBaseClasses,\n    'border-zinc-700/50 bg-zinc-800/50 text-zinc-100 hover:bg-zinc-700/80 focus:ring-zinc-500/50'\n  );\n\n  const dangerButtonClasses = cn(\n    buttonBaseClasses,\n    'border-red-500/50 bg-red-600/20 text-red-400 hover:bg-red-600/40 focus:ring-red-500/50'\n  );\n\n  // ================================\n  // RENDER\n  // ================================\n\n  return (\n    <div\n      className={cn(\n        'bg-zinc-900/80 backdrop-blur-xl border border-zinc-700/50 rounded-2xl',\n        'shadow-xl transition-all duration-300',\n        getSizeClasses(),\n        className\n      )}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-zinc-100\">Theme Manager</h3>\n          <p className=\"text-sm text-zinc-400\">\n            Export and import theme configurations\n          </p>\n        </div>\n        <div className=\"text-xs text-zinc-500 bg-zinc-800/50 px-2 py-1 rounded\">\n          {getThemeConfigSummary(theme.config)}\n        </div>\n      </div>\n\n      {/* Message Display */}\n      {importMessage && (\n        <div\n          className={cn(\n            'p-3 rounded-lg border mb-4',\n            importMessage.type === 'success'\n              ? 'bg-emerald-500/10 border-emerald-500/20 text-emerald-400'\n              : 'bg-red-500/10 border-red-500/20 text-red-400'\n          )}\n        >\n          {importMessage.text}\n        </div>\n      )}\n\n      {/* Export Section */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <h4 className=\"text-md font-medium text-zinc-200\">Export Themes</h4>\n          <button\n            onClick={() => setShowExportOptions(!showExportOptions)}\n            className={secondaryButtonClasses}\n          >\n            {showExportOptions ? 'Hide Options' : 'Show Options'}\n          </button>\n        </div>\n\n        {showExportOptions && (\n          <div className=\"space-y-4 p-4 bg-zinc-800/30 rounded-xl border border-zinc-700/30\">\n            {/* Export Current Theme */}\n            <div className=\"space-y-3\">\n              <h5 className=\"text-sm font-medium text-zinc-300\">\n                Export Current Theme\n              </h5>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Theme name (optional)\"\n                  value={customPresetName}\n                  onChange={(e) => setCustomPresetName(e.target.value)}\n                  className=\"px-3 py-2 bg-zinc-800/50 border border-zinc-700/50 rounded-lg text-zinc-100 placeholder-zinc-400 focus:ring-2 focus:ring-cyan-500/50 focus:border-cyan-400 text-sm\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Description (optional)\"\n                  value={exportDescription}\n                  onChange={(e) => setExportDescription(e.target.value)}\n                  className=\"px-3 py-2 bg-zinc-800/50 border border-zinc-700/50 rounded-lg text-zinc-100 placeholder-zinc-400 focus:ring-2 focus:ring-cyan-500/50 focus:border-cyan-400 text-sm\"\n                />\n              </div>\n              <button\n                onClick={handleExportCurrent}\n                disabled={isExporting}\n                className={primaryButtonClasses}\n              >\n                {isExporting ? 'Exporting...' : 'Export Current Theme'}\n              </button>\n            </div>\n\n            {/* Export All Presets */}\n            {customPresets.length > 0 && (\n              <div className=\"space-y-3 pt-4 border-t border-zinc-700/30\">\n                <h5 className=\"text-sm font-medium text-zinc-300\">\n                  Export Custom Presets\n                </h5>\n                <div className=\"flex flex-wrap gap-2\">\n                  <button\n                    onClick={handleExportAllPresets}\n                    disabled={isExporting}\n                    className={secondaryButtonClasses}\n                  >\n                    Export All Presets ({customPresets.length})\n                  </button>\n                  <button\n                    onClick={handleExportPresetCollection}\n                    disabled={isExporting || !customPresetName}\n                    className={primaryButtonClasses}\n                  >\n                    Export as Collection\n                  </button>\n                </div>\n                <p className=\"text-xs text-zinc-500\">\n                  Custom presets: {customPresets.join(', ')}\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Import Section */}\n      <div className=\"space-y-4 pt-6 border-t border-zinc-700/30\">\n        <div className=\"flex items-center justify-between\">\n          <h4 className=\"text-md font-medium text-zinc-200\">Import Themes</h4>\n          <button\n            onClick={() => setShowImportOptions(!showImportOptions)}\n            className={secondaryButtonClasses}\n          >\n            {showImportOptions ? 'Hide Options' : 'Show Options'}\n          </button>\n        </div>\n\n        {showImportOptions && (\n          <div className=\"space-y-4 p-4 bg-zinc-800/30 rounded-xl border border-zinc-700/30\">\n            <div className=\"space-y-3\">\n              <h5 className=\"text-sm font-medium text-zinc-300\">\n                Import Theme File\n              </h5>\n              <p className=\"text-xs text-zinc-500\">\n                Import a single theme or theme collection JSON file\n              </p>\n\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\".json,application/json\"\n                onChange={handleFileSelect}\n                className=\"hidden\"\n              />\n\n              <div className=\"flex flex-wrap gap-2\">\n                <button\n                  onClick={() => fileInputRef.current?.click()}\n                  disabled={isImporting}\n                  className={primaryButtonClasses}\n                >\n                  {isImporting ? 'Importing...' : 'Choose Theme File'}\n                </button>\n\n                <button\n                  onClick={handleCreateBackup}\n                  className={secondaryButtonClasses}\n                >\n                  Create Backup\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Backup Management */}\n      {showAdvanced && themeBackups.length > 0 && (\n        <div className=\"space-y-4 pt-6 border-t border-zinc-700/30\">\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"text-md font-medium text-zinc-200\">Theme Backups</h4>\n            <button\n              onClick={() => setShowBackups(!showBackups)}\n              className={secondaryButtonClasses}\n            >\n              {showBackups\n                ? 'Hide Backups'\n                : `Show Backups (${themeBackups.length})`}\n            </button>\n          </div>\n\n          {showBackups && (\n            <div className=\"space-y-2 p-4 bg-zinc-800/30 rounded-xl border border-zinc-700/30\">\n              {themeBackups.map((backup, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between p-3 bg-zinc-800/50 rounded-lg border border-zinc-700/30\"\n                >\n                  <div className=\"space-y-1\">\n                    <p className=\"text-sm font-medium text-zinc-200\">\n                      {backup.metadata.name}\n                    </p>\n                    <p className=\"text-xs text-zinc-400\">\n                      {new Date(\n                        backup.metadata.exportDate\n                      ).toLocaleDateString()}\n                    </p>\n                    <p className=\"text-xs text-zinc-500\">\n                      {getThemeConfigSummary(backup.configuration)}\n                    </p>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <button\n                      onClick={() => handleRestoreBackup(index)}\n                      className={cn(\n                        buttonBaseClasses,\n                        'px-3 py-1 text-xs border-emerald-500/50 bg-emerald-600/20 text-emerald-400 hover:bg-emerald-600/40'\n                      )}\n                    >\n                      Restore\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Custom Preset Management */}\n      {showAdvanced && customPresets.length > 0 && (\n        <div className=\"space-y-4 pt-6 border-t border-zinc-700/30\">\n          <h4 className=\"text-md font-medium text-zinc-200\">Custom Presets</h4>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n            {customPresets.map((presetName) => (\n              <div\n                key={presetName}\n                className=\"flex items-center justify-between p-3 bg-zinc-800/50 rounded-lg border border-zinc-700/30\"\n              >\n                <span className=\"text-sm text-zinc-200 truncate\">\n                  {presetName}\n                </span>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => theme.loadCustomPreset(presetName)}\n                    className={cn(\n                      buttonBaseClasses,\n                      'px-3 py-1 text-xs border-cyan-500/50 bg-cyan-600/20 text-cyan-400 hover:bg-cyan-600/40'\n                    )}\n                  >\n                    Load\n                  </button>\n                  <button\n                    onClick={() => handleDeletePreset(presetName)}\n                    className={cn(\n                      buttonBaseClasses,\n                      'px-3 py-1 text-xs',\n                      dangerButtonClasses\n                    )}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className=\"mt-6 pt-4 border-t border-zinc-700/30\">\n        <details className=\"group\">\n          <summary className=\"text-sm font-medium text-zinc-300 cursor-pointer hover:text-zinc-200 transition-colors\">\n            Instructions & Tips\n          </summary>\n          <div className=\"mt-3 space-y-2 text-xs text-zinc-400\">\n            <p>\n              <strong>Export:</strong> Save your current theme or all custom\n              presets as JSON files\n            </p>\n            <p>\n              <strong>Import:</strong> Load theme files to apply immediately or\n              save as presets\n            </p>\n            <p>\n              <strong>Backups:</strong> Automatic backups are created before\n              major changes\n            </p>\n            <p>\n              <strong>File Format:</strong> Only JSON files (.json) are\n              supported\n            </p>\n            <p>\n              <strong>Compatibility:</strong> Themes are version-checked for\n              compatibility\n            </p>\n          </div>\n        </details>\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeExporter;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/theme/ThemePicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/theme/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/components/ui/ThemeToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/config/cacheConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/DragDropContext.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":141,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":141,"endColumn":25,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":153,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":153,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":172,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":172,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":193,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":193,"endColumn":27,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":228,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":228,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/ThemeContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":209,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":209,"endColumn":47},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":668,"column":31,"nodeType":"Identifier","messageId":"namedExport","endLine":668,"endColumn":45},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":669,"column":31,"nodeType":"Identifier","messageId":"namedExport","endLine":669,"endColumn":45},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":670,"column":34,"nodeType":"Identifier","messageId":"namedExport","endLine":670,"endColumn":51},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":671,"column":38,"nodeType":"Identifier","messageId":"namedExport","endLine":671,"endColumn":59},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":672,"column":32,"nodeType":"Identifier","messageId":"namedExport","endLine":672,"endColumn":47},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":675,"column":22,"nodeType":"Identifier","messageId":"namedExport","endLine":675,"endColumn":38},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":678,"column":22,"nodeType":"Identifier","messageId":"namedExport","endLine":678,"endColumn":36}],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":126,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":126,"endColumn":41,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'updateCSSProperties'. Either include it or remove the dependency array.","line":325,"column":6,"nodeType":"ArrayExpression","endLine":325,"endColumn":29,"suggestions":[{"desc":"Update the dependencies array to be: [config, isThemeLoaded, updateCSSProperties]","fix":{"range":[9085,9108],"text":"[config, isThemeLoaded, updateCSSProperties]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":632,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":632,"endColumn":22,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":645,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":645,"endColumn":23,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Unified Theme Context System\n * Phase 1.1.1: Foundation & Infrastructure\n *\n * Following CLAUDE.md principles:\n * - Single Responsibility: Manages comprehensive theme configuration\n * - Open/Closed: Extensible by adding new theme presets\n * - DRY: Single source of truth for all theme management\n * - Dependency Inversion: Abstracts theme details from components\n *\n * Integrates with:\n * - Existing next-themes system (ThemeToggle.tsx)\n * - Form theme system (formThemes.ts)\n * - CSS design system (pokemon-design-system.css)\n */\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n} from 'react';\nimport { useTheme as useNextTheme } from 'next-themes';\nimport { ThemeColor, formThemes } from '../theme/formThemes';\n\n// ================================\n// THEME INTERFACES & TYPES\n// ================================\n\nexport type VisualTheme =\n  | 'context7-premium'\n  | 'context7-futuristic'\n  | 'dba-cosmic'\n  | 'minimal';\nexport type ColorScheme = 'light' | 'dark' | 'system';\nexport type Density = 'compact' | 'comfortable' | 'spacious';\nexport type AnimationIntensity = 'subtle' | 'normal' | 'enhanced' | 'disabled';\n\n/**\n * Comprehensive theme configuration interface\n * Extends existing form theme system with visual themes and settings\n */\nexport interface ThemeConfiguration {\n  // Visual Theme Settings\n  visualTheme: VisualTheme;\n  colorScheme: ColorScheme;\n  density: Density;\n  animationIntensity: AnimationIntensity;\n\n  // Color Configuration (extends existing formThemes)\n  primaryColor: ThemeColor;\n\n  // Accessibility Settings\n  highContrast: boolean;\n  reducedMotion: boolean;\n\n  // Advanced Settings\n  glassmorphismIntensity: number; // 0-100\n  particleEffectsEnabled: boolean;\n  customCSSProperties?: Record<string, string>;\n}\n\n/**\n * Theme preset configurations\n * Each preset represents a complete visual style\n */\nexport interface ThemePreset {\n  id: VisualTheme;\n  name: string;\n  description: string;\n  config: Partial<ThemeConfiguration>;\n  preview: {\n    gradient: string;\n    backgroundColor: string;\n    textColor: string;\n  };\n}\n\n/**\n * Theme context interface\n * Provides theme state and manipulation functions\n */\nexport interface ThemeContextType {\n  // Current Configuration\n  config: ThemeConfiguration;\n  resolvedTheme: 'light' | 'dark';\n\n  // Theme Management\n  setVisualTheme: (theme: VisualTheme) => void;\n  setColorScheme: (scheme: ColorScheme) => void;\n  setDensity: (density: Density) => void;\n  setAnimationIntensity: (intensity: AnimationIntensity) => void;\n  setPrimaryColor: (color: ThemeColor) => void;\n\n  // Accessibility\n  toggleHighContrast: () => void;\n  toggleReducedMotion: () => void;\n\n  // Advanced Configuration\n  setGlassmorphismIntensity: (intensity: number) => void;\n  toggleParticleEffects: () => void;\n  setCustomProperties: (properties: Record<string, string>) => void;\n\n  // Preset Management\n  applyPreset: (presetId: VisualTheme) => void;\n  saveCustomPreset: (name: string, config: ThemeConfiguration) => void;\n  loadCustomPreset: (name: string) => void;\n  resetToDefaults: () => void;\n\n  // Utility Functions\n  getThemeClasses: () => string;\n  getCSSProperties: () => Record<string, string>;\n  isThemeLoaded: boolean;\n\n  // System Integration\n  getSystemPreference: () => 'light' | 'dark';\n  isSystemTheme: boolean;\n}\n\n// ================================\n// THEME PRESETS\n// ================================\n\n// eslint-disable-next-line react-refresh/only-export-components\nexport const themePresets: ThemePreset[] = [\n  {\n    id: 'context7-premium',\n    name: 'Context7 Premium',\n    description:\n      'Glassmorphism design with premium gradients and micro-interactions',\n    config: {\n      visualTheme: 'context7-premium',\n      primaryColor: 'dark',\n      density: 'comfortable',\n      animationIntensity: 'normal',\n      glassmorphismIntensity: 80,\n      particleEffectsEnabled: true,\n    },\n    preview: {\n      gradient: 'from-zinc-900/80 to-zinc-800/80',\n      backgroundColor: 'backdrop-blur-xl',\n      textColor: 'text-cyan-400',\n    },\n  },\n  {\n    id: 'context7-futuristic',\n    name: 'Context7 2025 Futuristic',\n    description: 'Advanced neural network patterns with holographic effects',\n    config: {\n      visualTheme: 'context7-futuristic',\n      primaryColor: 'blue',\n      density: 'comfortable',\n      animationIntensity: 'enhanced',\n      glassmorphismIntensity: 100,\n      particleEffectsEnabled: true,\n    },\n    preview: {\n      gradient: 'from-blue-500 to-cyan-500',\n      backgroundColor: 'neural-network',\n      textColor: 'text-blue-400',\n    },\n  },\n  {\n    id: 'dba-cosmic',\n    name: 'DBA Cosmic',\n    description:\n      'Space-themed with cosmic gradients and holographic backgrounds',\n    config: {\n      visualTheme: 'dba-cosmic',\n      primaryColor: 'purple',\n      density: 'spacious',\n      animationIntensity: 'enhanced',\n      glassmorphismIntensity: 90,\n      particleEffectsEnabled: true,\n    },\n    preview: {\n      gradient: 'from-purple-500 to-pink-500',\n      backgroundColor: 'cosmic-gradient',\n      textColor: 'text-purple-400',\n    },\n  },\n  {\n    id: 'minimal',\n    name: 'Minimal Clean',\n    description: 'Clean, accessible design with reduced visual complexity',\n    config: {\n      visualTheme: 'minimal',\n      primaryColor: 'emerald',\n      density: 'comfortable',\n      animationIntensity: 'subtle',\n      glassmorphismIntensity: 20,\n      particleEffectsEnabled: false,\n      highContrast: false,\n      reducedMotion: false,\n    },\n    preview: {\n      gradient: 'from-emerald-500 to-teal-500',\n      backgroundColor: 'clean-white',\n      textColor: 'text-emerald-600',\n    },\n  },\n];\n\n// ================================\n// DEFAULT CONFIGURATION\n// ================================\n\nexport const defaultConfig: ThemeConfiguration = {\n  visualTheme: 'context7-premium',\n  colorScheme: 'system',\n  density: 'comfortable',\n  animationIntensity: 'normal',\n  primaryColor: 'dark',\n  highContrast: false,\n  reducedMotion: false,\n  glassmorphismIntensity: 80,\n  particleEffectsEnabled: true,\n};\n\n// ================================\n// STORAGE UTILITIES\n// ================================\n\nconst STORAGE_KEY = 'pokemon-theme-config';\n\nconst saveConfig = (config: ThemeConfiguration): void => {\n  try {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(config));\n  } catch (error) {\n    console.warn('Failed to save theme configuration:', error);\n  }\n};\n\nconst loadConfig = (): ThemeConfiguration => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    if (stored) {\n      const parsed = JSON.parse(stored);\n      return { ...defaultConfig, ...parsed };\n    }\n  } catch (error) {\n    console.warn('Failed to load theme configuration:', error);\n  }\n  return defaultConfig;\n};\n\n// ================================\n// THEME CONTEXT\n// ================================\n\nconst ThemeContext = createContext<ThemeContextType | null>(null);\n\n/**\n * Theme Provider Component\n * Manages all theme state and provides theme manipulation functions\n */\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const {\n    theme: _nextTheme,\n    setTheme: setNextTheme,\n    resolvedTheme,\n  } = useNextTheme();\n  const [config, setConfig] = useState<ThemeConfiguration>(defaultConfig);\n  const [isThemeLoaded, setIsThemeLoaded] = useState(false);\n\n  // Load configuration on mount and set up system theme detection\n  useEffect(() => {\n    const loadedConfig = loadConfig();\n    setConfig(loadedConfig);\n    setIsThemeLoaded(true);\n\n    // Sync color scheme with next-themes\n    if (loadedConfig.colorScheme !== 'system') {\n      setNextTheme(loadedConfig.colorScheme);\n    }\n\n    // Auto dark/light mode detection - listen for system changes\n    if (\n      loadedConfig.colorScheme === 'system' &&\n      typeof window !== 'undefined'\n    ) {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n      const handleSystemThemeChange = () => {\n        // Only apply if user hasn't overridden system setting\n        setConfig((prev) => {\n          if (prev.colorScheme === 'system') {\n            // Update next-themes to match system preference\n            setNextTheme('system');\n            return prev;\n          }\n          return prev;\n        });\n      };\n\n      // Add listener for system theme changes\n      if (mediaQuery.addEventListener) {\n        mediaQuery.addEventListener('change', handleSystemThemeChange);\n      } else {\n        // Fallback for older browsers\n        mediaQuery.addListener(handleSystemThemeChange);\n      }\n\n      // Cleanup function\n      return () => {\n        if (mediaQuery.removeEventListener) {\n          mediaQuery.removeEventListener('change', handleSystemThemeChange);\n        } else {\n          mediaQuery.removeListener(handleSystemThemeChange);\n        }\n      };\n    }\n  }, [setNextTheme]);\n\n  // Save configuration whenever it changes\n  useEffect(() => {\n    if (isThemeLoaded) {\n      saveConfig(config);\n      updateCSSProperties(config);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config, isThemeLoaded]);\n\n  // Update CSS custom properties based on theme configuration\n  const updateCSSProperties = useCallback((themeConfig: ThemeConfiguration) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const root = document.documentElement;\n    const formTheme = formThemes[themeConfig.primaryColor];\n\n    // Density tokens\n    const densityMultiplier = {\n      compact: 0.8,\n      comfortable: 1,\n      spacious: 1.2,\n    }[themeConfig.density];\n\n    // Animation tokens\n    const animationDurations = {\n      subtle: { fast: '0.1s', normal: '0.2s', slow: '0.3s' },\n      normal: { fast: '0.15s', normal: '0.3s', slow: '0.5s' },\n      enhanced: { fast: '0.2s', normal: '0.4s', slow: '0.7s' },\n      disabled: { fast: '0s', normal: '0s', slow: '0s' },\n    }[themeConfig.animationIntensity];\n\n    // Apply theme tokens\n    root.style.setProperty(\n      '--theme-primary-gradient',\n      formTheme.button.primary\n    );\n    root.style.setProperty(\n      '--theme-primary-hover',\n      formTheme.button.primaryHover\n    );\n    root.style.setProperty(\n      '--theme-header-background',\n      formTheme.header.background\n    );\n    root.style.setProperty('--theme-border-color', formTheme.element.border);\n    root.style.setProperty('--theme-focus-ring', formTheme.element.focus);\n\n    // Density spacing\n    root.style.setProperty(\n      '--density-spacing-xs',\n      `${0.25 * densityMultiplier}rem`\n    );\n    root.style.setProperty(\n      '--density-spacing-sm',\n      `${0.5 * densityMultiplier}rem`\n    );\n    root.style.setProperty(\n      '--density-spacing-md',\n      `${1 * densityMultiplier}rem`\n    );\n    root.style.setProperty(\n      '--density-spacing-lg',\n      `${1.5 * densityMultiplier}rem`\n    );\n    root.style.setProperty(\n      '--density-spacing-xl',\n      `${2 * densityMultiplier}rem`\n    );\n\n    // Animation durations\n    root.style.setProperty(\n      '--animation-duration-fast',\n      animationDurations.fast\n    );\n    root.style.setProperty(\n      '--animation-duration-normal',\n      animationDurations.normal\n    );\n    root.style.setProperty(\n      '--animation-duration-slow',\n      animationDurations.slow\n    );\n\n    // Animation delays for orchestrated effects\n    root.style.setProperty('--animation-delay-short', '0.2s');\n    root.style.setProperty('--animation-delay-medium', '0.5s');\n    root.style.setProperty('--animation-delay-long', '0.9s');\n\n    // Complex animation durations for special effects\n    root.style.setProperty('--animation-duration-orbit', '15s');\n    root.style.setProperty('--animation-duration-particle', '20s');\n\n    // Glassmorphism intensity\n    const glassAlpha = themeConfig.glassmorphismIntensity / 100;\n    root.style.setProperty('--glass-alpha', glassAlpha.toString());\n    root.style.setProperty(\n      '--glass-blur',\n      `${themeConfig.glassmorphismIntensity / 5}px`\n    );\n\n    // Visual theme classes\n    root.className = root.className.replace(/theme-\\w+/g, '');\n    root.classList.add(`theme-${themeConfig.visualTheme}`);\n\n    // Accessibility settings\n    if (themeConfig.reducedMotion) {\n      root.style.setProperty('--animation-duration-fast', '0s');\n      root.style.setProperty('--animation-duration-normal', '0s');\n      root.style.setProperty('--animation-duration-slow', '0s');\n    }\n\n    // Custom properties\n    if (themeConfig.customCSSProperties) {\n      Object.entries(themeConfig.customCSSProperties).forEach(\n        ([key, value]) => {\n          root.style.setProperty(key, value);\n        }\n      );\n    }\n  }, []);\n\n  // Theme manipulation functions\n  const setVisualTheme = useCallback((theme: VisualTheme) => {\n    setConfig((prev) => ({ ...prev, visualTheme: theme }));\n  }, []);\n\n  const setColorScheme = useCallback(\n    (scheme: ColorScheme) => {\n      setConfig((prev) => ({ ...prev, colorScheme: scheme }));\n      setNextTheme(scheme);\n    },\n    [setNextTheme]\n  );\n\n  const setDensity = useCallback((density: Density) => {\n    setConfig((prev) => ({ ...prev, density }));\n  }, []);\n\n  const setAnimationIntensity = useCallback((intensity: AnimationIntensity) => {\n    setConfig((prev) => ({ ...prev, animationIntensity: intensity }));\n  }, []);\n\n  const setPrimaryColor = useCallback((color: ThemeColor) => {\n    setConfig((prev) => ({ ...prev, primaryColor: color }));\n  }, []);\n\n  const toggleHighContrast = useCallback(() => {\n    setConfig((prev) => ({ ...prev, highContrast: !prev.highContrast }));\n  }, []);\n\n  const toggleReducedMotion = useCallback(() => {\n    setConfig((prev) => ({ ...prev, reducedMotion: !prev.reducedMotion }));\n  }, []);\n\n  const setGlassmorphismIntensity = useCallback((intensity: number) => {\n    setConfig((prev) => ({\n      ...prev,\n      glassmorphismIntensity: Math.max(0, Math.min(100, intensity)),\n    }));\n  }, []);\n\n  const toggleParticleEffects = useCallback(() => {\n    setConfig((prev) => ({\n      ...prev,\n      particleEffectsEnabled: !prev.particleEffectsEnabled,\n    }));\n  }, []);\n\n  const setCustomProperties = useCallback(\n    (properties: Record<string, string>) => {\n      setConfig((prev) => ({ ...prev, customCSSProperties: properties }));\n    },\n    []\n  );\n\n  // Preset management\n  const applyPreset = useCallback((presetId: VisualTheme) => {\n    const preset = themePresets.find((p) => p.id === presetId);\n    if (preset) {\n      setConfig((prev) => ({ ...prev, ...preset.config }));\n    }\n  }, []);\n\n  const saveCustomPreset = useCallback(\n    (name: string, themeConfig: ThemeConfiguration) => {\n      try {\n        const customPresets = JSON.parse(\n          localStorage.getItem('pokemon-custom-presets') || '{}'\n        );\n        customPresets[name] = themeConfig;\n        localStorage.setItem(\n          'pokemon-custom-presets',\n          JSON.stringify(customPresets)\n        );\n      } catch (error) {\n        console.warn('Failed to save custom preset:', error);\n      }\n    },\n    []\n  );\n\n  const loadCustomPreset = useCallback((name: string) => {\n    try {\n      const customPresets = JSON.parse(\n        localStorage.getItem('pokemon-custom-presets') || '{}'\n      );\n      if (customPresets[name]) {\n        setConfig(customPresets[name]);\n      }\n    } catch (error) {\n      console.warn('Failed to load custom preset:', error);\n    }\n  }, []);\n\n  const resetToDefaults = useCallback(() => {\n    setConfig(defaultConfig);\n    setNextTheme('system');\n  }, [setNextTheme]);\n\n  // Utility functions\n  const getThemeClasses = useCallback((): string => {\n    const classes = [\n      `theme-${config.visualTheme}`,\n      `density-${config.density}`,\n      `animation-${config.animationIntensity}`,\n    ];\n\n    if (config.highContrast) {\n      classes.push('high-contrast');\n    }\n    if (config.reducedMotion) {\n      classes.push('reduced-motion');\n    }\n    if (!config.particleEffectsEnabled) {\n      classes.push('no-particles');\n    }\n\n    return classes.join(' ');\n  }, [config]);\n\n  const getCSSProperties = useCallback((): Record<string, string> => {\n    const formTheme = formThemes[config.primaryColor];\n    const densityMultiplier = {\n      compact: 0.8,\n      comfortable: 1,\n      spacious: 1.2,\n    }[config.density];\n\n    return {\n      '--theme-primary-gradient': formTheme.button.primary.replace(\n        'bg-gradient-to-r ',\n        ''\n      ),\n      '--theme-primary-hover': formTheme.button.primaryHover.replace(\n        'hover:',\n        ''\n      ),\n      '--density-multiplier': densityMultiplier.toString(),\n      '--glass-alpha': (config.glassmorphismIntensity / 100).toString(),\n      '--glass-blur': `${config.glassmorphismIntensity / 5}px`,\n      ...config.customCSSProperties,\n    };\n  }, [config]);\n\n  // System theme utilities\n  const getSystemPreference = useCallback((): 'light' | 'dark' => {\n    if (typeof window === 'undefined') {\n      return 'dark';\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? 'dark'\n      : 'light';\n  }, []);\n\n  const isSystemTheme = config.colorScheme === 'system';\n\n  const contextValue: ThemeContextType = {\n    config,\n    resolvedTheme: (resolvedTheme as 'light' | 'dark') || 'dark',\n    setVisualTheme,\n    setColorScheme,\n    setDensity,\n    setAnimationIntensity,\n    setPrimaryColor,\n    toggleHighContrast,\n    toggleReducedMotion,\n    setGlassmorphismIntensity,\n    toggleParticleEffects,\n    setCustomProperties,\n    applyPreset,\n    saveCustomPreset,\n    loadCustomPreset,\n    resetToDefaults,\n    getThemeClasses,\n    getCSSProperties,\n    isThemeLoaded,\n    getSystemPreference,\n    isSystemTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={contextValue}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n/**\n * Custom hook to access theme context\n * Provides type-safe access to all theme functionality\n */\n// eslint-disable-next-line react-refresh/only-export-components\nexport const useTheme = (): ThemeContextType => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n/**\n * HOC for theme-aware components\n * Automatically provides theme configuration as props\n */\n// eslint-disable-next-line react-refresh/only-export-components\nexport const withTheme = <P extends object>(\n  Component: React.ComponentType<P & { theme: ThemeContextType }>\n) => {\n  const ThemedComponent = (props: P) => {\n    const theme = useTheme();\n    return <Component {...props} theme={theme} />;\n  };\n  ThemedComponent.displayName = `withTheme(${Component.displayName || Component.name || 'Component'})`;\n  return ThemedComponent;\n};\n\n// ================================\n// NEW DECOMPOSED THEME SYSTEM\n// ================================\n\n// Export the new composed theme provider\nexport { ComposedThemeProvider } from './theme/ComposedThemeProvider';\n\n// For backward compatibility, also export the original provider\n// Components can gradually migrate to the new focused providers\nexport { ThemeProvider as LegacyThemeProvider };\n\n// Re-export focused providers for direct usage\nexport { VisualThemeProvider, useVisualTheme } from './theme/VisualThemeProvider';\nexport { LayoutThemeProvider, useLayoutTheme } from './theme/LayoutThemeProvider';\nexport { AnimationThemeProvider, useAnimationTheme } from './theme/AnimationThemeProvider';\nexport { AccessibilityThemeProvider, useAccessibilityTheme } from './theme/AccessibilityThemeProvider';\nexport { ThemeStorageProvider, useThemeStorage } from './theme/ThemeStorageProvider';\n\n// New composite hook that uses the decomposed system\nexport { useTheme as useComposedTheme } from '../hooks/theme/useTheme';\n\n// Keep the original monolithic useTheme for backward compatibility during migration\nexport { useTheme as useLegacyTheme };\n\n// Default export for seamless migration\nexport default ThemeContext;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/theme/AccessibilityThemeProvider.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":126,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":126,"endColumn":35}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Accessibility Theme Provider\n * AGENT 3: THEMECONTEXT DECOMPOSITION - Task 1.4\n * \n * Focused context for accessibility settings management following ISP\n * Handles: high contrast, reduced motion, and a11y-related theme aspects\n */\n\nimport React, { createContext, useContext, useCallback } from 'react';\n\n// ================================\n// ACCESSIBILITY THEME INTERFACES\n// ================================\n\nexport interface AccessibilityThemeState {\n  highContrast: boolean;\n  reducedMotion: boolean;\n}\n\nexport interface AccessibilityThemeContextType {\n  // Current State\n  highContrast: boolean;\n  reducedMotion: boolean;\n  \n  // Accessibility Management\n  toggleHighContrast: () => void;\n  toggleReducedMotion: () => void;\n  setHighContrast: (enabled: boolean) => void;\n  setReducedMotion: (enabled: boolean) => void;\n  \n  // Utility Functions\n  getAccessibilityClasses: () => string;\n  shouldReduceMotion: () => boolean;\n  isHighContrastEnabled: () => boolean;\n}\n\n// ================================\n// CONTEXT SETUP\n// ================================\n\nconst AccessibilityThemeContext = createContext<AccessibilityThemeContextType | null>(null);\n\nexport interface AccessibilityThemeProviderProps {\n  children: React.ReactNode;\n  state: AccessibilityThemeState;\n  onStateChange: (newState: Partial<AccessibilityThemeState>) => void;\n}\n\n/**\n * Accessibility Theme Provider Component\n * Manages accessibility state following Single Responsibility Principle\n * Only handles accessibility-related theme aspects (contrast, motion, etc.)\n */\nexport const AccessibilityThemeProvider: React.FC<AccessibilityThemeProviderProps> = ({\n  children,\n  state,\n  onStateChange,\n}) => {\n  // Accessibility manipulation functions\n  const toggleHighContrast = useCallback(() => {\n    onStateChange({ highContrast: !state.highContrast });\n  }, [onStateChange, state.highContrast]);\n\n  const toggleReducedMotion = useCallback(() => {\n    onStateChange({ reducedMotion: !state.reducedMotion });\n  }, [onStateChange, state.reducedMotion]);\n\n  const setHighContrast = useCallback((enabled: boolean) => {\n    onStateChange({ highContrast: enabled });\n  }, [onStateChange]);\n\n  const setReducedMotion = useCallback((enabled: boolean) => {\n    onStateChange({ reducedMotion: enabled });\n  }, [onStateChange]);\n\n  // Utility functions\n  const getAccessibilityClasses = useCallback((): string => {\n    const classes: string[] = [];\n    \n    if (state.highContrast) {\n      classes.push('high-contrast');\n    }\n    if (state.reducedMotion) {\n      classes.push('reduced-motion');\n    }\n    \n    return classes.join(' ');\n  }, [state]);\n\n  const shouldReduceMotion = useCallback((): boolean => {\n    return state.reducedMotion;\n  }, [state.reducedMotion]);\n\n  const isHighContrastEnabled = useCallback((): boolean => {\n    return state.highContrast;\n  }, [state.highContrast]);\n\n  const contextValue: AccessibilityThemeContextType = {\n    // Current State\n    highContrast: state.highContrast,\n    reducedMotion: state.reducedMotion,\n    \n    // Accessibility Management\n    toggleHighContrast,\n    toggleReducedMotion,\n    setHighContrast,\n    setReducedMotion,\n    \n    // Utility Functions\n    getAccessibilityClasses,\n    shouldReduceMotion,\n    isHighContrastEnabled,\n  };\n\n  return (\n    <AccessibilityThemeContext.Provider value={contextValue}>\n      {children}\n    </AccessibilityThemeContext.Provider>\n  );\n};\n\n/**\n * Hook to access accessibility theme context\n * Provides type-safe access to accessibility theme functionality\n */\nexport const useAccessibilityTheme = (): AccessibilityThemeContextType => {\n  const context = useContext(AccessibilityThemeContext);\n  if (!context) {\n    throw new Error('useAccessibilityTheme must be used within an AccessibilityThemeProvider');\n  }\n  return context;\n};","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/theme/AnimationThemeProvider.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":148,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":148,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Animation Theme Provider\n * AGENT 3: THEMECONTEXT DECOMPOSITION - Task 1.3\n * \n * Focused context for animation and motion management following ISP\n * Handles: animation intensity, durations, delays, and motion settings\n */\n\nimport React, { createContext, useContext, useCallback } from 'react';\nimport { AnimationIntensity } from '../ThemeContext';\n\n// ================================\n// ANIMATION THEME INTERFACES\n// ================================\n\nexport interface AnimationThemeState {\n  animationIntensity: AnimationIntensity;\n}\n\nexport interface AnimationDurations {\n  fast: string;\n  normal: string;\n  slow: string;\n}\n\nexport interface AnimationDelays {\n  short: string;\n  medium: string;\n  long: string;\n}\n\nexport interface ComplexAnimationDurations {\n  orbit: string;\n  particle: string;\n}\n\nexport interface AnimationThemeContextType {\n  // Current State\n  animationIntensity: AnimationIntensity;\n  \n  // Animation Management\n  setAnimationIntensity: (intensity: AnimationIntensity) => void;\n  \n  // Utility Functions\n  getAnimationDurations: () => AnimationDurations;\n  getAnimationDelays: () => AnimationDelays;\n  getComplexAnimationDurations: () => ComplexAnimationDurations;\n  getAnimationClasses: () => string;\n  isAnimationDisabled: () => boolean;\n}\n\n// ================================\n// ANIMATION UTILITIES\n// ================================\n\nconst animationDurationMap: Record<AnimationIntensity, AnimationDurations> = {\n  subtle: { fast: '0.1s', normal: '0.2s', slow: '0.3s' },\n  normal: { fast: '0.15s', normal: '0.3s', slow: '0.5s' },\n  enhanced: { fast: '0.2s', normal: '0.4s', slow: '0.7s' },\n  disabled: { fast: '0s', normal: '0s', slow: '0s' },\n};\n\nconst animationDelays: AnimationDelays = {\n  short: '0.2s',\n  medium: '0.5s',\n  long: '0.9s',\n};\n\nconst complexAnimationDurations: ComplexAnimationDurations = {\n  orbit: '15s',\n  particle: '20s',\n};\n\n// ================================\n// CONTEXT SETUP\n// ================================\n\nconst AnimationThemeContext = createContext<AnimationThemeContextType | null>(null);\n\nexport interface AnimationThemeProviderProps {\n  children: React.ReactNode;\n  state: AnimationThemeState;\n  onStateChange: (newState: Partial<AnimationThemeState>) => void;\n}\n\n/**\n * Animation Theme Provider Component\n * Manages animation and motion state following Single Responsibility Principle\n * Only handles animation intensity, durations, and motion-related theme aspects\n */\nexport const AnimationThemeProvider: React.FC<AnimationThemeProviderProps> = ({\n  children,\n  state,\n  onStateChange,\n}) => {\n  // Animation manipulation functions\n  const setAnimationIntensity = useCallback((intensity: AnimationIntensity) => {\n    onStateChange({ animationIntensity: intensity });\n  }, [onStateChange]);\n\n  // Utility functions\n  const getAnimationDurations = useCallback((): AnimationDurations => {\n    return animationDurationMap[state.animationIntensity];\n  }, [state.animationIntensity]);\n\n  const getAnimationDelays = useCallback((): AnimationDelays => {\n    return animationDelays;\n  }, []);\n\n  const getComplexAnimationDurations = useCallback((): ComplexAnimationDurations => {\n    return complexAnimationDurations;\n  }, []);\n\n  const getAnimationClasses = useCallback((): string => {\n    return `animation-${state.animationIntensity}`;\n  }, [state.animationIntensity]);\n\n  const isAnimationDisabled = useCallback((): boolean => {\n    return state.animationIntensity === 'disabled';\n  }, [state.animationIntensity]);\n\n  const contextValue: AnimationThemeContextType = {\n    // Current State\n    animationIntensity: state.animationIntensity,\n    \n    // Animation Management\n    setAnimationIntensity,\n    \n    // Utility Functions\n    getAnimationDurations,\n    getAnimationDelays,\n    getComplexAnimationDurations,\n    getAnimationClasses,\n    isAnimationDisabled,\n  };\n\n  return (\n    <AnimationThemeContext.Provider value={contextValue}>\n      {children}\n    </AnimationThemeContext.Provider>\n  );\n};\n\n/**\n * Hook to access animation theme context\n * Provides type-safe access to animation theme functionality\n */\nexport const useAnimationTheme = (): AnimationThemeContextType => {\n  const context = useContext(AnimationThemeContext);\n  if (!context) {\n    throw new Error('useAnimationTheme must be used within an AnimationThemeProvider');\n  }\n  return context;\n};","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/theme/ComposedThemeProvider.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'originalDefaultConfig' is defined but never used. Allowed unused vars must match /^_/u.","line":14,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":14,"endColumn":41},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'updateCSSProperties'. Either include it or remove the dependency array.","line":184,"column":6,"nodeType":"ArrayExpression","endLine":184,"endColumn":14,"suggestions":[{"desc":"Update the dependencies array to be: [config, updateCSSProperties]","fix":{"range":[5930,5938],"text":"[config, updateCSSProperties]"}}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Composed Theme Provider\n * AGENT 3: THEMECONTEXT DECOMPOSITION - Task 4\n * \n * Composes all focused theme providers following DIP\n * Maintains existing theme functionality while enabling focused usage\n * Acts as the orchestrator for all theme-related state management\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useTheme as useNextTheme } from 'next-themes';\nimport { \n  ThemeConfiguration, \n  defaultConfig as originalDefaultConfig,\n  ColorScheme,\n  ThemeColor \n} from '../ThemeContext';\nimport { VisualThemeProvider, VisualThemeState } from './VisualThemeProvider';\nimport { LayoutThemeProvider, LayoutThemeState } from './LayoutThemeProvider';\nimport { AnimationThemeProvider, AnimationThemeState } from './AnimationThemeProvider';\nimport { AccessibilityThemeProvider, AccessibilityThemeState } from './AccessibilityThemeProvider';\nimport { ThemeStorageProvider } from './ThemeStorageProvider';\nimport { formThemes } from '../../theme/formThemes';\n\n// ================================\n// COMPOSED THEME STATE\n// ================================\n\ninterface ComposedThemeState {\n  visual: VisualThemeState;\n  layout: LayoutThemeState;\n  animation: AnimationThemeState;\n  accessibility: AccessibilityThemeState;\n  colorScheme: ColorScheme;\n  primaryColor: ThemeColor;\n  customCSSProperties?: Record<string, string>;\n  isThemeLoaded: boolean;\n}\n\n// ================================\n// DEFAULT CONFIGURATION\n// ================================\n\nconst defaultConfig: ComposedThemeState = {\n  visual: {\n    visualTheme: 'context7-premium',\n    glassmorphismIntensity: 80,\n    particleEffectsEnabled: true,\n  },\n  layout: {\n    density: 'comfortable',\n  },\n  animation: {\n    animationIntensity: 'normal',\n  },\n  accessibility: {\n    highContrast: false,\n    reducedMotion: false,\n  },\n  colorScheme: 'system',\n  primaryColor: 'dark',\n  isThemeLoaded: false,\n};\n\n// ================================\n// STORAGE UTILITIES\n// ================================\n\nconst STORAGE_KEY = 'pokemon-theme-config';\n\nconst saveComposedConfig = (config: ComposedThemeState): void => {\n  try {\n    // Convert to the original ThemeConfiguration format for storage compatibility\n    const legacyConfig: ThemeConfiguration = {\n      visualTheme: config.visual.visualTheme,\n      colorScheme: config.colorScheme,\n      density: config.layout.density,\n      animationIntensity: config.animation.animationIntensity,\n      primaryColor: config.primaryColor,\n      highContrast: config.accessibility.highContrast,\n      reducedMotion: config.accessibility.reducedMotion,\n      glassmorphismIntensity: config.visual.glassmorphismIntensity,\n      particleEffectsEnabled: config.visual.particleEffectsEnabled,\n      customCSSProperties: config.customCSSProperties,\n    };\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(legacyConfig));\n  } catch (error) {\n    console.warn('Failed to save theme configuration:', error);\n  }\n};\n\nconst loadComposedConfig = (): ComposedThemeState => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    if (stored) {\n      const legacyConfig: ThemeConfiguration = JSON.parse(stored);\n      return {\n        visual: {\n          visualTheme: legacyConfig.visualTheme,\n          glassmorphismIntensity: legacyConfig.glassmorphismIntensity,\n          particleEffectsEnabled: legacyConfig.particleEffectsEnabled,\n        },\n        layout: {\n          density: legacyConfig.density,\n        },\n        animation: {\n          animationIntensity: legacyConfig.animationIntensity,\n        },\n        accessibility: {\n          highContrast: legacyConfig.highContrast,\n          reducedMotion: legacyConfig.reducedMotion,\n        },\n        colorScheme: legacyConfig.colorScheme,\n        primaryColor: legacyConfig.primaryColor,\n        customCSSProperties: legacyConfig.customCSSProperties,\n        isThemeLoaded: true,\n      };\n    }\n  } catch (error) {\n    console.warn('Failed to load theme configuration:', error);\n  }\n  return { ...defaultConfig, isThemeLoaded: true };\n};\n\n// ================================\n// COMPOSED THEME PROVIDER\n// ================================\n\nexport interface ComposedThemeProviderProps {\n  children: React.ReactNode;\n}\n\n/**\n * Composed Theme Provider Component\n * Orchestrates all focused theme providers and manages global theme state\n * Maintains backward compatibility while enabling focused theme usage\n */\nexport const ComposedThemeProvider: React.FC<ComposedThemeProviderProps> = ({\n  children,\n}) => {\n  const { setTheme: setNextTheme } = useNextTheme();\n  const [config, setConfig] = useState<ComposedThemeState>(defaultConfig);\n\n  // Load configuration on mount\n  useEffect(() => {\n    const loadedConfig = loadComposedConfig();\n    setConfig(loadedConfig);\n\n    // Sync color scheme with next-themes\n    if (loadedConfig.colorScheme !== 'system') {\n      setNextTheme(loadedConfig.colorScheme);\n    }\n\n    // Auto dark/light mode detection for system theme\n    if (loadedConfig.colorScheme === 'system' && typeof window !== 'undefined') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n      const handleSystemThemeChange = () => {\n        setConfig((prev) => {\n          if (prev.colorScheme === 'system') {\n            setNextTheme('system');\n            return prev;\n          }\n          return prev;\n        });\n      };\n\n      if (mediaQuery.addEventListener) {\n        mediaQuery.addEventListener('change', handleSystemThemeChange);\n        return () => mediaQuery.removeEventListener('change', handleSystemThemeChange);\n      } else {\n        mediaQuery.addListener(handleSystemThemeChange);\n        return () => mediaQuery.removeListener(handleSystemThemeChange);\n      }\n    }\n  }, [setNextTheme]);\n\n  // Save configuration and update CSS whenever it changes\n  useEffect(() => {\n    if (config.isThemeLoaded) {\n      saveComposedConfig(config);\n      updateCSSProperties(config);\n    }\n  }, [config]);\n\n  // Update CSS custom properties based on theme configuration\n  const updateCSSProperties = useCallback((themeConfig: ComposedThemeState) => {\n    if (typeof document === 'undefined') return;\n\n    const root = document.documentElement;\n    const formTheme = formThemes[themeConfig.primaryColor];\n\n    // Density tokens\n    const densityMultiplier = {\n      compact: 0.8,\n      comfortable: 1,\n      spacious: 1.2,\n    }[themeConfig.layout.density];\n\n    // Animation tokens\n    const animationDurations = {\n      subtle: { fast: '0.1s', normal: '0.2s', slow: '0.3s' },\n      normal: { fast: '0.15s', normal: '0.3s', slow: '0.5s' },\n      enhanced: { fast: '0.2s', normal: '0.4s', slow: '0.7s' },\n      disabled: { fast: '0s', normal: '0s', slow: '0s' },\n    }[themeConfig.animation.animationIntensity];\n\n    // Apply theme tokens\n    root.style.setProperty('--theme-primary-gradient', formTheme.button.primary);\n    root.style.setProperty('--theme-primary-hover', formTheme.button.primaryHover);\n    root.style.setProperty('--theme-header-background', formTheme.header.background);\n    root.style.setProperty('--theme-border-color', formTheme.element.border);\n    root.style.setProperty('--theme-focus-ring', formTheme.element.focus);\n\n    // Density spacing\n    root.style.setProperty('--density-spacing-xs', `${0.25 * densityMultiplier}rem`);\n    root.style.setProperty('--density-spacing-sm', `${0.5 * densityMultiplier}rem`);\n    root.style.setProperty('--density-spacing-md', `${1 * densityMultiplier}rem`);\n    root.style.setProperty('--density-spacing-lg', `${1.5 * densityMultiplier}rem`);\n    root.style.setProperty('--density-spacing-xl', `${2 * densityMultiplier}rem`);\n\n    // Animation durations\n    root.style.setProperty('--animation-duration-fast', animationDurations.fast);\n    root.style.setProperty('--animation-duration-normal', animationDurations.normal);\n    root.style.setProperty('--animation-duration-slow', animationDurations.slow);\n\n    // Animation delays for orchestrated effects\n    root.style.setProperty('--animation-delay-short', '0.2s');\n    root.style.setProperty('--animation-delay-medium', '0.5s');\n    root.style.setProperty('--animation-delay-long', '0.9s');\n\n    // Complex animation durations for special effects\n    root.style.setProperty('--animation-duration-orbit', '15s');\n    root.style.setProperty('--animation-duration-particle', '20s');\n\n    // Glassmorphism intensity\n    const glassAlpha = themeConfig.visual.glassmorphismIntensity / 100;\n    root.style.setProperty('--glass-alpha', glassAlpha.toString());\n    root.style.setProperty('--glass-blur', `${themeConfig.visual.glassmorphismIntensity / 5}px`);\n\n    // Visual theme classes\n    root.className = root.className.replace(/theme-\\w+/g, '');\n    root.classList.add(`theme-${themeConfig.visual.visualTheme}`);\n\n    // Accessibility settings\n    if (themeConfig.accessibility.reducedMotion) {\n      root.style.setProperty('--animation-duration-fast', '0s');\n      root.style.setProperty('--animation-duration-normal', '0s');\n      root.style.setProperty('--animation-duration-slow', '0s');\n    }\n\n    // Custom properties\n    if (themeConfig.customCSSProperties) {\n      Object.entries(themeConfig.customCSSProperties).forEach(([key, value]) => {\n        root.style.setProperty(key, value);\n      });\n    }\n  }, []);\n\n  // State change handlers for focused providers\n  const handleVisualStateChange = useCallback((newVisualState: Partial<VisualThemeState>) => {\n    setConfig(prev => ({\n      ...prev,\n      visual: { ...prev.visual, ...newVisualState }\n    }));\n  }, []);\n\n  const handleLayoutStateChange = useCallback((newLayoutState: Partial<LayoutThemeState>) => {\n    setConfig(prev => ({\n      ...prev,\n      layout: { ...prev.layout, ...newLayoutState }\n    }));\n  }, []);\n\n  const handleAnimationStateChange = useCallback((newAnimationState: Partial<AnimationThemeState>) => {\n    setConfig(prev => ({\n      ...prev,\n      animation: { ...prev.animation, ...newAnimationState }\n    }));\n  }, []);\n\n  const handleAccessibilityStateChange = useCallback((newAccessibilityState: Partial<AccessibilityThemeState>) => {\n    setConfig(prev => ({\n      ...prev,\n      accessibility: { ...prev.accessibility, ...newAccessibilityState }\n    }));\n  }, []);\n\n  return (\n    <ThemeStorageProvider>\n      <VisualThemeProvider\n        state={config.visual}\n        onStateChange={handleVisualStateChange}\n      >\n        <LayoutThemeProvider\n          state={config.layout}\n          onStateChange={handleLayoutStateChange}\n        >\n          <AnimationThemeProvider\n            state={config.animation}\n            onStateChange={handleAnimationStateChange}\n          >\n            <AccessibilityThemeProvider\n              state={config.accessibility}\n              onStateChange={handleAccessibilityStateChange}\n            >\n              {children}\n            </AccessibilityThemeProvider>\n          </AnimationThemeProvider>\n        </LayoutThemeProvider>\n      </VisualThemeProvider>\n    </ThemeStorageProvider>\n  );\n};","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/theme/LayoutThemeProvider.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":124,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":124,"endColumn":28}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Layout Theme Provider\n * AGENT 3: THEMECONTEXT DECOMPOSITION - Task 1.2\n * \n * Focused context for layout and spacing management following ISP\n * Handles: density settings, spacing tokens, and layout configurations\n */\n\nimport React, { createContext, useContext, useCallback } from 'react';\nimport { Density } from '../ThemeContext';\n\n// ================================\n// LAYOUT THEME INTERFACES\n// ================================\n\nexport interface LayoutThemeState {\n  density: Density;\n}\n\nexport interface DensitySpacing {\n  xs: string;\n  sm: string;\n  md: string;\n  lg: string;\n  xl: string;\n}\n\nexport interface LayoutThemeContextType {\n  // Current State\n  density: Density;\n  \n  // Layout Management\n  setDensity: (density: Density) => void;\n  \n  // Utility Functions\n  getDensityMultiplier: () => number;\n  getSpacingTokens: () => DensitySpacing;\n  getDensityClasses: () => string;\n}\n\n// ================================\n// DENSITY UTILITIES\n// ================================\n\nconst densityMultipliers: Record<Density, number> = {\n  compact: 0.8,\n  comfortable: 1,\n  spacious: 1.2,\n};\n\nconst calculateSpacingTokens = (multiplier: number): DensitySpacing => ({\n  xs: `${0.25 * multiplier}rem`,\n  sm: `${0.5 * multiplier}rem`,\n  md: `${1 * multiplier}rem`,\n  lg: `${1.5 * multiplier}rem`,\n  xl: `${2 * multiplier}rem`,\n});\n\n// ================================\n// CONTEXT SETUP\n// ================================\n\nconst LayoutThemeContext = createContext<LayoutThemeContextType | null>(null);\n\nexport interface LayoutThemeProviderProps {\n  children: React.ReactNode;\n  state: LayoutThemeState;\n  onStateChange: (newState: Partial<LayoutThemeState>) => void;\n}\n\n/**\n * Layout Theme Provider Component\n * Manages layout and spacing state following Single Responsibility Principle\n * Only handles density, spacing, and layout-related theme aspects\n */\nexport const LayoutThemeProvider: React.FC<LayoutThemeProviderProps> = ({\n  children,\n  state,\n  onStateChange,\n}) => {\n  // Layout manipulation functions\n  const setDensity = useCallback((density: Density) => {\n    onStateChange({ density });\n  }, [onStateChange]);\n\n  // Utility functions\n  const getDensityMultiplier = useCallback((): number => {\n    return densityMultipliers[state.density];\n  }, [state.density]);\n\n  const getSpacingTokens = useCallback((): DensitySpacing => {\n    const multiplier = densityMultipliers[state.density];\n    return calculateSpacingTokens(multiplier);\n  }, [state.density]);\n\n  const getDensityClasses = useCallback((): string => {\n    return `density-${state.density}`;\n  }, [state.density]);\n\n  const contextValue: LayoutThemeContextType = {\n    // Current State\n    density: state.density,\n    \n    // Layout Management\n    setDensity,\n    \n    // Utility Functions\n    getDensityMultiplier,\n    getSpacingTokens,\n    getDensityClasses,\n  };\n\n  return (\n    <LayoutThemeContext.Provider value={contextValue}>\n      {children}\n    </LayoutThemeContext.Provider>\n  );\n};\n\n/**\n * Hook to access layout theme context\n * Provides type-safe access to layout theme functionality\n */\nexport const useLayoutTheme = (): LayoutThemeContextType => {\n  const context = useContext(LayoutThemeContext);\n  if (!context) {\n    throw new Error('useLayoutTheme must be used within a LayoutThemeProvider');\n  }\n  return context;\n};","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/theme/ThemeStorageProvider.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":276,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":276,"endColumn":29}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Theme Storage Provider\n * AGENT 3: THEMECONTEXT DECOMPOSITION - Task 1.5\n * \n * Focused context for theme persistence management following ISP\n * Handles: localStorage operations, custom presets, and theme persistence\n */\n\nimport React, { createContext, useContext, useCallback } from 'react';\nimport { ThemeConfiguration } from '../ThemeContext';\n\n// ================================\n// THEME STORAGE INTERFACES\n// ================================\n\nexport interface CustomPreset {\n  name: string;\n  config: ThemeConfiguration;\n  created: Date;\n}\n\nexport interface ThemeStorageContextType {\n  // Preset Management\n  saveCustomPreset: (name: string, config: ThemeConfiguration) => Promise<void>;\n  loadCustomPreset: (name: string) => Promise<ThemeConfiguration | null>;\n  deleteCustomPreset: (name: string) => Promise<void>;\n  getCustomPresets: () => Promise<CustomPreset[]>;\n  \n  // Configuration Persistence\n  saveConfiguration: (config: ThemeConfiguration) => Promise<void>;\n  loadConfiguration: () => Promise<ThemeConfiguration | null>;\n  clearConfiguration: () => Promise<void>;\n  \n  // Utility Functions\n  exportConfiguration: (config: ThemeConfiguration) => string;\n  importConfiguration: (jsonString: string) => ThemeConfiguration | null;\n  getStorageInfo: () => Promise<{ used: number; available: number }>;\n}\n\n// ================================\n// STORAGE UTILITIES\n// ================================\n\nconst STORAGE_KEYS = {\n  config: 'pokemon-theme-config',\n  customPresets: 'pokemon-custom-presets',\n} as const;\n\nconst safeJsonParse = <T,>(jsonString: string | null, fallback: T): T => {\n  if (!jsonString) return fallback;\n  try {\n    return JSON.parse(jsonString);\n  } catch (error) {\n    console.warn('Failed to parse JSON:', error);\n    return fallback;\n  }\n};\n\nconst safeLocalStorageOperation = async <T,>(\n  operation: () => T,\n  fallback: T,\n  errorMessage: string\n): Promise<T> => {\n  try {\n    return operation();\n  } catch (error) {\n    console.warn(errorMessage, error);\n    return fallback;\n  }\n};\n\n// ================================\n// CONTEXT SETUP\n// ================================\n\nconst ThemeStorageContext = createContext<ThemeStorageContextType | null>(null);\n\nexport interface ThemeStorageProviderProps {\n  children: React.ReactNode;\n}\n\n/**\n * Theme Storage Provider Component\n * Manages theme persistence following Single Responsibility Principle\n * Only handles storage, persistence, and custom preset management\n */\nexport const ThemeStorageProvider: React.FC<ThemeStorageProviderProps> = ({\n  children,\n}) => {\n  // Custom preset management\n  const saveCustomPreset = useCallback(async (name: string, config: ThemeConfiguration): Promise<void> => {\n    await safeLocalStorageOperation(\n      () => {\n        const customPresets = safeJsonParse(\n          localStorage.getItem(STORAGE_KEYS.customPresets),\n          {}\n        );\n        \n        customPresets[name] = {\n          name,\n          config,\n          created: new Date().toISOString(),\n        };\n        \n        localStorage.setItem(\n          STORAGE_KEYS.customPresets,\n          JSON.stringify(customPresets)\n        );\n      },\n      undefined,\n      'Failed to save custom preset:'\n    );\n  }, []);\n\n  const loadCustomPreset = useCallback(async (name: string): Promise<ThemeConfiguration | null> => {\n    return safeLocalStorageOperation(\n      () => {\n        const customPresets = safeJsonParse(\n          localStorage.getItem(STORAGE_KEYS.customPresets),\n          {}\n        );\n        \n        const preset = customPresets[name];\n        return preset ? preset.config : null;\n      },\n      null,\n      'Failed to load custom preset:'\n    );\n  }, []);\n\n  const deleteCustomPreset = useCallback(async (name: string): Promise<void> => {\n    await safeLocalStorageOperation(\n      () => {\n        const customPresets = safeJsonParse(\n          localStorage.getItem(STORAGE_KEYS.customPresets),\n          {}\n        );\n        \n        delete customPresets[name];\n        \n        localStorage.setItem(\n          STORAGE_KEYS.customPresets,\n          JSON.stringify(customPresets)\n        );\n      },\n      undefined,\n      'Failed to delete custom preset:'\n    );\n  }, []);\n\n  const getCustomPresets = useCallback(async (): Promise<CustomPreset[]> => {\n    return safeLocalStorageOperation(\n      () => {\n        const customPresets = safeJsonParse(\n          localStorage.getItem(STORAGE_KEYS.customPresets),\n          {}\n        );\n        \n        return Object.values(customPresets).map((preset: any) => ({\n          ...preset,\n          created: new Date(preset.created),\n        }));\n      },\n      [],\n      'Failed to get custom presets:'\n    );\n  }, []);\n\n  // Configuration persistence\n  const saveConfiguration = useCallback(async (config: ThemeConfiguration): Promise<void> => {\n    await safeLocalStorageOperation(\n      () => {\n        localStorage.setItem(STORAGE_KEYS.config, JSON.stringify(config));\n      },\n      undefined,\n      'Failed to save theme configuration:'\n    );\n  }, []);\n\n  const loadConfiguration = useCallback(async (): Promise<ThemeConfiguration | null> => {\n    return safeLocalStorageOperation(\n      () => {\n        const stored = localStorage.getItem(STORAGE_KEYS.config);\n        return stored ? JSON.parse(stored) : null;\n      },\n      null,\n      'Failed to load theme configuration:'\n    );\n  }, []);\n\n  const clearConfiguration = useCallback(async (): Promise<void> => {\n    await safeLocalStorageOperation(\n      () => {\n        localStorage.removeItem(STORAGE_KEYS.config);\n      },\n      undefined,\n      'Failed to clear theme configuration:'\n    );\n  }, []);\n\n  // Utility functions\n  const exportConfiguration = useCallback((config: ThemeConfiguration): string => {\n    try {\n      return JSON.stringify(config, null, 2);\n    } catch (error) {\n      console.warn('Failed to export configuration:', error);\n      return '{}';\n    }\n  }, []);\n\n  const importConfiguration = useCallback((jsonString: string): ThemeConfiguration | null => {\n    try {\n      const config = JSON.parse(jsonString);\n      // Basic validation - ensure it has required properties\n      if (config && typeof config === 'object' && config.visualTheme) {\n        return config as ThemeConfiguration;\n      }\n      return null;\n    } catch (error) {\n      console.warn('Failed to import configuration:', error);\n      return null;\n    }\n  }, []);\n\n  const getStorageInfo = useCallback(async (): Promise<{ used: number; available: number }> => {\n    return safeLocalStorageOperation(\n      () => {\n        let used = 0;\n        for (const key in localStorage) {\n          if (localStorage.hasOwnProperty(key)) {\n            used += localStorage[key].length + key.length;\n          }\n        }\n        \n        // Estimate available storage (most browsers limit localStorage to ~5-10MB)\n        const estimated = 5 * 1024 * 1024; // 5MB estimate\n        return {\n          used,\n          available: Math.max(0, estimated - used),\n        };\n      },\n      { used: 0, available: 0 },\n      'Failed to get storage info:'\n    );\n  }, []);\n\n  const contextValue: ThemeStorageContextType = {\n    // Preset Management\n    saveCustomPreset,\n    loadCustomPreset,\n    deleteCustomPreset,\n    getCustomPresets,\n    \n    // Configuration Persistence\n    saveConfiguration,\n    loadConfiguration,\n    clearConfiguration,\n    \n    // Utility Functions\n    exportConfiguration,\n    importConfiguration,\n    getStorageInfo,\n  };\n\n  return (\n    <ThemeStorageContext.Provider value={contextValue}>\n      {children}\n    </ThemeStorageContext.Provider>\n  );\n};\n\n/**\n * Hook to access theme storage context\n * Provides type-safe access to theme storage functionality\n */\nexport const useThemeStorage = (): ThemeStorageContextType => {\n  const context = useContext(ThemeStorageContext);\n  if (!context) {\n    throw new Error('useThemeStorage must be used within a ThemeStorageProvider');\n  }\n  return context;\n};","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/theme/VisualThemeProvider.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":131,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":131,"endColumn":28}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Visual Theme Provider\n * AGENT 3: THEMECONTEXT DECOMPOSITION - Task 1.1\n * \n * Focused context for visual theme management following ISP\n * Handles: visual themes, presets, and visual appearance settings\n */\n\nimport React, { createContext, useContext, useCallback } from 'react';\nimport { VisualTheme, ThemePreset, themePresets } from '../ThemeContext';\n\n// ================================\n// VISUAL THEME INTERFACES\n// ================================\n\nexport interface VisualThemeState {\n  visualTheme: VisualTheme;\n  glassmorphismIntensity: number; // 0-100\n  particleEffectsEnabled: boolean;\n}\n\nexport interface VisualThemeContextType {\n  // Current State\n  visualTheme: VisualTheme;\n  glassmorphismIntensity: number;\n  particleEffectsEnabled: boolean;\n  \n  // Available Presets\n  presets: ThemePreset[];\n  \n  // Theme Management\n  setVisualTheme: (theme: VisualTheme) => void;\n  setGlassmorphismIntensity: (intensity: number) => void;\n  toggleParticleEffects: () => void;\n  \n  // Preset Management\n  applyPreset: (presetId: VisualTheme) => void;\n  getPreset: (presetId: VisualTheme) => ThemePreset | undefined;\n}\n\n// ================================\n// CONTEXT SETUP\n// ================================\n\nconst VisualThemeContext = createContext<VisualThemeContextType | null>(null);\n\nexport interface VisualThemeProviderProps {\n  children: React.ReactNode;\n  state: VisualThemeState;\n  onStateChange: (newState: Partial<VisualThemeState>) => void;\n}\n\n/**\n * Visual Theme Provider Component\n * Manages visual theme state and provides theme manipulation functions\n * Following Single Responsibility Principle - only handles visual appearance\n */\nexport const VisualThemeProvider: React.FC<VisualThemeProviderProps> = ({\n  children,\n  state,\n  onStateChange,\n}) => {\n  // Theme manipulation functions\n  const setVisualTheme = useCallback((theme: VisualTheme) => {\n    onStateChange({ visualTheme: theme });\n  }, [onStateChange]);\n\n  const setGlassmorphismIntensity = useCallback((intensity: number) => {\n    const clampedIntensity = Math.max(0, Math.min(100, intensity));\n    onStateChange({ glassmorphismIntensity: clampedIntensity });\n  }, [onStateChange]);\n\n  const toggleParticleEffects = useCallback(() => {\n    onStateChange({ particleEffectsEnabled: !state.particleEffectsEnabled });\n  }, [onStateChange, state.particleEffectsEnabled]);\n\n  // Preset management\n  const applyPreset = useCallback((presetId: VisualTheme) => {\n    const preset = themePresets.find((p) => p.id === presetId);\n    if (preset && preset.config) {\n      const updates: Partial<VisualThemeState> = {};\n      \n      if (preset.config.visualTheme !== undefined) {\n        updates.visualTheme = preset.config.visualTheme;\n      }\n      if (preset.config.glassmorphismIntensity !== undefined) {\n        updates.glassmorphismIntensity = preset.config.glassmorphismIntensity;\n      }\n      if (preset.config.particleEffectsEnabled !== undefined) {\n        updates.particleEffectsEnabled = preset.config.particleEffectsEnabled;\n      }\n      \n      onStateChange(updates);\n    }\n  }, [onStateChange]);\n\n  const getPreset = useCallback((presetId: VisualTheme) => {\n    return themePresets.find((p) => p.id === presetId);\n  }, []);\n\n  const contextValue: VisualThemeContextType = {\n    // Current State\n    visualTheme: state.visualTheme,\n    glassmorphismIntensity: state.glassmorphismIntensity,\n    particleEffectsEnabled: state.particleEffectsEnabled,\n    \n    // Available Presets\n    presets: themePresets,\n    \n    // Theme Management\n    setVisualTheme,\n    setGlassmorphismIntensity,\n    toggleParticleEffects,\n    \n    // Preset Management\n    applyPreset,\n    getPreset,\n  };\n\n  return (\n    <VisualThemeContext.Provider value={contextValue}>\n      {children}\n    </VisualThemeContext.Provider>\n  );\n};\n\n/**\n * Hook to access visual theme context\n * Provides type-safe access to visual theme functionality\n */\nexport const useVisualTheme = (): VisualThemeContextType => {\n  const context = useContext(VisualThemeContext);\n  if (!context) {\n    throw new Error('useVisualTheme must be used within a VisualThemeProvider');\n  }\n  return context;\n};","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/contexts/theme/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/auction.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/card.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/common.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/ordering.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/product.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/sale.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/sealedProduct.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/models/setProduct.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/domain/services/SalesAnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/form/useCardSelection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/form/useFormInitialization.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'customFieldMappings', 'debug', 'initialData', and 'setValue'. Either include them or remove the dependency array.","line":195,"column":6,"nodeType":"ArrayExpression","endLine":195,"endColumn":27,"suggestions":[{"desc":"Update the dependencies array to be: [isEditing, formType, initialData, debug, setValue, customFieldMappings]","fix":{"range":[5322,5343],"text":"[isEditing, formType, initialData, debug, setValue, customFieldMappings]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/theme/useAccessibilityTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/theme/useAnimationTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/theme/useLayoutTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/theme/useTheme.ts","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"The 'config' object makes the dependencies of useCallback Hook (at line 132) change on every render. To fix this, wrap the initialization of 'config' in its own useMemo() Hook.","line":37,"column":9,"nodeType":"VariableDeclarator","endLine":56,"endColumn":4},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'color' is defined but never used. Allowed unused args must match /^_/u.","line":64,"column":40,"nodeType":null,"messageId":"unusedVar","endLine":64,"endColumn":45}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Composite Theme Hook\n * AGENT 3: THEMECONTEXT DECOMPOSITION - Task 3\n * \n * Composite hook that aggregates all focused theme hooks\n * Maintains backward compatibility with existing useTheme interface\n * Enables gradual migration path for components\n */\n\nimport { useCallback } from 'react';\nimport { useTheme as useNextTheme } from 'next-themes';\nimport { ThemeContextType, ThemeConfiguration, ColorScheme, ThemeColor } from '../../contexts/ThemeContext';\nimport { useVisualTheme } from './useVisualTheme';\nimport { useLayoutTheme } from './useLayoutTheme';\nimport { useAnimationTheme } from './useAnimationTheme';\nimport { useAccessibilityTheme } from './useAccessibilityTheme';\nimport { useThemeStorage } from './useThemeStorage';\nimport { formThemes } from '../../theme/formThemes';\n\n/**\n * Composite Theme Hook\n * Aggregates all focused theme hooks into a single interface\n * Maintains backward compatibility with the original monolithic useTheme\n */\nexport const useTheme = (): ThemeContextType => {\n  // Get focused theme contexts\n  const visualTheme = useVisualTheme();\n  const layoutTheme = useLayoutTheme();\n  const animationTheme = useAnimationTheme();\n  const accessibilityTheme = useAccessibilityTheme();\n  const themeStorage = useThemeStorage();\n  \n  // Get next-themes context for color scheme management\n  const { setTheme: setNextTheme, resolvedTheme } = useNextTheme();\n\n  // Build composite configuration object\n  const config: ThemeConfiguration = {\n    // Visual settings\n    visualTheme: visualTheme.visualTheme,\n    glassmorphismIntensity: visualTheme.glassmorphismIntensity,\n    particleEffectsEnabled: visualTheme.particleEffectsEnabled,\n    \n    // Layout settings\n    density: layoutTheme.density,\n    \n    // Animation settings\n    animationIntensity: animationTheme.animationIntensity,\n    \n    // Accessibility settings\n    highContrast: accessibilityTheme.highContrast,\n    reducedMotion: accessibilityTheme.reducedMotion,\n    \n    // Default values for properties not yet decomposed\n    colorScheme: 'system' as ColorScheme,\n    primaryColor: 'dark' as ThemeColor,\n  };\n\n  // Color scheme management (simplified for backward compatibility)\n  const setColorScheme = useCallback((scheme: ColorScheme) => {\n    setNextTheme(scheme);\n  }, [setNextTheme]);\n\n  // Primary color management (simplified for backward compatibility)\n  const setPrimaryColor = useCallback((color: ThemeColor) => {\n    // This would need to be handled by a color theme provider in a complete implementation\n    console.warn('setPrimaryColor not yet implemented in decomposed context');\n  }, []);\n\n  // Utility functions that combine multiple focused contexts\n  const getThemeClasses = useCallback((): string => {\n    const classes = [\n      `theme-${visualTheme.visualTheme}`,\n      layoutTheme.getDensityClasses(),\n      animationTheme.getAnimationClasses(),\n      accessibilityTheme.getAccessibilityClasses(),\n    ];\n\n    if (!visualTheme.particleEffectsEnabled) {\n      classes.push('no-particles');\n    }\n\n    return classes.join(' ');\n  }, [visualTheme, layoutTheme, animationTheme, accessibilityTheme]);\n\n  const getCSSProperties = useCallback((): Record<string, string> => {\n    const formTheme = formThemes[config.primaryColor];\n    const densityMultiplier = layoutTheme.getDensityMultiplier();\n    const animationDurations = animationTheme.getAnimationDurations();\n    const animationDelays = animationTheme.getAnimationDelays();\n    const complexDurations = animationTheme.getComplexAnimationDurations();\n    const spacingTokens = layoutTheme.getSpacingTokens();\n\n    const properties: Record<string, string> = {\n      // Form theme properties\n      '--theme-primary-gradient': formTheme.button.primary.replace('bg-gradient-to-r ', ''),\n      '--theme-primary-hover': formTheme.button.primaryHover.replace('hover:', ''),\n      '--theme-header-background': formTheme.header.background,\n      '--theme-border-color': formTheme.element.border,\n      '--theme-focus-ring': formTheme.element.focus,\n      \n      // Density properties\n      '--density-multiplier': densityMultiplier.toString(),\n      '--density-spacing-xs': spacingTokens.xs,\n      '--density-spacing-sm': spacingTokens.sm,\n      '--density-spacing-md': spacingTokens.md,\n      '--density-spacing-lg': spacingTokens.lg,\n      '--density-spacing-xl': spacingTokens.xl,\n      \n      // Animation properties\n      '--animation-duration-fast': animationDurations.fast,\n      '--animation-duration-normal': animationDurations.normal,\n      '--animation-duration-slow': animationDurations.slow,\n      '--animation-delay-short': animationDelays.short,\n      '--animation-delay-medium': animationDelays.medium,\n      '--animation-delay-long': animationDelays.long,\n      '--animation-duration-orbit': complexDurations.orbit,\n      '--animation-duration-particle': complexDurations.particle,\n      \n      // Visual properties\n      '--glass-alpha': (visualTheme.glassmorphismIntensity / 100).toString(),\n      '--glass-blur': `${visualTheme.glassmorphismIntensity / 5}px`,\n    };\n\n    // Override animation durations if reduced motion is enabled\n    if (accessibilityTheme.reducedMotion) {\n      properties['--animation-duration-fast'] = '0s';\n      properties['--animation-duration-normal'] = '0s';\n      properties['--animation-duration-slow'] = '0s';\n    }\n\n    return properties;\n  }, [config, visualTheme, layoutTheme, animationTheme, accessibilityTheme]);\n\n  // System theme utilities\n  const getSystemPreference = useCallback((): 'light' | 'dark' => {\n    if (typeof window === 'undefined') {\n      return 'dark';\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  }, []);\n\n  const resetToDefaults = useCallback(() => {\n    // Reset all focused contexts to defaults\n    visualTheme.setVisualTheme('context7-premium');\n    visualTheme.setGlassmorphismIntensity(80);\n    if (visualTheme.particleEffectsEnabled !== true) {\n      visualTheme.toggleParticleEffects();\n    }\n    \n    layoutTheme.setDensity('comfortable');\n    animationTheme.setAnimationIntensity('normal');\n    \n    if (accessibilityTheme.highContrast) {\n      accessibilityTheme.toggleHighContrast();\n    }\n    if (accessibilityTheme.reducedMotion) {\n      accessibilityTheme.toggleReducedMotion();\n    }\n    \n    setNextTheme('system');\n  }, [visualTheme, layoutTheme, animationTheme, accessibilityTheme, setNextTheme]);\n\n  // Build complete ThemeContextType interface for backward compatibility\n  const contextValue: ThemeContextType = {\n    // Current Configuration\n    config,\n    resolvedTheme: (resolvedTheme as 'light' | 'dark') || 'dark',\n\n    // Theme Management (delegated to focused providers)\n    setVisualTheme: visualTheme.setVisualTheme,\n    setColorScheme,\n    setDensity: layoutTheme.setDensity,\n    setAnimationIntensity: animationTheme.setAnimationIntensity,\n    setPrimaryColor,\n\n    // Accessibility (delegated to accessibility provider)\n    toggleHighContrast: accessibilityTheme.toggleHighContrast,\n    toggleReducedMotion: accessibilityTheme.toggleReducedMotion,\n\n    // Advanced Configuration (delegated to visual provider)\n    setGlassmorphismIntensity: visualTheme.setGlassmorphismIntensity,\n    toggleParticleEffects: visualTheme.toggleParticleEffects,\n    setCustomProperties: () => console.warn('setCustomProperties not yet implemented in decomposed context'),\n\n    // Preset Management (delegated to visual and storage providers)\n    applyPreset: visualTheme.applyPreset,\n    saveCustomPreset: themeStorage.saveCustomPreset,\n    loadCustomPreset: async (name: string) => {\n      const config = await themeStorage.loadCustomPreset(name);\n      if (config) {\n        // Apply loaded configuration to all providers\n        // This would need more sophisticated coordination in a complete implementation\n        console.warn('loadCustomPreset partial implementation');\n      }\n    },\n    resetToDefaults,\n\n    // Utility Functions (composed from focused providers)\n    getThemeClasses,\n    getCSSProperties,\n    isThemeLoaded: true, // Simplified for now\n\n    // System Integration\n    getSystemPreference,\n    isSystemTheme: config.colorScheme === 'system',\n  };\n\n  return contextValue;\n};","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/theme/useThemeStorage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/theme/useVisualTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useAccessibilityTheme.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'themeConfig' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":732,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":732,"endColumn":20}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'announceAccessibilityChange', 'resetAccessibilitySettings', 'syncWithSystemPreferences', 'toggleHighContrast', and 'toggleReducedMotion'. Either include them or remove the dependency array.","line":254,"column":6,"nodeType":"ArrayExpression","endLine":254,"endColumn":38,"suggestions":[{"desc":"Update the dependencies array to be: [announceAccessibilityChange, config.enableKeyboardShortcuts, resetAccessibilitySettings, syncWithSystemPreferences, toggleHighContrast, toggleReducedMotion]","fix":{"range":[8097,8129],"text":"[announceAccessibilityChange, config.enableKeyboardShortcuts, resetAccessibilitySettings, syncWithSystemPreferences, toggleHighContrast, toggleReducedMotion]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'announceAccessibilityChange'. Either include it or remove the dependency array.","line":363,"column":6,"nodeType":"ArrayExpression","endLine":363,"endColumn":61,"suggestions":[{"desc":"Update the dependencies array to be: [systemPreferences, themeConfig.highContrast, themeConfig.reducedMotion, accessibilityProvider, announceAccessibilityChange]","fix":{"range":[11043,11098],"text":"[systemPreferences, themeConfig.highContrast, themeConfig.reducedMotion, accessibilityProvider, announceAccessibilityChange]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'announceAccessibilityChange'. Either include it or remove the dependency array.","line":381,"column":6,"nodeType":"ArrayExpression","endLine":381,"endColumn":55,"suggestions":[{"desc":"Update the dependencies array to be: [themeConfig.highContrast, themeConfig.reducedMotion, announceAccessibilityChange, manageFocus, accessibilityProvider]","fix":{"range":[11617,11666],"text":"[themeConfig.highContrast, themeConfig.reducedMotion, announceAccessibilityChange, manageFocus, accessibilityProvider]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'announceAccessibilityChange'. Either include it or remove the dependency array.","line":429,"column":5,"nodeType":"ArrayExpression","endLine":429,"endColumn":68,"suggestions":[{"desc":"Update the dependencies array to be: [announceAccessibilityChange, setHighContrast, setReducedMotion, resetAccessibilitySettings]","fix":{"range":[12992,13055],"text":"[announceAccessibilityChange, setHighContrast, setReducedMotion, resetAccessibilitySettings]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Accessibility Theme Hook\n * Phase 3.2.2: Accessibility theme features ONLY\n *\n * Following CLAUDE.md principles:\n * - Single Responsibility: Accessibility theme management only\n * - Open/Closed: Extensible for new accessibility patterns\n * - DRY: Centralized accessibility theme logic\n * - Dependency Inversion: Abstracts accessibility implementation\n *\n * Integrates with:\n * - ThemeContext.tsx for theme state management\n * - useThemeSwitch.ts for theme switching utilities\n * - AccessibilityTheme.tsx for component rendering\n */\n\nimport { useCallback, useEffect, useState, useRef } from 'react';\nimport { useCentralizedTheme } from '../utils/themeConfig';\nimport { useAccessibilityTheme as useAccessibilityProvider } from '../contexts/theme/AccessibilityThemeProvider';\n\n// ================================\n// ACCESSIBILITY INTERFACES\n// ================================\n\nexport interface AccessibilitySystemPreferences {\n  /** System prefers high contrast */\n  prefersHighContrast: boolean;\n  /** System prefers reduced motion */\n  prefersReducedMotion: boolean;\n  /** System color scheme preference */\n  prefersColorScheme: 'light' | 'dark' | 'no-preference';\n  /** System prefers reduced transparency */\n  prefersReducedTransparency: boolean;\n  /** System prefers reduced data usage */\n  prefersReducedData: boolean;\n}\n\nexport interface AccessibilityThemeConfig {\n  /** Enable automatic system preference detection */\n  autoDetectPreferences?: boolean;\n  /** Enable accessibility keyboard shortcuts */\n  enableKeyboardShortcuts?: boolean;\n  /** High contrast color overrides */\n  highContrastOverrides?: {\n    background?: string;\n    text?: string;\n    border?: string;\n    accent?: string;\n  };\n  /** Reduced motion configuration */\n  reducedMotionOverrides?: {\n    disableTransitions?: boolean;\n    disableAnimations?: boolean;\n    disableParallax?: boolean;\n    disableAutoplay?: boolean;\n  };\n  /** Focus management settings */\n  focusManagement?: {\n    trapFocus?: boolean;\n    restoreFocus?: boolean;\n    skipLinks?: boolean;\n  };\n}\n\nexport interface AccessibilityThemeActions {\n  /** Toggle high contrast mode */\n  toggleHighContrast: () => void;\n  /** Toggle reduced motion mode */\n  toggleReducedMotion: () => void;\n  /** Set high contrast with custom options */\n  setHighContrast: (\n    enabled: boolean,\n    overrides?: AccessibilityThemeConfig['highContrastOverrides']\n  ) => void;\n  /** Set reduced motion with custom options */\n  setReducedMotion: (\n    enabled: boolean,\n    overrides?: AccessibilityThemeConfig['reducedMotionOverrides']\n  ) => void;\n  /** Sync with system preferences */\n  syncWithSystemPreferences: () => void;\n  /** Reset accessibility settings */\n  resetAccessibilitySettings: () => void;\n  /** Apply accessibility preset */\n  applyAccessibilityPreset: (\n    preset: 'maximum' | 'moderate' | 'minimal' | 'off'\n  ) => void;\n}\n\nexport interface AccessibilityThemeState {\n  /** Current accessibility configuration */\n  config: AccessibilityThemeConfig;\n  /** System preferences */\n  systemPreferences: AccessibilitySystemPreferences | null;\n  /** Accessibility mode active */\n  isAccessibilityModeActive: boolean;\n  /** High contrast active */\n  isHighContrastActive: boolean;\n  /** Reduced motion active */\n  isReducedMotionActive: boolean;\n  /** Focus management active */\n  isFocusManagementActive: boolean;\n}\n\n// ================================\n// MAIN ACCESSIBILITY THEME HOOK\n// ================================\n\n/**\n * Main accessibility theme hook\n * Provides comprehensive accessibility theme management\n */\nfunction useAccessibilityTheme(\n  config: AccessibilityThemeConfig = {}\n): AccessibilityThemeState & AccessibilityThemeActions {\n  const themeConfig = useCentralizedTheme();\n  const accessibilityProvider = useAccessibilityProvider();\n  const [systemPreferences, setSystemPreferences] =\n    useState<AccessibilitySystemPreferences | null>(null);\n  const [accessibilityConfig, setAccessibilityConfig] =\n    useState<AccessibilityThemeConfig>(config);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n\n  // ================================\n  // SYSTEM PREFERENCE DETECTION\n  // ================================\n\n  useEffect(() => {\n    if (!config.autoDetectPreferences) {\n      return;\n    }\n\n    const detectSystemPreferences = () => {\n      const preferences: AccessibilitySystemPreferences = {\n        prefersHighContrast: window.matchMedia('(prefers-contrast: high)')\n          .matches,\n        prefersReducedMotion: window.matchMedia(\n          '(prefers-reduced-motion: reduce)'\n        ).matches,\n        prefersColorScheme: window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : window.matchMedia('(prefers-color-scheme: light)').matches\n            ? 'light'\n            : 'no-preference',\n        prefersReducedTransparency: window.matchMedia(\n          '(prefers-reduced-transparency: reduce)'\n        ).matches,\n        prefersReducedData: window.matchMedia('(prefers-reduced-data: reduce)')\n          .matches,\n      };\n\n      setSystemPreferences(preferences);\n      return preferences;\n    };\n\n    // Initial detection\n    const initialPreferences = detectSystemPreferences();\n\n    // Set up media query listeners\n    const mediaQueries = [\n      {\n        query: '(prefers-contrast: high)',\n        handler: () => detectSystemPreferences(),\n      },\n      {\n        query: '(prefers-reduced-motion: reduce)',\n        handler: () => detectSystemPreferences(),\n      },\n      {\n        query: '(prefers-color-scheme: dark)',\n        handler: () => detectSystemPreferences(),\n      },\n      {\n        query: '(prefers-color-scheme: light)',\n        handler: () => detectSystemPreferences(),\n      },\n      {\n        query: '(prefers-reduced-transparency: reduce)',\n        handler: () => detectSystemPreferences(),\n      },\n      {\n        query: '(prefers-reduced-data: reduce)',\n        handler: () => detectSystemPreferences(),\n      },\n    ];\n\n    const mediaQueryLists = mediaQueries.map(({ query, handler }) => {\n      const mql = window.matchMedia(query);\n      mql.addEventListener('change', handler);\n      return { mql, handler };\n    });\n\n    // Auto-apply system preferences if enabled\n    if (initialPreferences.prefersHighContrast && !themeConfig.highContrast) {\n      accessibilityProvider.toggleHighContrast();\n    }\n    if (\n      initialPreferences.prefersReducedMotion &&\n      !themeConfig.reducedMotion\n    ) {\n      accessibilityProvider.toggleReducedMotion();\n    }\n\n    return () => {\n      mediaQueryLists.forEach(({ mql, handler }) => {\n        mql.removeEventListener('change', handler);\n      });\n    };\n  }, [config.autoDetectPreferences, themeConfig, accessibilityProvider]);\n\n  // ================================\n  // KEYBOARD SHORTCUTS\n  // ================================\n\n  useEffect(() => {\n    if (!config.enableKeyboardShortcuts) {\n      return;\n    }\n\n    const handleKeyPress = (event: KeyboardEvent) => {\n      // Only activate with Ctrl/Cmd + Alt modifier for accessibility shortcuts\n      if (!(event.ctrlKey || event.metaKey) || !event.altKey) {\n        return;\n      }\n\n      switch (event.key.toLowerCase()) {\n        case 'c':\n          event.preventDefault();\n          toggleHighContrast();\n          announceAccessibilityChange('High contrast toggled');\n          break;\n        case 'm':\n          event.preventDefault();\n          toggleReducedMotion();\n          announceAccessibilityChange('Reduced motion toggled');\n          break;\n        case 'r':\n          event.preventDefault();\n          resetAccessibilitySettings();\n          announceAccessibilityChange('Accessibility settings reset');\n          break;\n        case 's':\n          event.preventDefault();\n          syncWithSystemPreferences();\n          announceAccessibilityChange('Synced with system preferences');\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.enableKeyboardShortcuts]);\n\n  // ================================\n  // FOCUS MANAGEMENT\n  // ================================\n\n  const manageFocus = useCallback(() => {\n    if (!config.focusManagement?.restoreFocus) {\n      return;\n    }\n\n    // Store current focused element\n    if (document.activeElement && document.activeElement !== document.body) {\n      previousFocusRef.current = document.activeElement as HTMLElement;\n    }\n  }, [config.focusManagement?.restoreFocus]);\n\n  const _restoreFocus = useCallback(() => {\n    if (!config.focusManagement?.restoreFocus || !previousFocusRef.current) {\n      return;\n    }\n\n    try {\n      previousFocusRef.current.focus();\n      previousFocusRef.current = null;\n    } catch (error) {\n      console.warn('Failed to restore focus:', error);\n    }\n  }, [config.focusManagement?.restoreFocus]);\n\n  // ================================\n  // ACCESSIBILITY ACTIONS\n  // ================================\n\n  const toggleHighContrast = useCallback(() => {\n    accessibilityProvider.toggleHighContrast();\n    manageFocus();\n  }, [accessibilityProvider, manageFocus]);\n\n  const toggleReducedMotion = useCallback(() => {\n    accessibilityProvider.toggleReducedMotion();\n    manageFocus();\n  }, [accessibilityProvider, manageFocus]);\n\n  const setHighContrast = useCallback(\n    (\n      enabled: boolean,\n      overrides?: AccessibilityThemeConfig['highContrastOverrides']\n    ) => {\n      if (enabled !== themeConfig.highContrast) {\n        accessibilityProvider.toggleHighContrast();\n      }\n\n      if (overrides) {\n        setAccessibilityConfig((prev) => ({\n          ...prev,\n          highContrastOverrides: overrides,\n        }));\n      }\n\n      manageFocus();\n    },\n    [themeConfig.highContrast, accessibilityProvider, manageFocus]\n  );\n\n  const setReducedMotion = useCallback(\n    (\n      enabled: boolean,\n      overrides?: AccessibilityThemeConfig['reducedMotionOverrides']\n    ) => {\n      if (enabled !== themeConfig.reducedMotion) {\n        accessibilityProvider.toggleReducedMotion();\n      }\n\n      if (overrides) {\n        setAccessibilityConfig((prev) => ({\n          ...prev,\n          reducedMotionOverrides: overrides,\n        }));\n      }\n\n      manageFocus();\n    },\n    [themeConfig.reducedMotion, accessibilityProvider, manageFocus]\n  );\n\n  const syncWithSystemPreferences = useCallback(() => {\n    if (!systemPreferences) {\n      return;\n    }\n\n    let changes = false;\n\n    if (systemPreferences.prefersHighContrast && !themeConfig.highContrast) {\n      accessibilityProvider.toggleHighContrast();\n      changes = true;\n    }\n\n    if (systemPreferences.prefersReducedMotion && !themeConfig.reducedMotion) {\n      accessibilityProvider.toggleReducedMotion();\n      changes = true;\n    }\n\n    if (changes) {\n      announceAccessibilityChange(\n        'Synced with system accessibility preferences'\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [systemPreferences, themeConfig, accessibilityProvider]);\n\n  const resetAccessibilitySettings = useCallback(() => {\n    if (themeConfig.highContrast) {\n      accessibilityProvider.toggleHighContrast();\n    }\n    if (themeConfig.reducedMotion) {\n      accessibilityProvider.toggleReducedMotion();\n    }\n\n    setAccessibilityConfig({\n      autoDetectPreferences: true,\n      enableKeyboardShortcuts: true,\n    });\n\n    announceAccessibilityChange('Accessibility settings reset to defaults');\n    manageFocus();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [themeConfig, accessibilityProvider, manageFocus]);\n\n  const applyAccessibilityPreset = useCallback(\n    (preset: 'maximum' | 'moderate' | 'minimal' | 'off') => {\n      switch (preset) {\n        case 'maximum':\n          setHighContrast(true, {\n            background: '#000000',\n            text: '#ffffff',\n            border: '#ffffff',\n            accent: '#ffff00',\n          });\n          setReducedMotion(true, {\n            disableTransitions: true,\n            disableAnimations: true,\n            disableParallax: true,\n            disableAutoplay: true,\n          });\n          break;\n\n        case 'moderate':\n          setHighContrast(true);\n          setReducedMotion(true, {\n            disableTransitions: false,\n            disableAnimations: true,\n            disableParallax: true,\n            disableAutoplay: false,\n          });\n          break;\n\n        case 'minimal':\n          setHighContrast(false);\n          setReducedMotion(true, {\n            disableTransitions: false,\n            disableAnimations: false,\n            disableParallax: true,\n            disableAutoplay: true,\n          });\n          break;\n\n        case 'off':\n          resetAccessibilitySettings();\n          break;\n      }\n\n      announceAccessibilityChange(`Applied ${preset} accessibility preset`);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [setHighContrast, setReducedMotion, resetAccessibilitySettings]\n  );\n\n  // ================================\n  // ACCESSIBILITY ANNOUNCEMENTS\n  // ================================\n\n  const announceAccessibilityChange = useCallback((message: string) => {\n    // Create a live region announcement for screen readers\n    const announcement = document.createElement('div');\n    announcement.setAttribute('aria-live', 'polite');\n    announcement.setAttribute('aria-atomic', 'true');\n    announcement.className = 'sr-only';\n    announcement.textContent = message;\n\n    document.body.appendChild(announcement);\n\n    // Remove the announcement after a delay\n    setTimeout(() => {\n      if (announcement.parentNode) {\n        announcement.parentNode.removeChild(announcement);\n      }\n    }, 1000);\n  }, []);\n\n  // ================================\n  // DERIVED STATE\n  // ================================\n\n  const isAccessibilityModeActive =\n    themeConfig.highContrast || themeConfig.reducedMotion;\n  const isHighContrastActive = themeConfig.highContrast;\n  const isReducedMotionActive = themeConfig.reducedMotion;\n  const isFocusManagementActive = Boolean(\n    config.focusManagement?.trapFocus || config.focusManagement?.restoreFocus\n  );\n\n  return {\n    // State\n    config: accessibilityConfig,\n    systemPreferences,\n    isAccessibilityModeActive,\n    isHighContrastActive,\n    isReducedMotionActive,\n    isFocusManagementActive,\n\n    // Actions\n    toggleHighContrast,\n    toggleReducedMotion,\n    setHighContrast,\n    setReducedMotion,\n    syncWithSystemPreferences,\n    resetAccessibilitySettings,\n    applyAccessibilityPreset,\n  };\n}\n\n// ================================\n// HIGH CONTRAST THEME HOOK\n// ================================\n\nexport interface HighContrastConfig {\n  /** High contrast intensity (1-10) */\n  intensity?: number;\n  /** Color overrides */\n  colorOverrides?: {\n    background?: string;\n    foreground?: string;\n    accent?: string;\n    border?: string;\n  };\n  /** Auto-apply system preference */\n  autoApply?: boolean;\n}\n\n/**\n * High Contrast Theme Hook\n * Specialized hook for high contrast mode management\n */\nfunction useHighContrastTheme(config: HighContrastConfig = {}) {\n  const themeConfig = useCentralizedTheme();\n  const accessibilityProvider = useAccessibilityProvider();\n  const [intensity, setIntensity] = useState(config.intensity || 5);\n  const [colorOverrides, setColorOverrides] = useState(config.colorOverrides);\n\n  // Monitor system high contrast preference\n  useEffect(() => {\n    if (!config.autoApply) {\n      return;\n    }\n\n    const contrastQuery = window.matchMedia('(prefers-contrast: high)');\n\n    const handleContrastChange = () => {\n      if (contrastQuery.matches && !themeConfig.highContrast) {\n        accessibilityProvider.toggleHighContrast();\n      }\n    };\n\n    handleContrastChange(); // Initial check\n    contrastQuery.addEventListener('change', handleContrastChange);\n\n    return () =>\n      contrastQuery.removeEventListener('change', handleContrastChange);\n  }, [config.autoApply, themeConfig.highContrast, accessibilityProvider]);\n\n  const adjustIntensity = useCallback((newIntensity: number) => {\n    const clampedIntensity = Math.max(1, Math.min(10, newIntensity));\n    setIntensity(clampedIntensity);\n\n    // Update CSS custom property\n    if (typeof document !== 'undefined') {\n      document.documentElement.style.setProperty(\n        '--accessibility-contrast-intensity',\n        (clampedIntensity / 5).toString()\n      );\n    }\n  }, []);\n\n  const updateColorOverrides = useCallback(\n    (overrides: HighContrastConfig['colorOverrides']) => {\n      setColorOverrides(overrides);\n\n      if (typeof document !== 'undefined' && overrides) {\n        const root = document.documentElement;\n\n        Object.entries(overrides).forEach(([key, value]) => {\n          if (value) {\n            root.style.setProperty(`--accessibility-hc-${key}`, value);\n          }\n        });\n      }\n    },\n    []\n  );\n\n  const resetHighContrast = useCallback(() => {\n    setIntensity(5);\n    setColorOverrides(undefined);\n\n    if (typeof document !== 'undefined') {\n      const root = document.documentElement;\n      root.style.removeProperty('--accessibility-contrast-intensity');\n      root.style.removeProperty('--accessibility-hc-background');\n      root.style.removeProperty('--accessibility-hc-foreground');\n      root.style.removeProperty('--accessibility-hc-accent');\n      root.style.removeProperty('--accessibility-hc-border');\n    }\n  }, []);\n\n  return {\n    isHighContrastEnabled: themeConfig.highContrast,\n    intensity,\n    colorOverrides,\n    adjustIntensity,\n    updateColorOverrides,\n    toggleHighContrast: accessibilityProvider.toggleHighContrast,\n    resetHighContrast,\n  };\n}\n\n// ================================\n// REDUCED MOTION THEME HOOK\n// ================================\n\nexport interface ReducedMotionConfig {\n  /** Motion sensitivity level (1-5, 5 = most sensitive) */\n  sensitivityLevel?: number;\n  /** Specific motion preferences */\n  motionPreferences?: {\n    allowEssentialMotion?: boolean;\n    allowHoverEffects?: boolean;\n    allowFocusEffects?: boolean;\n    allowScrollAnimations?: boolean;\n  };\n  /** Auto-apply system preference */\n  autoApply?: boolean;\n}\n\n/**\n * Reduced Motion Theme Hook\n * Specialized hook for motion sensitivity management\n */\nfunction useReducedMotionTheme(config: ReducedMotionConfig = {}) {\n  const themeConfig = useCentralizedTheme();\n  const accessibilityProvider = useAccessibilityProvider();\n  const [sensitivityLevel, setSensitivityLevel] = useState(\n    config.sensitivityLevel || 3\n  );\n  const [motionPreferences, setMotionPreferences] = useState(\n    config.motionPreferences || {\n      allowEssentialMotion: true,\n      allowHoverEffects: false,\n      allowFocusEffects: true,\n      allowScrollAnimations: false,\n    }\n  );\n\n  // Monitor system reduced motion preference\n  useEffect(() => {\n    if (!config.autoApply) {\n      return;\n    }\n\n    const motionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n\n    const handleMotionChange = () => {\n      if (motionQuery.matches && !themeConfig.reducedMotion) {\n        accessibilityProvider.toggleReducedMotion();\n      }\n    };\n\n    handleMotionChange(); // Initial check\n    motionQuery.addEventListener('change', handleMotionChange);\n\n    return () => motionQuery.removeEventListener('change', handleMotionChange);\n  }, [config.autoApply, themeConfig.reducedMotion, accessibilityProvider]);\n\n  const adjustSensitivity = useCallback((newLevel: number) => {\n    const clampedLevel = Math.max(1, Math.min(5, newLevel));\n    setSensitivityLevel(clampedLevel);\n\n    // Update CSS custom property\n    if (typeof document !== 'undefined') {\n      document.documentElement.style.setProperty(\n        '--accessibility-motion-sensitivity',\n        clampedLevel.toString()\n      );\n    }\n  }, []);\n\n  const updateMotionPreferences = useCallback(\n    (preferences: ReducedMotionConfig['motionPreferences']) => {\n      setMotionPreferences((prev) => ({ ...prev, ...preferences }));\n\n      if (typeof document !== 'undefined' && preferences) {\n        const root = document.documentElement;\n\n        Object.entries(preferences).forEach(([key, value]) => {\n          root.style.setProperty(\n            `--accessibility-${key.replace(/([A-Z])/g, '-$1').toLowerCase()}`,\n            value ? 'true' : 'false'\n          );\n        });\n      }\n    },\n    []\n  );\n\n  const resetReducedMotion = useCallback(() => {\n    setSensitivityLevel(3);\n    setMotionPreferences({\n      allowEssentialMotion: true,\n      allowHoverEffects: false,\n      allowFocusEffects: true,\n      allowScrollAnimations: false,\n    });\n\n    if (typeof document !== 'undefined') {\n      const root = document.documentElement;\n      root.style.removeProperty('--accessibility-motion-sensitivity');\n      root.style.removeProperty('--accessibility-allow-essential-motion');\n      root.style.removeProperty('--accessibility-allow-hover-effects');\n      root.style.removeProperty('--accessibility-allow-focus-effects');\n      root.style.removeProperty('--accessibility-allow-scroll-animations');\n    }\n  }, []);\n\n  return {\n    isReducedMotionEnabled: themeConfig.reducedMotion,\n    sensitivityLevel,\n    motionPreferences,\n    adjustSensitivity,\n    updateMotionPreferences,\n    toggleReducedMotion: accessibilityProvider.toggleReducedMotion,\n    resetReducedMotion,\n  };\n}\n\n// ================================\n// FOCUS MANAGEMENT HOOK\n// ================================\n\nexport interface FocusManagementConfig {\n  /** Focus trap enabled */\n  trapFocus?: boolean;\n  /** Focus restore on unmount */\n  restoreFocus?: boolean;\n  /** Enhanced focus indicators */\n  enhancedFocusIndicators?: boolean;\n  /** Focus indicator style */\n  focusIndicatorStyle?: 'ring' | 'outline' | 'glow' | 'border';\n  /** Focus indicator color */\n  focusIndicatorColor?: string;\n  /** Focus indicator thickness */\n  focusIndicatorThickness?: number;\n}\n\n/**\n * Focus Management Hook\n * Provides theme-aware focus management capabilities\n */\nfunction useFocusManagementTheme(config: FocusManagementConfig = {}) {\n  const themeConfig = useCentralizedTheme();\n  const [focusHistory, setFocusHistory] = useState<HTMLElement[]>([]);\n  const trapContainerRef = useRef<HTMLElement | null>(null);\n\n  // Enhanced focus indicators\n  useEffect(() => {\n    if (!config.enhancedFocusIndicators) {\n      return;\n    }\n\n    if (typeof document !== 'undefined') {\n      const root = document.documentElement;\n\n      root.style.setProperty('--accessibility-enhanced-focus', 'true');\n      root.style.setProperty(\n        '--accessibility-focus-style',\n        config.focusIndicatorStyle || 'ring'\n      );\n\n      if (config.focusIndicatorColor) {\n        root.style.setProperty(\n          '--accessibility-focus-color',\n          config.focusIndicatorColor\n        );\n      }\n\n      root.style.setProperty(\n        '--accessibility-focus-thickness',\n        `${config.focusIndicatorThickness || 2}px`\n      );\n    }\n\n    return () => {\n      if (typeof document !== 'undefined') {\n        const root = document.documentElement;\n        root.style.removeProperty('--accessibility-enhanced-focus');\n        root.style.removeProperty('--accessibility-focus-style');\n        root.style.removeProperty('--accessibility-focus-color');\n        root.style.removeProperty('--accessibility-focus-thickness');\n      }\n    };\n  }, [\n    config.enhancedFocusIndicators,\n    config.focusIndicatorStyle,\n    config.focusIndicatorColor,\n    config.focusIndicatorThickness,\n  ]);\n\n  // Focus trap implementation\n  useEffect(() => {\n    if (!config.trapFocus || !trapContainerRef.current) {\n      return;\n    }\n\n    const container = trapContainerRef.current;\n    const focusableElements = container.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    const firstElement = focusableElements[0] as HTMLElement;\n    const lastElement = focusableElements[\n      focusableElements.length - 1\n    ] as HTMLElement;\n\n    const handleTabKey = (event: KeyboardEvent) => {\n      if (event.key !== 'Tab') {\n        return;\n      }\n\n      if (event.shiftKey) {\n        if (document.activeElement === firstElement) {\n          event.preventDefault();\n          lastElement?.focus();\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          event.preventDefault();\n          firstElement?.focus();\n        }\n      }\n    };\n\n    container.addEventListener('keydown', handleTabKey);\n\n    // Focus first element when trap is enabled\n    firstElement?.focus();\n\n    return () => {\n      container.removeEventListener('keydown', handleTabKey);\n    };\n  }, [config.trapFocus]);\n\n  // Focus history management\n  const pushFocusHistory = useCallback((element: HTMLElement) => {\n    setFocusHistory((prev) => [...prev.slice(-9), element]); // Keep last 10 elements\n  }, []);\n\n  const restorePreviousFocus = useCallback(() => {\n    const previousElement = focusHistory[focusHistory.length - 2];\n    if (previousElement && config.restoreFocus) {\n      try {\n        previousElement.focus();\n        setFocusHistory((prev) => prev.slice(0, -1));\n      } catch (error) {\n        console.warn('Failed to restore focus:', error);\n      }\n    }\n  }, [focusHistory, config.restoreFocus]);\n\n  return {\n    trapContainerRef,\n    focusHistory,\n    pushFocusHistory,\n    restorePreviousFocus,\n    enhancedFocusEnabled: config.enhancedFocusIndicators || false,\n    focusStyle: config.focusIndicatorStyle || 'ring',\n  };\n}\n\n// ================================\n// MOTION SENSITIVITY HOOK\n// ================================\n\nexport interface MotionSensitivityConfig {\n  /** Motion sensitivity level (1-5) */\n  sensitivityLevel?: number;\n  /** Disable specific motion types */\n  disabledMotions?: {\n    transitions?: boolean;\n    animations?: boolean;\n    transforms?: boolean;\n    parallax?: boolean;\n    autoplay?: boolean;\n  };\n  /** Allow essential motions only */\n  essentialOnly?: boolean;\n}\n\n/**\n * Motion Sensitivity Hook\n * Advanced motion sensitivity management for users with vestibular disorders\n */\nfunction useMotionSensitivity(config: MotionSensitivityConfig = {}) {\n  const themeConfig = useCentralizedTheme();\n  const accessibilityProvider = useAccessibilityProvider();\n  const [sensitivityLevel, setSensitivityLevel] = useState(\n    config.sensitivityLevel || 3\n  );\n  const [disabledMotions, setDisabledMotions] = useState(\n    config.disabledMotions || {}\n  );\n\n  // Apply motion sensitivity settings to CSS\n  useEffect(() => {\n    if (!themeConfig.reducedMotion) {\n      return;\n    }\n\n    if (typeof document !== 'undefined') {\n      const root = document.documentElement;\n\n      // Set sensitivity level\n      root.style.setProperty(\n        '--accessibility-motion-sensitivity',\n        sensitivityLevel.toString()\n      );\n\n      // Apply motion restrictions\n      Object.entries(disabledMotions).forEach(([motionType, disabled]) => {\n        if (disabled) {\n          root.style.setProperty(\n            `--accessibility-disable-${motionType}`,\n            'true'\n          );\n        }\n      });\n\n      // Essential motion only mode\n      if (config.essentialOnly) {\n        root.style.setProperty('--accessibility-essential-motion-only', 'true');\n      }\n    }\n\n    return () => {\n      if (typeof document !== 'undefined') {\n        const root = document.documentElement;\n        root.style.removeProperty('--accessibility-motion-sensitivity');\n        root.style.removeProperty('--accessibility-essential-motion-only');\n\n        Object.keys(disabledMotions).forEach((motionType) => {\n          root.style.removeProperty(`--accessibility-disable-${motionType}`);\n        });\n      }\n    };\n  }, [\n    themeConfig.reducedMotion,\n    sensitivityLevel,\n    disabledMotions,\n    config.essentialOnly,\n  ]);\n\n  const adjustSensitivity = useCallback((newLevel: number) => {\n    const clampedLevel = Math.max(1, Math.min(5, newLevel));\n    setSensitivityLevel(clampedLevel);\n\n    // Auto-adjust disabled motions based on sensitivity\n    if (clampedLevel >= 4) {\n      setDisabledMotions({\n        transitions: true,\n        animations: true,\n        transforms: true,\n        parallax: true,\n        autoplay: true,\n      });\n    } else if (clampedLevel >= 3) {\n      setDisabledMotions({\n        transitions: false,\n        animations: true,\n        transforms: false,\n        parallax: true,\n        autoplay: true,\n      });\n    } else {\n      setDisabledMotions({\n        transitions: false,\n        animations: false,\n        transforms: false,\n        parallax: true,\n        autoplay: false,\n      });\n    }\n  }, []);\n\n  const toggleMotionType = useCallback(\n    (\n      motionType: keyof MotionSensitivityConfig['disabledMotions'],\n      disabled: boolean\n    ) => {\n      setDisabledMotions((prev) => ({\n        ...prev,\n        [motionType]: disabled,\n      }));\n    },\n    []\n  );\n\n  return {\n    sensitivityLevel,\n    disabledMotions,\n    isReducedMotionEnabled: themeConfig.reducedMotion,\n    adjustSensitivity,\n    toggleMotionType,\n    toggleReducedMotion: accessibilityProvider.toggleReducedMotion,\n  };\n}\n\n// ================================\n// ACCESSIBILITY KEYBOARD SHORTCUTS\n// ================================\n\n/**\n * Accessibility Keyboard Shortcuts Hook\n * Provides keyboard shortcuts for accessibility features\n */\nfunction useAccessibilityKeyboardShortcuts(enabled: boolean = true) {\n  const accessibility = useAccessibilityTheme();\n\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const handleKeyPress = (event: KeyboardEvent) => {\n      // Accessibility shortcuts use Ctrl/Cmd + Alt\n      if (!(event.ctrlKey || event.metaKey) || !event.altKey) {\n        return;\n      }\n\n      switch (event.key.toLowerCase()) {\n        case 'c':\n          event.preventDefault();\n          accessibility.toggleHighContrast();\n          break;\n        case 'm':\n          event.preventDefault();\n          accessibility.toggleReducedMotion();\n          break;\n        case 'r':\n          event.preventDefault();\n          accessibility.resetAccessibilitySettings();\n          break;\n        case 's':\n          event.preventDefault();\n          accessibility.syncWithSystemPreferences();\n          break;\n        case '1':\n          event.preventDefault();\n          accessibility.applyAccessibilityPreset('minimal');\n          break;\n        case '2':\n          event.preventDefault();\n          accessibility.applyAccessibilityPreset('moderate');\n          break;\n        case '3':\n          event.preventDefault();\n          accessibility.applyAccessibilityPreset('maximum');\n          break;\n        case '0':\n          event.preventDefault();\n          accessibility.applyAccessibilityPreset('off');\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, [enabled, accessibility]);\n\n  return {\n    shortcuts: {\n      'Ctrl/Cmd + Alt + C': 'Toggle high contrast mode',\n      'Ctrl/Cmd + Alt + M': 'Toggle reduced motion mode',\n      'Ctrl/Cmd + Alt + R': 'Reset accessibility settings',\n      'Ctrl/Cmd + Alt + S': 'Sync with system preferences',\n      'Ctrl/Cmd + Alt + 1': 'Apply minimal accessibility preset',\n      'Ctrl/Cmd + Alt + 2': 'Apply moderate accessibility preset',\n      'Ctrl/Cmd + Alt + 3': 'Apply maximum accessibility preset',\n      'Ctrl/Cmd + Alt + 0': 'Turn off accessibility features',\n    },\n  };\n}\n\n// ================================\n// EXPORTS\n// ================================\n\nexport default useAccessibilityTheme;\n\nexport {\n  useAccessibilityTheme,\n  useHighContrastTheme,\n  useReducedMotionTheme,\n  useFocusManagementTheme,\n  useMotionSensitivity,\n  useAccessibilityKeyboardShortcuts,\n};\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useActivity.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'fetchActivities' and 'fetchActivityStats'. Either include them or remove the dependency array.","line":442,"column":6,"nodeType":"ArrayExpression","endLine":442,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [fetchActivities, fetchActivityStats]","fix":{"range":[13377,13379],"text":"[fetchActivities, fetchActivityStats]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useAsyncOperation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useAuction.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'currentAuction?._id'. Either include it or remove the dependency array.","line":251,"column":5,"nodeType":"ArrayExpression","endLine":251,"endColumn":48,"suggestions":[{"desc":"Update the dependencies array to be: [currentAuction?._id, currentAuction?.id, deleteAuctionMutation]","fix":{"range":[7770,7813],"text":"[currentAuction?._id, currentAuction?.id, deleteAuctionMutation]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'currentAuction?.id'. Either include it or remove the dependency array.","line":370,"column":5,"nodeType":"ArrayExpression","endLine":370,"endColumn":26,"suggestions":[{"desc":"Update the dependencies array to be: [currentAuction?._id, currentAuction?.id]","fix":{"range":[11393,11414],"text":"[currentAuction?._id, currentAuction?.id]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useAutocomplete.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","line":157,"column":6,"nodeType":"ArrayExpression","endLine":165,"endColumn":4,"suggestions":[{"desc":"Update the dependencies array to be: [state.value, state.isOpen, searchType, filters?.setName, filters?.category, filters.setProductId, disabled, search]","fix":{"range":[5250,5392],"text":"[state.value, state.isOpen, searchType, filters?.setName, filters?.category, filters.setProductId, disabled, search]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has a missing dependency: 'search'. Either include it or remove the dependency array.","line":267,"column":6,"nodeType":"ArrayExpression","endLine":267,"endColumn":46,"suggestions":[{"desc":"Update the dependencies array to be: [hierarchicalConfig?.enableHierarchical, search]","fix":{"range":[7933,7973],"text":"[hierarchicalConfig?.enableHierarchical, search]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useBaseForm.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useCollectionExport.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useCollectionImageExport.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useCollectionOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useCollectionState.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useCollectionStats.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useDataTable.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useDbaExport.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useDebounce.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useExportOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useFetchCollectionItems.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useFormSubmission.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useFormValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useGenericCrudOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useHierarchicalSearch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useImageUpload.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useMarkSold.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useOptimizedSearch.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useMemo has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","line":385,"column":25,"nodeType":"SpreadElement","endLine":385,"endColumn":40,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/usePageLayout.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/usePriceHistory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/usePsaCardOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useRawCardOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useSalesAnalytics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useSealedProductOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useSearch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/hooks/useThemeSwitch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/interfaces/api/ICollectionApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/interfaces/api/IExportApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/interfaces/api/ISearchApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/interfaces/api/ISetProductApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/interfaces/api/IUploadApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/lib/queryClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/Activity.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/AddEditItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/Analytics.tsx","messages":[{"ruleId":null,"nodeType":null,"fatal":true,"severity":2,"message":"Parsing error: Expected corresponding JSX closing tag for 'GlassmorphismContainer'.","line":357,"column":18}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Analytics Page Component - Context7 Award-Winning Design\n *\n * Comprehensive analytics dashboard with advanced charts and metrics.\n * Features premium data visualization, insights, and performance tracking.\n *\n * Following CLAUDE.md + Context7 principles:\n * - Award-winning visual design with interactive charts\n * - Glass-morphism and depth with floating cards\n * - Premium gradients and data visualization\n * - Context7 design system compliance\n * - Advanced analytics and insights\n */\n\nimport {\n  Activity as ActivityIcon,\n  Award,\n  BarChart,\n  BarChart3,\n  CheckCircle,\n  Clock,\n  DollarSign,\n  Edit,\n  Gavel,\n  LineChart,\n  Minus,\n  Package,\n  PieChart,\n  Plus,\n  RefreshCw,\n  Settings,\n  Target,\n  Trash2,\n  TrendingUp,\n} from 'lucide-react';\nimport React, { useEffect, useState } from 'react';\nimport DateRangeFilter, {\n  DateRangeState,\n} from '../components/common/DateRangeFilter';\nimport { ContentLoading } from '../components/common/LoadingStates';\nimport { PageLayout } from '../components/layouts/PageLayout';\nimport {\n  ACTIVITY_TYPES,\n  useActivity,\n  useActivityStats,\n} from '../hooks/useActivity';\nimport { useCollectionStats } from '../hooks/useCollectionStats';\nimport { displayPrice, getRelativeTime } from '../utils/formatting';\nimport { GlassmorphismContainer } from '../components/effects/GlassmorphismContainer';\n\nconst Analytics: React.FC = () => {\n  const [dateRange, setDateRange] = useState<DateRangeState>({\n    preset: 'month',\n  });\n\n  // Context7 Analytics Hooks - Use limited data for analytics\n  const { activities, loading, fetchActivities, refresh } = useActivity({\n    limit: 100,\n  }); // Limit to 100 recent activities for analytics\n\n  const { stats: activityStats } = useActivityStats();\n\n  // Context7 Collection Statistics Hook - for real collection metrics\n  const { totalValueFormatted } = useCollectionStats();\n\n  // Handle navigation\n  const handleNavigation = (path: string) => {\n    window.history.pushState({}, '', path);\n    window.dispatchEvent(new PopStateEvent('popstate'));\n  };\n\n  // Context7 Analytics Data Processing\n  const processAnalyticsData = () => {\n    if (!activities.length) {\n      return null;\n    }\n\n    // Remove any duplicates to ensure clean data\n    const uniqueActivities = activities.filter(\n      (activity, index, self) =>\n        index === self.findIndex((a) => a._id === activity._id)\n    );\n\n    // Activity type distribution with enhanced categorization\n    const typeDistribution = uniqueActivities.reduce(\n      (acc, activity) => {\n        // Use readable labels for activity types\n        const typeLabel = activity.type\n          .replace(/_/g, ' ')\n          .toLowerCase()\n          .replace(/\\b\\w/g, (l) => l.toUpperCase());\n        acc[typeLabel] = (acc[typeLabel] || 0) + 1;\n        return acc;\n      },\n      {} as Record<string, number>\n    );\n\n    // Category-based activity grouping for better insights\n    const categoryStats = {\n      collection: 0,\n      auction: 0,\n      sales: 0,\n      system: 0,\n    };\n\n    uniqueActivities.forEach((activity) => {\n      if (activity.type.includes('CARD') || activity.type.includes('PRICE')) {\n        categoryStats.collection++;\n      } else if (activity.type.includes('AUCTION')) {\n        categoryStats.auction++;\n      } else if (activity.type.includes('SALE')) {\n        categoryStats.sales++;\n      } else {\n        categoryStats.system++;\n      }\n    });\n\n    // Daily activity trends (last 30 days)\n    const dailyTrends = uniqueActivities\n      .filter((activity) => {\n        const activityDate = new Date(activity.timestamp);\n        const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n        return activityDate >= thirtyDaysAgo;\n      })\n      .reduce(\n        (acc, activity) => {\n          const date = new Date(activity.timestamp).toDateString();\n          acc[date] = (acc[date] || 0) + 1;\n          return acc;\n        },\n        {} as Record<string, number>\n      );\n\n    // Value-related activities\n    const valueActivities = uniqueActivities.filter(\n      (activity) =>\n        activity.metadata?.newPrice ||\n        activity.metadata?.salePrice ||\n        activity.metadata?.estimatedValue\n    );\n\n    const totalValue = valueActivities.reduce((sum, activity) => {\n      const value =\n        activity.metadata?.newPrice ||\n        activity.metadata?.salePrice ||\n        activity.metadata?.estimatedValue ||\n        0;\n      return sum + (typeof value === 'number' ? value : 0);\n    }, 0);\n\n    // Calculate total activities correctly\n    const totalActivities = uniqueActivities.length;\n\n    return {\n      typeDistribution,\n      categoryStats,\n      dailyTrends,\n      valueActivities,\n      totalValue,\n      totalActivities,\n      mostActiveDay: Object.entries(dailyTrends).sort(\n        ([, a], [, b]) => b - a\n      )[0],\n    };\n  };\n\n  const analyticsData = processAnalyticsData();\n\n  // Context7 Activity Type Colors - Standard for all activity types\n  const getActivityColor = (type: string) => {\n    const colorMap = {\n      [ACTIVITY_TYPES.CARD_ADDED]: 'emerald',\n      [ACTIVITY_TYPES.CARD_UPDATED]: 'blue',\n      [ACTIVITY_TYPES.CARD_DELETED]: 'red',\n      [ACTIVITY_TYPES.PRICE_UPDATE]: 'amber',\n      [ACTIVITY_TYPES.AUCTION_CREATED]: 'purple',\n      [ACTIVITY_TYPES.AUCTION_UPDATED]: 'indigo',\n      [ACTIVITY_TYPES.AUCTION_DELETED]: 'red',\n      [ACTIVITY_TYPES.AUCTION_ITEM_ADDED]: 'emerald',\n      [ACTIVITY_TYPES.AUCTION_ITEM_REMOVED]: 'orange',\n      [ACTIVITY_TYPES.SALE_COMPLETED]: 'emerald',\n      [ACTIVITY_TYPES.SALE_UPDATED]: 'blue',\n      [ACTIVITY_TYPES.MILESTONE]: 'yellow',\n      [ACTIVITY_TYPES.COLLECTION_STATS]: 'cyan',\n      [ACTIVITY_TYPES.SYSTEM]: 'slate',\n    };\n    return colorMap[type as keyof typeof colorMap] || 'indigo';\n  };\n\n  // Context7 Activity Type Icons - Standard for all activity types\n  const getActivityIcon = (type: string) => {\n    const iconMap = {\n      [ACTIVITY_TYPES.CARD_ADDED]: Plus,\n      [ACTIVITY_TYPES.CARD_UPDATED]: Edit,\n      [ACTIVITY_TYPES.CARD_DELETED]: Trash2,\n      [ACTIVITY_TYPES.PRICE_UPDATE]: TrendingUp,\n      [ACTIVITY_TYPES.AUCTION_CREATED]: Gavel,\n      [ACTIVITY_TYPES.AUCTION_UPDATED]: Edit,\n      [ACTIVITY_TYPES.AUCTION_DELETED]: Trash2,\n      [ACTIVITY_TYPES.AUCTION_ITEM_ADDED]: Plus,\n      [ACTIVITY_TYPES.AUCTION_ITEM_REMOVED]: Minus,\n      [ACTIVITY_TYPES.SALE_COMPLETED]: CheckCircle,\n      [ACTIVITY_TYPES.SALE_UPDATED]: Edit,\n      [ACTIVITY_TYPES.MILESTONE]: Award,\n      [ACTIVITY_TYPES.COLLECTION_STATS]: BarChart,\n      [ACTIVITY_TYPES.SYSTEM]: Settings,\n    };\n    return iconMap[type as keyof typeof iconMap] || ActivityIcon;\n  };\n\n  const timeRangeOptions = [\n    { value: 'today', label: 'Today' },\n    { value: 'week', label: 'This Week' },\n    { value: 'month', label: 'This Month' },\n    { value: 'quarter', label: 'This Quarter' },\n    { value: 'year', label: 'This Year' },\n    { value: 'all', label: 'All Time' },\n  ];\n\n  useEffect(() => {\n    // Convert DateRangeState to the format expected by fetchActivities\n    const rangeParam =\n      dateRange.preset === 'all'\n        ? undefined\n        : dateRange.preset\n          ? dateRange.preset\n          : dateRange.startDate || dateRange.endDate\n            ? {\n                startDate: dateRange.startDate,\n                endDate: dateRange.endDate,\n              }\n            : 'month';\n\n    fetchActivities({ dateRange: rangeParam });\n  }, [dateRange, fetchActivities]); // Add fetchActivities dependency\n\n  return (\n    <PageLayout title=\"Analytics\" subtitle=\"Collection analytics and insights\">\n      <div className=\"min-h-screen bg-gradient-to-br from-[var(--theme-background)] via-purple-950/20 to-indigo-950/30 relative overflow-hidden\">\n        {/* Context7 2025 Futuristic Neural Background - Quantum Analytics Field */}\n        <div className=\"absolute inset-0 opacity-15\">\n          {/* Analytics Neural Network Pattern */}\n          <div\n            className=\"absolute inset-0 animate-pulse\"\n            style={{\n              backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='140' height='140' viewBox='0 0 140 140' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cfilter id='analyticsglow'%3E%3CfeGaussianBlur stdDeviation='2' result='coloredBlur'/%3E%3CfeMerge%3E%3CfeMergeNode in='coloredBlur'/%3E%3CfeMergeNode in='SourceGraphic'/%3E%3C/feMerge%3E%3C/filter%3E%3C/defs%3E%3Cg fill='none' stroke='%2306b6d4' stroke-width='0.3' filter='url(%23analyticsglow)'%3E%3Ccircle cx='70' cy='70' r='3'/%3E%3Cpath d='M20,70 Q45,30 70,70 Q95,110 120,70'/%3E%3Cpath d='M70,20 Q110,45 70,70 Q30,95 70,120'/%3E%3C/g%3E%3C/svg%3E\")`,\n              animationDuration: '8s',\n            }}\n          />\n          {/* Chart Visualization Particles */}\n          <div\n            className=\"absolute inset-0 animate-bounce\"\n            style={{\n              animationDuration: '12s',\n              backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='240' height='240' viewBox='0 0 240 240' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23a855f7' fill-opacity='0.03'%3E%3Crect x='60' y='180' width='8' height='40'/%3E%3Crect x='80' y='160' width='8' height='60'/%3E%3Crect x='100' y='140' width='8' height='80'/%3E%3Crect x='120' y='120' width='8' height='100'/%3E%3Crect x='140' y='100' width='8' height='120'/%3E%3Crect x='160' y='170' width='8' height='50'/%3E%3C/g%3E%3C/svg%3E\")`,\n            }}\n          />\n          {/* Data Flow Grid */}\n          <div\n            className=\"absolute inset-0 opacity-20\"\n            style={{\n              backgroundImage: `linear-gradient(90deg, transparent 97%, rgba(6, 182, 212, 0.08) 100%), linear-gradient(transparent 97%, rgba(168, 85, 247, 0.08) 100%)`,\n              backgroundSize: '60px 60px',\n            }}\n          />\n        </div>\n\n        {/* Floating Analytics Particles */}\n        <div className=\"absolute inset-0 pointer-events-none\">\n          {[...Array(20)].map((_, i) => (\n            <div\n              key={i}\n              className=\"absolute rounded-full opacity-15 animate-pulse\"\n              style={{\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n                width: `${Math.random() * 4 + 1}px`,\n                height: `${Math.random() * 4 + 1}px`,\n                background: `radial-gradient(circle, ${['#06b6d4', '#a855f7', '#10b981', '#f59e0b'][Math.floor(Math.random() * 4)]}, transparent)`,\n                animationDelay: `${Math.random() * 5}s`,\n                animationDuration: `${Math.random() * 6 + 4}s`,\n              }}\n            />\n          ))}\n        </div>\n\n        <div className=\"relative z-10 p-8\">\n          <div className=\"max-w-7xl mx-auto space-y-12\">\n            {/* Context7 2025 Futuristic Glassmorphism Header */}\n            <div className=\"relative group\">\n              <GlassmorphismContainer\n                variant=\"intense\"\n                colorScheme=\"custom\"\n                size=\"xl\"\n                rounded=\"3xl\"\n                pattern=\"neural\"\n                glow=\"intense\"\n                animated={true}\n                customGradient={{\n                  from: 'cyan-500/20',\n                  via: 'purple-500/15',\n                  to: 'emerald-500/20'\n                }}\n              >\n                {/* Holographic border animation */}\n                <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-cyan-400/30 to-transparent opacity-30 group-hover:opacity-100 transition-all duration-1000 animate-pulse\"></div>\n\n                {/* Top accent line */}\n                <div className=\"absolute top-0 left-0 w-full h-[3px] bg-gradient-to-r from-cyan-400 via-purple-500 to-emerald-500 opacity-80 animate-pulse\"></div>\n\n                {/* Floating analytics icon */}\n                <div className=\"absolute top-8 right-8 w-16 h-16 border-2 border-cyan-400/40 rounded-2xl rotate-12 animate-pulse opacity-40 flex items-center justify-center\">\n                  <BarChart3 className=\"w-8 h-8 text-cyan-400\" />\n                </div>\n\n                <div className=\"relative z-10\">\n                  <h1 className=\"text-5xl font-bold bg-gradient-to-r from-cyan-300 via-purple-300 to-emerald-300 bg-clip-text text-transparent mb-4\">\n                    Analytics Dashboard\n                  </h1>\n                  <p className=\"text-xl text-[var(--theme-text-secondary)] font-medium\">\n                    Comprehensive analytics and insights for your collection\n                  </p>\n                </div>\n              </GlassmorphismContainer>\n            </div>\n\n            {/* Analytics Controls */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n              <div className=\"lg:col-span-3\">\n                <DateRangeFilter\n                  value={dateRange}\n                  onChange={setDateRange}\n                  showPresets={true}\n                  showCustomRange={true}\n                  presetOptions={timeRangeOptions}\n                  loading={loading}\n                />\n              </div>\n              <div className=\"flex items-end\">\n                <GlassmorphismContainer\n                  variant=\"medium\"\n                  colorScheme=\"primary\"\n                  size=\"sm\"\n                  rounded=\"2xl\"\n                  interactive={true}\n                  onClick={refresh}\n                  className=\"w-full lg:w-auto flex items-center justify-center cursor-pointer disabled:opacity-50\"\n                >\n                  {/* Button glow effect */}\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-500/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  <RefreshCw\n                    className={`w-5 h-5 text-[var(--theme-text-secondary)] mr-2 ${loading ? 'animate-spin' : 'group-hover:rotate-180'} transition-transform duration-300 relative z-10`}\n                  />\n                  <span className=\"font-medium text-[var(--theme-text-primary)] relative z-10\">\n                    Refresh\n                  </span>\n                </button>\n              </div>\n            </div>\n\n            {/* Context7 Key Metrics Grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n              <GlassmorphismContainer\n                variant=\"intense\"\n                colorScheme=\"custom\"\n                size=\"lg\"\n                rounded=\"3xl\"\n                pattern=\"neural\"\n                glow=\"medium\"\n                interactive={true}\n                customGradient={{\n                  from: 'indigo-500/20',\n                  via: 'purple-500/15',\n                  to: 'cyan-500/20'\n                }}\n              >\n                {/* Holographic border */}\n                <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-indigo-400/30 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-700\"></div>\n\n                <div className=\"flex items-center relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-2xl shadow-xl flex items-center justify-center group-hover:scale-110 group-hover:rotate-3 transition-all duration-500 shadow-[0_0_20px_rgba(99,102,241,0.3)]\">\n                    <ActivityIcon className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div className=\"ml-6\">\n                    <p className=\"text-sm font-bold text-[var(--theme-text-secondary)] tracking-wide uppercase\">\n                      Total Activities\n                    </p>\n                    <p className=\"text-3xl font-bold text-[var(--theme-text-primary)] group-hover:text-indigo-300 transition-colors duration-300\">\n                      {analyticsData?.totalActivities || 0}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n\n              <GlassmorphismContainer\n                variant=\"intense\"\n                colorScheme=\"success\"\n                size=\"lg\"\n                rounded=\"3xl\"\n                pattern=\"neural\"\n                glow=\"medium\"\n                interactive={true}\n              >\n                {/* Holographic border */}\n                <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-emerald-400/30 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-700\"></div>\n\n                <div className=\"flex items-center relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-2xl shadow-xl flex items-center justify-center group-hover:scale-110 group-hover:rotate-3 transition-all duration-500 shadow-[0_0_20px_rgba(16,185,129,0.3)]\">\n                    <TrendingUp className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div className=\"ml-6\">\n                    <p className=\"text-sm font-bold text-[var(--theme-text-secondary)] tracking-wide uppercase\">\n                      This Week\n                    </p>\n                    <p className=\"text-3xl font-bold text-[var(--theme-text-primary)] group-hover:text-emerald-300 transition-colors duration-300\">\n                      {activityStats?.week || 0}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n\n              <GlassmorphismContainer\n                variant=\"intense\"\n                colorScheme=\"warning\"\n                size=\"lg\"\n                rounded=\"3xl\"\n                pattern=\"neural\"\n                glow=\"medium\"\n                interactive={true}\n              >\n                {/* Holographic border */}\n                <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-amber-400/30 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-700\"></div>\n\n                <div className=\"flex items-center relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-amber-500 to-orange-600 rounded-2xl shadow-xl flex items-center justify-center group-hover:scale-110 group-hover:rotate-3 transition-all duration-500 shadow-[0_0_20px_rgba(245,158,11,0.3)]\">\n                    <DollarSign className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div className=\"ml-6\">\n                    <p className=\"text-sm font-bold text-[var(--theme-text-secondary)] tracking-wide uppercase\">\n                      Total Value\n                    </p>\n                    <p className=\"text-3xl font-bold text-[var(--theme-text-primary)] group-hover:text-amber-300 transition-colors duration-300\">\n                      {totalValueFormatted || '--'}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n\n              <GlassmorphismContainer\n                variant=\"intense\"\n                colorScheme=\"custom\"\n                size=\"lg\"\n                rounded=\"3xl\"\n                pattern=\"neural\"\n                glow=\"medium\"\n                interactive={true}\n                customGradient={{\n                  from: 'purple-500/20',\n                  via: 'violet-500/15',\n                  to: 'pink-500/20'\n                }}\n              >\n                {/* Holographic border */}\n                <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-purple-400/30 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-700\"></div>\n\n                <div className=\"flex items-center relative z-10\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-violet-600 rounded-2xl shadow-xl flex items-center justify-center group-hover:scale-110 group-hover:rotate-3 transition-all duration-500 shadow-[0_0_20px_rgba(147,51,234,0.3)]\">\n                    <Clock className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div className=\"ml-6\">\n                    <p className=\"text-sm font-bold text-[var(--theme-text-secondary)] tracking-wide uppercase\">\n                      Last Activity\n                    </p>\n                    <p className=\"text-lg font-bold text-[var(--theme-text-primary)] group-hover:text-purple-300 transition-colors duration-300\">\n                      {activityStats?.lastActivity\n                        ? getRelativeTime(activityStats.lastActivity)\n                        : 'No activity'}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n            </div>\n\n            {/* Context7 Category Overview */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <GlassmorphismContainer\n                variant=\"medium\"\n                colorScheme=\"success\"\n                size=\"md\"\n                rounded=\"2xl\"\n                glow=\"subtle\"\n                interactive={true}\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-emerald-500 to-teal-600 rounded-xl flex items-center justify-center shadow-[0_0_15px_rgba(16,185,129,0.3)] group-hover:scale-110 transition-transform duration-300\">\n                    <Package className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-semibold text-[var(--theme-text-secondary)] uppercase tracking-wide\">\n                      Collection\n                    </p>\n                    <p className=\"text-2xl font-bold text-[var(--theme-text-primary)]\">\n                      {analyticsData?.categoryStats.collection || 0}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n\n              <GlassmorphismContainer\n                variant=\"medium\"\n                colorScheme=\"custom\"\n                size=\"md\"\n                rounded=\"2xl\"\n                glow=\"subtle\"\n                interactive={true}\n                customGradient={{\n                  from: 'purple-500/20',\n                  via: 'violet-500/15',\n                  to: 'pink-500/20'\n                }}\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-violet-600 rounded-xl flex items-center justify-center shadow-[0_0_15px_rgba(147,51,234,0.3)] group-hover:scale-110 transition-transform duration-300\">\n                    <Gavel className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-semibold text-[var(--theme-text-secondary)] uppercase tracking-wide\">\n                      Auctions\n                    </p>\n                    <p className=\"text-2xl font-bold text-[var(--theme-text-primary)]\">\n                      {analyticsData?.categoryStats.auction || 0}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n\n              <GlassmorphismContainer\n                variant=\"medium\"\n                colorScheme=\"success\"\n                size=\"md\"\n                rounded=\"2xl\"\n                glow=\"subtle\"\n                interactive={true}\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-emerald-500 to-green-600 rounded-xl flex items-center justify-center shadow-[0_0_15px_rgba(16,185,129,0.3)] group-hover:scale-110 transition-transform duration-300\">\n                    <DollarSign className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-semibold text-[var(--theme-text-secondary)] uppercase tracking-wide\">\n                      Sales\n                    </p>\n                    <p className=\"text-2xl font-bold text-[var(--theme-text-primary)]\">\n                      {analyticsData?.categoryStats.sales || 0}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n\n              <GlassmorphismContainer\n                variant=\"medium\"\n                colorScheme=\"secondary\"\n                size=\"md\"\n                rounded=\"2xl\"\n                glow=\"subtle\"\n                interactive={true}\n              >\n                <div className=\"flex items-center\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-slate-500 to-slate-600 rounded-xl flex items-center justify-center shadow-[0_0_15px_rgba(100,116,139,0.3)] group-hover:scale-110 transition-transform duration-300\">\n                    <Settings className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"text-sm font-semibold text-[var(--theme-text-secondary)] uppercase tracking-wide\">\n                      System\n                    </p>\n                    <p className=\"text-2xl font-bold text-[var(--theme-text-primary)]\">\n                      {analyticsData?.categoryStats.system || 0}\n                    </p>\n                  </div>\n                </div>\n              </GlassmorphismContainer>\n            </div>\n\n            {/* Context7 Activity Type Distribution */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              <GlassmorphismContainer\n                variant=\"intense\"\n                colorScheme=\"custom\"\n                size=\"lg\"\n                rounded=\"3xl\"\n                pattern=\"neural\"\n                glow=\"medium\"\n                interactive={true}\n                customGradient={{\n                  from: 'cyan-500/10',\n                  via: 'purple-500/5',\n                  to: 'pink-500/10'\n                }}\n              >\n                {/* Holographic border */}\n                <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-cyan-400/20 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-1000\"></div>\n\n                <div className=\"relative z-10\">\n                  <h3 className=\"text-2xl font-bold text-[var(--theme-text-primary)] mb-6 flex items-center\">\n                    <PieChart className=\"w-6 h-6 mr-3 text-cyan-400\" />\n                    Activity Distribution\n                  </h3>\n\n                  {analyticsData && (\n                    <div className=\"space-y-4\">\n                      {Object.entries(analyticsData.typeDistribution)\n                        .sort(([, a], [, b]) => b - a) // Sort by count descending\n                        .map(([typeLabel, count]) => {\n                          // Convert back to type constant for icon/color lookup\n                          const typeKey = typeLabel\n                            .toUpperCase()\n                            .replace(/ /g, '_');\n                          const IconComponent = getActivityIcon(typeKey);\n                          const color = getActivityColor(typeKey);\n                          const percentage = (\n                            (count / (analyticsData?.totalActivities || 1)) *\n                            100\n                          ).toFixed(1);\n\n                          return (\n                            <div\n                              key={typeLabel}\n                              className=\"flex items-center justify-between p-4 rounded-2xl backdrop-blur-sm bg-[var(--theme-surface)]/50 border border-[var(--theme-border)]/30 hover:bg-[var(--theme-surface-hover)]/70 transition-all duration-300 group/item\"\n                            >\n                              <div className=\"flex items-center\">\n                                <div\n                                  className={`w-10 h-10 bg-gradient-to-br from-${color}-500 to-${color}-600 rounded-xl flex items-center justify-center mr-4 group-hover/item:scale-110 transition-transform duration-300 shadow-[0_0_10px_rgba(99,102,241,0.3)]`}\n                                >\n                                  <IconComponent className=\"w-5 h-5 text-white\" />\n                                </div>\n                                <div>\n                                  <p className=\"font-semibold text-[var(--theme-text-primary)]\">\n                                    {typeLabel}\n                                  </p>\n                                  <p className=\"text-sm text-[var(--theme-text-secondary)]\">\n                                    {count} event{count !== 1 ? 's' : ''}\n                                  </p>\n                                </div>\n                              </div>\n                              <div className=\"text-right\">\n                                <p className=\"text-lg font-bold text-[var(--theme-text-primary)] group-hover/item:text-cyan-300 transition-colors duration-300\">\n                                  {percentage}%\n                                </p>\n                                <div className=\"w-16 h-2 bg-[var(--theme-surface)] rounded-full overflow-hidden border border-[var(--theme-border)]\">\n                                  <div\n                                    className={`h-full bg-gradient-to-r from-${color}-500 to-${color}-600 transition-all duration-500 group-hover/item:animate-pulse`}\n                                    style={{ width: `${percentage}%` }}\n                                  ></div>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <GlassmorphismContainer\n                variant=\"intense\"\n                colorScheme=\"custom\"\n                size=\"lg\"\n                rounded=\"3xl\"\n                pattern=\"neural\"\n                glow=\"medium\"\n                interactive={true}\n                customGradient={{\n                  from: 'emerald-500/10',\n                  via: 'purple-500/5',\n                  to: 'amber-500/10'\n                }}\n              >\n                {/* Holographic border */}\n                <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-emerald-400/20 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-1000\"></div>\n\n                <div className=\"relative z-10\">\n                  <h3 className=\"text-2xl font-bold text-[var(--theme-text-primary)] mb-6 flex items-center\">\n                    <Target className=\"w-6 h-6 mr-3 text-emerald-400\" />\n                    Key Insights\n                  </h3>\n\n                  <div className=\"space-y-6\">\n                    <GlassmorphismContainer\n                      variant=\"medium\"\n                      colorScheme=\"success\"\n                      size=\"md\"\n                      rounded=\"2xl\"\n                      interactive={true}\n                      className=\"hover:border-emerald-400/40 transition-colors duration-300\"\n                    >\n                      <div className=\"flex items-center mb-3\">\n                        <Award className=\"w-5 h-5 text-emerald-400 mr-2\" />\n                        <h4 className=\"font-bold text-[var(--theme-text-primary)]\">\n                          Most Active Day\n                        </h4>\n                      </div>\n                      <p className=\"text-[var(--theme-text-secondary)]\">\n                        {analyticsData?.mostActiveDay &&\n                        analyticsData.mostActiveDay[1] > 0\n                          ? `${new Date(analyticsData.mostActiveDay[0]).toLocaleDateString()} with ${analyticsData.mostActiveDay[1]} activities`\n                          : 'Not enough data yet'}\n                      </p>\n                    </GlassmorphismContainer>\n\n                    <GlassmorphismContainer\n                      variant=\"medium\"\n                      colorScheme=\"warning\"\n                      size=\"md\"\n                      rounded=\"2xl\"\n                      interactive={true}\n                      className=\"hover:border-purple-400/40 transition-colors duration-300\"\n                    >\n                      <div className=\"flex items-center mb-3\">\n                        <TrendingUp className=\"w-5 h-5 text-purple-400 mr-2\" />\n                        <h4 className=\"font-bold text-[var(--theme-text-primary)]\">\n                          Activity Trend\n                        </h4>\n                      </div>\n                      <p className=\"text-[var(--theme-text-secondary)]\">\n                        {analyticsData?.totalActivities\n                          ? `${analyticsData.totalActivities} total activities tracked`\n                          : 'Start using the app to see trends'}\n                      </p>\n                    </GlassmorphismContainer>\n\n                    <div className=\"p-6 rounded-2xl backdrop-blur-sm bg-gradient-to-r from-amber-500/10 to-orange-500/10 border border-amber-400/20 hover:border-amber-400/40 transition-colors duration-300\">\n                      <div className=\"flex items-center mb-3\">\n                        <DollarSign className=\"w-5 h-5 text-amber-400 mr-2\" />\n                        <h4 className=\"font-bold text-[var(--theme-text-primary)]\">\n                          Value Tracking\n                        </h4>\n                      </div>\n                      <p className=\"text-[var(--theme-text-secondary)]\">\n                        {analyticsData?.valueActivities.length || 0} activities\n                        with price/value data\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Context7 Recent Activity Timeline */}\n            <GlassmorphismContainer\n              variant=\"intense\"\n              colorScheme=\"custom\"\n              size=\"lg\"\n              rounded=\"3xl\"\n              pattern=\"neural\"\n              glow=\"medium\"\n              interactive={true}\n              customGradient={{\n                from: 'cyan-500/10',\n                via: 'indigo-500/5',\n                to: 'purple-500/10'\n              }}\n            >\n              {/* Holographic border */}\n              <div className=\"absolute inset-0 rounded-3xl bg-gradient-to-r from-transparent via-indigo-400/20 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-1000\"></div>\n\n              <div className=\"relative z-10\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-2xl font-bold text-[var(--theme-text-primary)] flex items-center\">\n                    <LineChart className=\"w-6 h-6 mr-3 text-indigo-400\" />\n                    Recent Activity Timeline\n                  </h3>\n                  <button\n                    onClick={() => handleNavigation('/activity')}\n                    className=\"px-4 py-2 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-xl font-medium hover:shadow-lg transition-all duration-300 hover:scale-105\"\n                  >\n                    View All Activities\n                  </button>\n                </div>\n\n                {loading ? (\n                  <ContentLoading text=\"Loading analytics...\" />\n                ) : analyticsData?.totalActivities ? (\n                  <div className=\"space-y-4\">\n                    {activities\n                      .filter(\n                        (activity, index, self) =>\n                          index ===\n                          self.findIndex((a) => a._id === activity._id)\n                      )\n                      .slice(0, 10)\n                      .map((activity, index) => {\n                        const IconComponent = getActivityIcon(activity.type);\n                        const color = getActivityColor(activity.type);\n\n                        return (\n                          <div\n                            key={`${activity._id}-${index}`}\n                            className=\"flex items-center p-4 rounded-2xl backdrop-blur-sm bg-[var(--theme-surface)]/50 border border-[var(--theme-border)]/30 hover:bg-[var(--theme-surface-hover)]/70 transition-all duration-300 group/activity hover:shadow-md\"\n                          >\n                            <div\n                              className={`w-12 h-12 bg-gradient-to-br from-${color}-500 to-${color}-600 rounded-xl flex items-center justify-center mr-4 shadow-lg group-hover/activity:scale-110 transition-transform duration-300 shadow-[0_0_15px_rgba(99,102,241,0.3)]`}\n                            >\n                              <IconComponent className=\"w-6 h-6 text-white\" />\n                            </div>\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center gap-2 mb-1\">\n                                <p className=\"font-semibold text-[var(--theme-text-primary)] group-hover/activity:text-indigo-300 transition-colors duration-300\">\n                                  {activity.title}\n                                </p>\n                                {activity.priority === 'HIGH' && (\n                                  <span className=\"px-2 py-1 bg-red-100 text-red-700 text-xs font-medium rounded-full\">\n                                    High Priority\n                                  </span>\n                                )}\n                                {activity.priority === 'CRITICAL' && (\n                                  <span className=\"px-2 py-1 bg-red-200 text-red-800 text-xs font-bold rounded-full\">\n                                    Critical\n                                  </span>\n                                )}\n                              </div>\n                              <p className=\"text-sm text-[var(--theme-text-secondary)]\">\n                                {activity.description}\n                              </p>\n                              {activity.metadata?.cardName && (\n                                <p className=\"text-xs text-[var(--theme-text-tertiary)] mt-1\">\n                                  Card: {activity.metadata.cardName}\n                                  {activity.metadata.setName &&\n                                    ` • ${activity.metadata.setName}`}\n                                </p>\n                              )}\n                              {activity.metadata?.auctionTitle && (\n                                <p className=\"text-xs text-[var(--theme-text-tertiary)] mt-1\">\n                                  Auction: {activity.metadata.auctionTitle}\n                                </p>\n                              )}\n                            </div>\n                            <div className=\"text-right\">\n                              <p className=\"text-sm text-[var(--theme-text-secondary)] font-medium\">\n                                {getRelativeTime(activity.timestamp)}\n                              </p>\n                              {(activity.metadata?.newPrice ||\n                                activity.metadata?.salePrice ||\n                                activity.metadata?.estimatedValue) && (\n                                <p className=\"text-sm font-semibold text-emerald-400\">\n                                  {displayPrice(\n                                    activity.metadata.newPrice ||\n                                      activity.metadata.salePrice ||\n                                      activity.metadata.estimatedValue\n                                  )}\n                                </p>\n                              )}\n                              {activity.metadata?.priceChangePercentage && (\n                                <p\n                                  className={`text-xs font-medium ${activity.metadata.priceChangePercentage > 0 ? 'text-emerald-400' : 'text-red-400'}`}\n                                >\n                                  {activity.metadata.priceChangePercentage > 0\n                                    ? '+'\n                                    : ''}\n                                  {activity.metadata.priceChangePercentage.toFixed(\n                                    1\n                                  )}\n                                  %\n                                </p>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                  </div>\n                ) : (\n                  <div className=\"text-center py-16\">\n                    <div className=\"w-20 h-20 bg-gradient-to-br from-cyan-500/20 to-purple-500/20 rounded-3xl flex items-center justify-center mx-auto mb-6 border border-[var(--theme-border)] shadow-xl backdrop-blur-sm\">\n                      <BarChart3 className=\"w-8 h-8 text-[var(--theme-text-secondary)]\" />\n                    </div>\n                    <h4 className=\"text-xl font-bold text-[var(--theme-text-primary)] mb-3\">\n                      No Data Available\n                    </h4>\n                    <p className=\"text-[var(--theme-text-secondary)] font-medium max-w-md mx-auto leading-relaxed\">\n                      Start using the collection management features to see\n                      analytics here.\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default Analytics;\n","usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/AuctionDetail.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/AuctionEdit.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/Auctions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/Collection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/CollectionItemDetail.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/CreateAuction.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/DbaExport.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/SalesAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/SealedProductSearch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/pages/SetSearch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/CollectionApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/CompositeCollectionApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/ExportApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/SearchApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/ServiceRegistry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/SetProductApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/UploadApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/base/BaseApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/base/ErrorHandlingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/base/HttpClientInterface.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/base/UnifiedHttpClient.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/base/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/collection/PsaCardApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/collection/RawCardApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/collection/SealedProductApiService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/collection/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/services/forms/FormValidationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/test/setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/theme/formThemes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/types/themeTypes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/apiLogger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/apiOptimization.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/classNameUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/common.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/constants.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/cosmicEffects.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/errorHandler.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/exportUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/fileOperations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/formValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/formatting.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/navigation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/orderingUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/responseTransformer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/searchHelpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/storageUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/themeConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/themeDebug.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/themeExport.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/utils/themeUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/oliver/apps/pokemon-collection/pokemon-collection-frontend/src/vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]